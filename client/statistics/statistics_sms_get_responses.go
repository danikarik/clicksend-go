// Code generated by go-swagger; DO NOT EDIT.

package statistics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// StatisticsSMSGetReader is a Reader for the StatisticsSMSGet structure.
type StatisticsSMSGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatisticsSMSGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStatisticsSMSGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStatisticsSMSGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewStatisticsSMSGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStatisticsSMSGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStatisticsSMSGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewStatisticsSMSGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewStatisticsSMSGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewStatisticsSMSGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStatisticsSMSGetOK creates a StatisticsSMSGetOK with default headers values
func NewStatisticsSMSGetOK() *StatisticsSMSGetOK {
	return &StatisticsSMSGetOK{}
}

/*StatisticsSMSGetOK handles this case with default header values.

SUCCESS
*/
type StatisticsSMSGetOK struct {
	Payload interface{}
}

func (o *StatisticsSMSGetOK) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetOK  %+v", 200, o.Payload)
}

func (o *StatisticsSMSGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetBadRequest creates a StatisticsSMSGetBadRequest with default headers values
func NewStatisticsSMSGetBadRequest() *StatisticsSMSGetBadRequest {
	return &StatisticsSMSGetBadRequest{}
}

/*StatisticsSMSGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type StatisticsSMSGetBadRequest struct {
	Payload interface{}
}

func (o *StatisticsSMSGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetBadRequest  %+v", 400, o.Payload)
}

func (o *StatisticsSMSGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetUnauthorized creates a StatisticsSMSGetUnauthorized with default headers values
func NewStatisticsSMSGetUnauthorized() *StatisticsSMSGetUnauthorized {
	return &StatisticsSMSGetUnauthorized{}
}

/*StatisticsSMSGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type StatisticsSMSGetUnauthorized struct {
	Payload interface{}
}

func (o *StatisticsSMSGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *StatisticsSMSGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetForbidden creates a StatisticsSMSGetForbidden with default headers values
func NewStatisticsSMSGetForbidden() *StatisticsSMSGetForbidden {
	return &StatisticsSMSGetForbidden{}
}

/*StatisticsSMSGetForbidden handles this case with default header values.

FORBIDDEN
*/
type StatisticsSMSGetForbidden struct {
	Payload interface{}
}

func (o *StatisticsSMSGetForbidden) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetForbidden  %+v", 403, o.Payload)
}

func (o *StatisticsSMSGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetNotFound creates a StatisticsSMSGetNotFound with default headers values
func NewStatisticsSMSGetNotFound() *StatisticsSMSGetNotFound {
	return &StatisticsSMSGetNotFound{}
}

/*StatisticsSMSGetNotFound handles this case with default header values.

NOT_FOUND
*/
type StatisticsSMSGetNotFound struct {
	Payload interface{}
}

func (o *StatisticsSMSGetNotFound) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetNotFound  %+v", 404, o.Payload)
}

func (o *StatisticsSMSGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetMethodNotAllowed creates a StatisticsSMSGetMethodNotAllowed with default headers values
func NewStatisticsSMSGetMethodNotAllowed() *StatisticsSMSGetMethodNotAllowed {
	return &StatisticsSMSGetMethodNotAllowed{}
}

/*StatisticsSMSGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type StatisticsSMSGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *StatisticsSMSGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *StatisticsSMSGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetTooManyRequests creates a StatisticsSMSGetTooManyRequests with default headers values
func NewStatisticsSMSGetTooManyRequests() *StatisticsSMSGetTooManyRequests {
	return &StatisticsSMSGetTooManyRequests{}
}

/*StatisticsSMSGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type StatisticsSMSGetTooManyRequests struct {
	Payload interface{}
}

func (o *StatisticsSMSGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] statisticsSmsGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *StatisticsSMSGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatisticsSMSGetDefault creates a StatisticsSMSGetDefault with default headers values
func NewStatisticsSMSGetDefault(code int) *StatisticsSMSGetDefault {
	return &StatisticsSMSGetDefault{
		_statusCode: code,
	}
}

/*StatisticsSMSGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type StatisticsSMSGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the statistics Sms get default response
func (o *StatisticsSMSGetDefault) Code() int {
	return o._statusCode
}

func (o *StatisticsSMSGetDefault) Error() string {
	return fmt.Sprintf("[GET /statistics/sms][%d] StatisticsSmsGet default  %+v", o._statusCode, o.Payload)
}

func (o *StatisticsSMSGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
