// Code generated by go-swagger; DO NOT EDIT.

package master_email_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// MasterEmailTemplateCategoryGetReader is a Reader for the MasterEmailTemplateCategoryGet structure.
type MasterEmailTemplateCategoryGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MasterEmailTemplateCategoryGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMasterEmailTemplateCategoryGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewMasterEmailTemplateCategoryGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewMasterEmailTemplateCategoryGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewMasterEmailTemplateCategoryGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewMasterEmailTemplateCategoryGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewMasterEmailTemplateCategoryGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewMasterEmailTemplateCategoryGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewMasterEmailTemplateCategoryGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMasterEmailTemplateCategoryGetOK creates a MasterEmailTemplateCategoryGetOK with default headers values
func NewMasterEmailTemplateCategoryGetOK() *MasterEmailTemplateCategoryGetOK {
	return &MasterEmailTemplateCategoryGetOK{}
}

/*MasterEmailTemplateCategoryGetOK handles this case with default header values.

SUCCESS
*/
type MasterEmailTemplateCategoryGetOK struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetOK) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetOK  %+v", 200, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetBadRequest creates a MasterEmailTemplateCategoryGetBadRequest with default headers values
func NewMasterEmailTemplateCategoryGetBadRequest() *MasterEmailTemplateCategoryGetBadRequest {
	return &MasterEmailTemplateCategoryGetBadRequest{}
}

/*MasterEmailTemplateCategoryGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type MasterEmailTemplateCategoryGetBadRequest struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetBadRequest  %+v", 400, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetUnauthorized creates a MasterEmailTemplateCategoryGetUnauthorized with default headers values
func NewMasterEmailTemplateCategoryGetUnauthorized() *MasterEmailTemplateCategoryGetUnauthorized {
	return &MasterEmailTemplateCategoryGetUnauthorized{}
}

/*MasterEmailTemplateCategoryGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type MasterEmailTemplateCategoryGetUnauthorized struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetUnauthorized  %+v", 401, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetForbidden creates a MasterEmailTemplateCategoryGetForbidden with default headers values
func NewMasterEmailTemplateCategoryGetForbidden() *MasterEmailTemplateCategoryGetForbidden {
	return &MasterEmailTemplateCategoryGetForbidden{}
}

/*MasterEmailTemplateCategoryGetForbidden handles this case with default header values.

FORBIDDEN
*/
type MasterEmailTemplateCategoryGetForbidden struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetForbidden) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetForbidden  %+v", 403, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetNotFound creates a MasterEmailTemplateCategoryGetNotFound with default headers values
func NewMasterEmailTemplateCategoryGetNotFound() *MasterEmailTemplateCategoryGetNotFound {
	return &MasterEmailTemplateCategoryGetNotFound{}
}

/*MasterEmailTemplateCategoryGetNotFound handles this case with default header values.

NOT_FOUND
*/
type MasterEmailTemplateCategoryGetNotFound struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetNotFound) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetNotFound  %+v", 404, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetMethodNotAllowed creates a MasterEmailTemplateCategoryGetMethodNotAllowed with default headers values
func NewMasterEmailTemplateCategoryGetMethodNotAllowed() *MasterEmailTemplateCategoryGetMethodNotAllowed {
	return &MasterEmailTemplateCategoryGetMethodNotAllowed{}
}

/*MasterEmailTemplateCategoryGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type MasterEmailTemplateCategoryGetMethodNotAllowed struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetTooManyRequests creates a MasterEmailTemplateCategoryGetTooManyRequests with default headers values
func NewMasterEmailTemplateCategoryGetTooManyRequests() *MasterEmailTemplateCategoryGetTooManyRequests {
	return &MasterEmailTemplateCategoryGetTooManyRequests{}
}

/*MasterEmailTemplateCategoryGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type MasterEmailTemplateCategoryGetTooManyRequests struct {
	Payload string
}

func (o *MasterEmailTemplateCategoryGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] masterEmailTemplateCategoryGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoryGetDefault creates a MasterEmailTemplateCategoryGetDefault with default headers values
func NewMasterEmailTemplateCategoryGetDefault(code int) *MasterEmailTemplateCategoryGetDefault {
	return &MasterEmailTemplateCategoryGetDefault{
		_statusCode: code,
	}
}

/*MasterEmailTemplateCategoryGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type MasterEmailTemplateCategoryGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the master email template category get default response
func (o *MasterEmailTemplateCategoryGetDefault) Code() int {
	return o._statusCode
}

func (o *MasterEmailTemplateCategoryGetDefault) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories/{category_id}][%d] MasterEmailTemplateCategoryGet default  %+v", o._statusCode, o.Payload)
}

func (o *MasterEmailTemplateCategoryGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
