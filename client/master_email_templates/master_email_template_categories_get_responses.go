// Code generated by go-swagger; DO NOT EDIT.

package master_email_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// MasterEmailTemplateCategoriesGetReader is a Reader for the MasterEmailTemplateCategoriesGet structure.
type MasterEmailTemplateCategoriesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MasterEmailTemplateCategoriesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMasterEmailTemplateCategoriesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewMasterEmailTemplateCategoriesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewMasterEmailTemplateCategoriesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewMasterEmailTemplateCategoriesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewMasterEmailTemplateCategoriesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewMasterEmailTemplateCategoriesGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewMasterEmailTemplateCategoriesGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewMasterEmailTemplateCategoriesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMasterEmailTemplateCategoriesGetOK creates a MasterEmailTemplateCategoriesGetOK with default headers values
func NewMasterEmailTemplateCategoriesGetOK() *MasterEmailTemplateCategoriesGetOK {
	return &MasterEmailTemplateCategoriesGetOK{}
}

/*MasterEmailTemplateCategoriesGetOK handles this case with default header values.

SUCCESS
*/
type MasterEmailTemplateCategoriesGetOK struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetOK) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetOK  %+v", 200, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetBadRequest creates a MasterEmailTemplateCategoriesGetBadRequest with default headers values
func NewMasterEmailTemplateCategoriesGetBadRequest() *MasterEmailTemplateCategoriesGetBadRequest {
	return &MasterEmailTemplateCategoriesGetBadRequest{}
}

/*MasterEmailTemplateCategoriesGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type MasterEmailTemplateCategoriesGetBadRequest struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetBadRequest  %+v", 400, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetUnauthorized creates a MasterEmailTemplateCategoriesGetUnauthorized with default headers values
func NewMasterEmailTemplateCategoriesGetUnauthorized() *MasterEmailTemplateCategoriesGetUnauthorized {
	return &MasterEmailTemplateCategoriesGetUnauthorized{}
}

/*MasterEmailTemplateCategoriesGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type MasterEmailTemplateCategoriesGetUnauthorized struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetUnauthorized  %+v", 401, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetForbidden creates a MasterEmailTemplateCategoriesGetForbidden with default headers values
func NewMasterEmailTemplateCategoriesGetForbidden() *MasterEmailTemplateCategoriesGetForbidden {
	return &MasterEmailTemplateCategoriesGetForbidden{}
}

/*MasterEmailTemplateCategoriesGetForbidden handles this case with default header values.

FORBIDDEN
*/
type MasterEmailTemplateCategoriesGetForbidden struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetForbidden  %+v", 403, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetNotFound creates a MasterEmailTemplateCategoriesGetNotFound with default headers values
func NewMasterEmailTemplateCategoriesGetNotFound() *MasterEmailTemplateCategoriesGetNotFound {
	return &MasterEmailTemplateCategoriesGetNotFound{}
}

/*MasterEmailTemplateCategoriesGetNotFound handles this case with default header values.

NOT_FOUND
*/
type MasterEmailTemplateCategoriesGetNotFound struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetNotFound  %+v", 404, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetMethodNotAllowed creates a MasterEmailTemplateCategoriesGetMethodNotAllowed with default headers values
func NewMasterEmailTemplateCategoriesGetMethodNotAllowed() *MasterEmailTemplateCategoriesGetMethodNotAllowed {
	return &MasterEmailTemplateCategoriesGetMethodNotAllowed{}
}

/*MasterEmailTemplateCategoriesGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type MasterEmailTemplateCategoriesGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetTooManyRequests creates a MasterEmailTemplateCategoriesGetTooManyRequests with default headers values
func NewMasterEmailTemplateCategoriesGetTooManyRequests() *MasterEmailTemplateCategoriesGetTooManyRequests {
	return &MasterEmailTemplateCategoriesGetTooManyRequests{}
}

/*MasterEmailTemplateCategoriesGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type MasterEmailTemplateCategoriesGetTooManyRequests struct {
	Payload interface{}
}

func (o *MasterEmailTemplateCategoriesGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] masterEmailTemplateCategoriesGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterEmailTemplateCategoriesGetDefault creates a MasterEmailTemplateCategoriesGetDefault with default headers values
func NewMasterEmailTemplateCategoriesGetDefault(code int) *MasterEmailTemplateCategoriesGetDefault {
	return &MasterEmailTemplateCategoriesGetDefault{
		_statusCode: code,
	}
}

/*MasterEmailTemplateCategoriesGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type MasterEmailTemplateCategoriesGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the master email template categories get default response
func (o *MasterEmailTemplateCategoriesGetDefault) Code() int {
	return o._statusCode
}

func (o *MasterEmailTemplateCategoriesGetDefault) Error() string {
	return fmt.Sprintf("[GET /email/master-templates-categories][%d] MasterEmailTemplateCategoriesGet default  %+v", o._statusCode, o.Payload)
}

func (o *MasterEmailTemplateCategoriesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
