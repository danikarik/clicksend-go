// Code generated by go-swagger; DO NOT EDIT.

package subaccount

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SubaccountsBySubaccountIDDeleteReader is a Reader for the SubaccountsBySubaccountIDDelete structure.
type SubaccountsBySubaccountIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubaccountsBySubaccountIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSubaccountsBySubaccountIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSubaccountsBySubaccountIDDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSubaccountsBySubaccountIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSubaccountsBySubaccountIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSubaccountsBySubaccountIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSubaccountsBySubaccountIDDeleteMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSubaccountsBySubaccountIDDeleteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSubaccountsBySubaccountIDDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSubaccountsBySubaccountIDDeleteOK creates a SubaccountsBySubaccountIDDeleteOK with default headers values
func NewSubaccountsBySubaccountIDDeleteOK() *SubaccountsBySubaccountIDDeleteOK {
	return &SubaccountsBySubaccountIDDeleteOK{}
}

/*SubaccountsBySubaccountIDDeleteOK handles this case with default header values.

SUCCESS
*/
type SubaccountsBySubaccountIDDeleteOK struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteOK  %+v", 200, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteBadRequest creates a SubaccountsBySubaccountIDDeleteBadRequest with default headers values
func NewSubaccountsBySubaccountIDDeleteBadRequest() *SubaccountsBySubaccountIDDeleteBadRequest {
	return &SubaccountsBySubaccountIDDeleteBadRequest{}
}

/*SubaccountsBySubaccountIDDeleteBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SubaccountsBySubaccountIDDeleteBadRequest struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteUnauthorized creates a SubaccountsBySubaccountIDDeleteUnauthorized with default headers values
func NewSubaccountsBySubaccountIDDeleteUnauthorized() *SubaccountsBySubaccountIDDeleteUnauthorized {
	return &SubaccountsBySubaccountIDDeleteUnauthorized{}
}

/*SubaccountsBySubaccountIDDeleteUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SubaccountsBySubaccountIDDeleteUnauthorized struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteForbidden creates a SubaccountsBySubaccountIDDeleteForbidden with default headers values
func NewSubaccountsBySubaccountIDDeleteForbidden() *SubaccountsBySubaccountIDDeleteForbidden {
	return &SubaccountsBySubaccountIDDeleteForbidden{}
}

/*SubaccountsBySubaccountIDDeleteForbidden handles this case with default header values.

FORBIDDEN
*/
type SubaccountsBySubaccountIDDeleteForbidden struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteForbidden  %+v", 403, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteNotFound creates a SubaccountsBySubaccountIDDeleteNotFound with default headers values
func NewSubaccountsBySubaccountIDDeleteNotFound() *SubaccountsBySubaccountIDDeleteNotFound {
	return &SubaccountsBySubaccountIDDeleteNotFound{}
}

/*SubaccountsBySubaccountIDDeleteNotFound handles this case with default header values.

NOT_FOUND
*/
type SubaccountsBySubaccountIDDeleteNotFound struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteNotFound  %+v", 404, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteMethodNotAllowed creates a SubaccountsBySubaccountIDDeleteMethodNotAllowed with default headers values
func NewSubaccountsBySubaccountIDDeleteMethodNotAllowed() *SubaccountsBySubaccountIDDeleteMethodNotAllowed {
	return &SubaccountsBySubaccountIDDeleteMethodNotAllowed{}
}

/*SubaccountsBySubaccountIDDeleteMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SubaccountsBySubaccountIDDeleteMethodNotAllowed struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteTooManyRequests creates a SubaccountsBySubaccountIDDeleteTooManyRequests with default headers values
func NewSubaccountsBySubaccountIDDeleteTooManyRequests() *SubaccountsBySubaccountIDDeleteTooManyRequests {
	return &SubaccountsBySubaccountIDDeleteTooManyRequests{}
}

/*SubaccountsBySubaccountIDDeleteTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SubaccountsBySubaccountIDDeleteTooManyRequests struct {
	Payload string
}

func (o *SubaccountsBySubaccountIDDeleteTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] subaccountsBySubaccountIdDeleteTooManyRequests  %+v", 429, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsBySubaccountIDDeleteDefault creates a SubaccountsBySubaccountIDDeleteDefault with default headers values
func NewSubaccountsBySubaccountIDDeleteDefault(code int) *SubaccountsBySubaccountIDDeleteDefault {
	return &SubaccountsBySubaccountIDDeleteDefault{
		_statusCode: code,
	}
}

/*SubaccountsBySubaccountIDDeleteDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SubaccountsBySubaccountIDDeleteDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the subaccounts by subaccount Id delete default response
func (o *SubaccountsBySubaccountIDDeleteDefault) Code() int {
	return o._statusCode
}

func (o *SubaccountsBySubaccountIDDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /subaccounts/{subaccount_id}][%d] SubaccountsBySubaccountIdDelete default  %+v", o._statusCode, o.Payload)
}

func (o *SubaccountsBySubaccountIDDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
