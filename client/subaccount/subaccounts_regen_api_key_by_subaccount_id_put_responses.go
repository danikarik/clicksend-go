// Code generated by go-swagger; DO NOT EDIT.

package subaccount

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SubaccountsRegenAPIKeyBySubaccountIDPutReader is a Reader for the SubaccountsRegenAPIKeyBySubaccountIDPut structure.
type SubaccountsRegenAPIKeyBySubaccountIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubaccountsRegenAPIKeyBySubaccountIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSubaccountsRegenAPIKeyBySubaccountIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutOK creates a SubaccountsRegenAPIKeyBySubaccountIDPutOK with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutOK() *SubaccountsRegenAPIKeyBySubaccountIDPutOK {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutOK{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutOK handles this case with default header values.

SUCCESS
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutOK struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutOK  %+v", 200, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutBadRequest creates a SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutBadRequest() *SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutBadRequest  %+v", 400, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized creates a SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized() *SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutForbidden creates a SubaccountsRegenAPIKeyBySubaccountIDPutForbidden with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutForbidden() *SubaccountsRegenAPIKeyBySubaccountIDPutForbidden {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutForbidden{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutForbidden handles this case with default header values.

FORBIDDEN
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutForbidden struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutForbidden  %+v", 403, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutNotFound creates a SubaccountsRegenAPIKeyBySubaccountIDPutNotFound with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutNotFound() *SubaccountsRegenAPIKeyBySubaccountIDPutNotFound {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutNotFound{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutNotFound handles this case with default header values.

NOT_FOUND
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutNotFound struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutNotFound  %+v", 404, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed creates a SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed() *SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests creates a SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests() *SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests{}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests struct {
	Payload string
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] subaccountsRegenApiKeyBySubaccountIdPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubaccountsRegenAPIKeyBySubaccountIDPutDefault creates a SubaccountsRegenAPIKeyBySubaccountIDPutDefault with default headers values
func NewSubaccountsRegenAPIKeyBySubaccountIDPutDefault(code int) *SubaccountsRegenAPIKeyBySubaccountIDPutDefault {
	return &SubaccountsRegenAPIKeyBySubaccountIDPutDefault{
		_statusCode: code,
	}
}

/*SubaccountsRegenAPIKeyBySubaccountIDPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SubaccountsRegenAPIKeyBySubaccountIDPutDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the subaccounts regen Api key by subaccount Id put default response
func (o *SubaccountsRegenAPIKeyBySubaccountIDPutDefault) Code() int {
	return o._statusCode
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /subaccounts/{subaccount_id}/regen-api-key][%d] SubaccountsRegenApiKeyBySubaccountIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *SubaccountsRegenAPIKeyBySubaccountIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
