// Code generated by go-swagger; DO NOT EDIT.

package fax_delivery_receipt_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// FAXDeliveryReceiptAutomationsGetReader is a Reader for the FAXDeliveryReceiptAutomationsGet structure.
type FAXDeliveryReceiptAutomationsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FAXDeliveryReceiptAutomationsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFAXDeliveryReceiptAutomationsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewFAXDeliveryReceiptAutomationsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewFAXDeliveryReceiptAutomationsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFAXDeliveryReceiptAutomationsGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFAXDeliveryReceiptAutomationsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFAXDeliveryReceiptAutomationsGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewFAXDeliveryReceiptAutomationsGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFAXDeliveryReceiptAutomationsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFAXDeliveryReceiptAutomationsGetOK creates a FAXDeliveryReceiptAutomationsGetOK with default headers values
func NewFAXDeliveryReceiptAutomationsGetOK() *FAXDeliveryReceiptAutomationsGetOK {
	return &FAXDeliveryReceiptAutomationsGetOK{}
}

/*FAXDeliveryReceiptAutomationsGetOK handles this case with default header values.

SUCCESS
*/
type FAXDeliveryReceiptAutomationsGetOK struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetOK) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetOK  %+v", 200, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetBadRequest creates a FAXDeliveryReceiptAutomationsGetBadRequest with default headers values
func NewFAXDeliveryReceiptAutomationsGetBadRequest() *FAXDeliveryReceiptAutomationsGetBadRequest {
	return &FAXDeliveryReceiptAutomationsGetBadRequest{}
}

/*FAXDeliveryReceiptAutomationsGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type FAXDeliveryReceiptAutomationsGetBadRequest struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetBadRequest  %+v", 400, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetUnauthorized creates a FAXDeliveryReceiptAutomationsGetUnauthorized with default headers values
func NewFAXDeliveryReceiptAutomationsGetUnauthorized() *FAXDeliveryReceiptAutomationsGetUnauthorized {
	return &FAXDeliveryReceiptAutomationsGetUnauthorized{}
}

/*FAXDeliveryReceiptAutomationsGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type FAXDeliveryReceiptAutomationsGetUnauthorized struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetForbidden creates a FAXDeliveryReceiptAutomationsGetForbidden with default headers values
func NewFAXDeliveryReceiptAutomationsGetForbidden() *FAXDeliveryReceiptAutomationsGetForbidden {
	return &FAXDeliveryReceiptAutomationsGetForbidden{}
}

/*FAXDeliveryReceiptAutomationsGetForbidden handles this case with default header values.

FORBIDDEN
*/
type FAXDeliveryReceiptAutomationsGetForbidden struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetForbidden) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetForbidden  %+v", 403, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetNotFound creates a FAXDeliveryReceiptAutomationsGetNotFound with default headers values
func NewFAXDeliveryReceiptAutomationsGetNotFound() *FAXDeliveryReceiptAutomationsGetNotFound {
	return &FAXDeliveryReceiptAutomationsGetNotFound{}
}

/*FAXDeliveryReceiptAutomationsGetNotFound handles this case with default header values.

NOT_FOUND
*/
type FAXDeliveryReceiptAutomationsGetNotFound struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetNotFound  %+v", 404, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetMethodNotAllowed creates a FAXDeliveryReceiptAutomationsGetMethodNotAllowed with default headers values
func NewFAXDeliveryReceiptAutomationsGetMethodNotAllowed() *FAXDeliveryReceiptAutomationsGetMethodNotAllowed {
	return &FAXDeliveryReceiptAutomationsGetMethodNotAllowed{}
}

/*FAXDeliveryReceiptAutomationsGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type FAXDeliveryReceiptAutomationsGetMethodNotAllowed struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetTooManyRequests creates a FAXDeliveryReceiptAutomationsGetTooManyRequests with default headers values
func NewFAXDeliveryReceiptAutomationsGetTooManyRequests() *FAXDeliveryReceiptAutomationsGetTooManyRequests {
	return &FAXDeliveryReceiptAutomationsGetTooManyRequests{}
}

/*FAXDeliveryReceiptAutomationsGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type FAXDeliveryReceiptAutomationsGetTooManyRequests struct {
	Payload string
}

func (o *FAXDeliveryReceiptAutomationsGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] faxDeliveryReceiptAutomationsGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXDeliveryReceiptAutomationsGetDefault creates a FAXDeliveryReceiptAutomationsGetDefault with default headers values
func NewFAXDeliveryReceiptAutomationsGetDefault(code int) *FAXDeliveryReceiptAutomationsGetDefault {
	return &FAXDeliveryReceiptAutomationsGetDefault{
		_statusCode: code,
	}
}

/*FAXDeliveryReceiptAutomationsGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type FAXDeliveryReceiptAutomationsGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Fax delivery receipt automations get default response
func (o *FAXDeliveryReceiptAutomationsGetDefault) Code() int {
	return o._statusCode
}

func (o *FAXDeliveryReceiptAutomationsGetDefault) Error() string {
	return fmt.Sprintf("[GET /automations/fax/receipts][%d] FaxDeliveryReceiptAutomationsGet default  %+v", o._statusCode, o.Payload)
}

func (o *FAXDeliveryReceiptAutomationsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
