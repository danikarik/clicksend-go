// Code generated by go-swagger; DO NOT EDIT.

package account_recharge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RechargePackagesGetReader is a Reader for the RechargePackagesGet structure.
type RechargePackagesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RechargePackagesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRechargePackagesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRechargePackagesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRechargePackagesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRechargePackagesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRechargePackagesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewRechargePackagesGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewRechargePackagesGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewRechargePackagesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRechargePackagesGetOK creates a RechargePackagesGetOK with default headers values
func NewRechargePackagesGetOK() *RechargePackagesGetOK {
	return &RechargePackagesGetOK{}
}

/*RechargePackagesGetOK handles this case with default header values.

SUCCESS
*/
type RechargePackagesGetOK struct {
	Payload interface{}
}

func (o *RechargePackagesGetOK) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetOK  %+v", 200, o.Payload)
}

func (o *RechargePackagesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetBadRequest creates a RechargePackagesGetBadRequest with default headers values
func NewRechargePackagesGetBadRequest() *RechargePackagesGetBadRequest {
	return &RechargePackagesGetBadRequest{}
}

/*RechargePackagesGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type RechargePackagesGetBadRequest struct {
	Payload interface{}
}

func (o *RechargePackagesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetBadRequest  %+v", 400, o.Payload)
}

func (o *RechargePackagesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetUnauthorized creates a RechargePackagesGetUnauthorized with default headers values
func NewRechargePackagesGetUnauthorized() *RechargePackagesGetUnauthorized {
	return &RechargePackagesGetUnauthorized{}
}

/*RechargePackagesGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type RechargePackagesGetUnauthorized struct {
	Payload interface{}
}

func (o *RechargePackagesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetUnauthorized  %+v", 401, o.Payload)
}

func (o *RechargePackagesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetForbidden creates a RechargePackagesGetForbidden with default headers values
func NewRechargePackagesGetForbidden() *RechargePackagesGetForbidden {
	return &RechargePackagesGetForbidden{}
}

/*RechargePackagesGetForbidden handles this case with default header values.

FORBIDDEN
*/
type RechargePackagesGetForbidden struct {
	Payload interface{}
}

func (o *RechargePackagesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetForbidden  %+v", 403, o.Payload)
}

func (o *RechargePackagesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetNotFound creates a RechargePackagesGetNotFound with default headers values
func NewRechargePackagesGetNotFound() *RechargePackagesGetNotFound {
	return &RechargePackagesGetNotFound{}
}

/*RechargePackagesGetNotFound handles this case with default header values.

NOT_FOUND
*/
type RechargePackagesGetNotFound struct {
	Payload interface{}
}

func (o *RechargePackagesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetNotFound  %+v", 404, o.Payload)
}

func (o *RechargePackagesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetMethodNotAllowed creates a RechargePackagesGetMethodNotAllowed with default headers values
func NewRechargePackagesGetMethodNotAllowed() *RechargePackagesGetMethodNotAllowed {
	return &RechargePackagesGetMethodNotAllowed{}
}

/*RechargePackagesGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type RechargePackagesGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *RechargePackagesGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *RechargePackagesGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetTooManyRequests creates a RechargePackagesGetTooManyRequests with default headers values
func NewRechargePackagesGetTooManyRequests() *RechargePackagesGetTooManyRequests {
	return &RechargePackagesGetTooManyRequests{}
}

/*RechargePackagesGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type RechargePackagesGetTooManyRequests struct {
	Payload interface{}
}

func (o *RechargePackagesGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] rechargePackagesGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *RechargePackagesGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargePackagesGetDefault creates a RechargePackagesGetDefault with default headers values
func NewRechargePackagesGetDefault(code int) *RechargePackagesGetDefault {
	return &RechargePackagesGetDefault{
		_statusCode: code,
	}
}

/*RechargePackagesGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type RechargePackagesGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the recharge packages get default response
func (o *RechargePackagesGetDefault) Code() int {
	return o._statusCode
}

func (o *RechargePackagesGetDefault) Error() string {
	return fmt.Sprintf("[GET /recharge/packages][%d] RechargePackagesGet default  %+v", o._statusCode, o.Payload)
}

func (o *RechargePackagesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
