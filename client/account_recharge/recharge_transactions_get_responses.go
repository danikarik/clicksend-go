// Code generated by go-swagger; DO NOT EDIT.

package account_recharge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RechargeTransactionsGetReader is a Reader for the RechargeTransactionsGet structure.
type RechargeTransactionsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RechargeTransactionsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRechargeTransactionsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRechargeTransactionsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRechargeTransactionsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRechargeTransactionsGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRechargeTransactionsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewRechargeTransactionsGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewRechargeTransactionsGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewRechargeTransactionsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRechargeTransactionsGetOK creates a RechargeTransactionsGetOK with default headers values
func NewRechargeTransactionsGetOK() *RechargeTransactionsGetOK {
	return &RechargeTransactionsGetOK{}
}

/*RechargeTransactionsGetOK handles this case with default header values.

SUCCESS
*/
type RechargeTransactionsGetOK struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetOK) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetOK  %+v", 200, o.Payload)
}

func (o *RechargeTransactionsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetBadRequest creates a RechargeTransactionsGetBadRequest with default headers values
func NewRechargeTransactionsGetBadRequest() *RechargeTransactionsGetBadRequest {
	return &RechargeTransactionsGetBadRequest{}
}

/*RechargeTransactionsGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type RechargeTransactionsGetBadRequest struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetBadRequest  %+v", 400, o.Payload)
}

func (o *RechargeTransactionsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetUnauthorized creates a RechargeTransactionsGetUnauthorized with default headers values
func NewRechargeTransactionsGetUnauthorized() *RechargeTransactionsGetUnauthorized {
	return &RechargeTransactionsGetUnauthorized{}
}

/*RechargeTransactionsGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type RechargeTransactionsGetUnauthorized struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *RechargeTransactionsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetForbidden creates a RechargeTransactionsGetForbidden with default headers values
func NewRechargeTransactionsGetForbidden() *RechargeTransactionsGetForbidden {
	return &RechargeTransactionsGetForbidden{}
}

/*RechargeTransactionsGetForbidden handles this case with default header values.

FORBIDDEN
*/
type RechargeTransactionsGetForbidden struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetForbidden) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetForbidden  %+v", 403, o.Payload)
}

func (o *RechargeTransactionsGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetNotFound creates a RechargeTransactionsGetNotFound with default headers values
func NewRechargeTransactionsGetNotFound() *RechargeTransactionsGetNotFound {
	return &RechargeTransactionsGetNotFound{}
}

/*RechargeTransactionsGetNotFound handles this case with default header values.

NOT_FOUND
*/
type RechargeTransactionsGetNotFound struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetNotFound  %+v", 404, o.Payload)
}

func (o *RechargeTransactionsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetMethodNotAllowed creates a RechargeTransactionsGetMethodNotAllowed with default headers values
func NewRechargeTransactionsGetMethodNotAllowed() *RechargeTransactionsGetMethodNotAllowed {
	return &RechargeTransactionsGetMethodNotAllowed{}
}

/*RechargeTransactionsGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type RechargeTransactionsGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *RechargeTransactionsGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetTooManyRequests creates a RechargeTransactionsGetTooManyRequests with default headers values
func NewRechargeTransactionsGetTooManyRequests() *RechargeTransactionsGetTooManyRequests {
	return &RechargeTransactionsGetTooManyRequests{}
}

/*RechargeTransactionsGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type RechargeTransactionsGetTooManyRequests struct {
	Payload interface{}
}

func (o *RechargeTransactionsGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] rechargeTransactionsGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *RechargeTransactionsGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRechargeTransactionsGetDefault creates a RechargeTransactionsGetDefault with default headers values
func NewRechargeTransactionsGetDefault(code int) *RechargeTransactionsGetDefault {
	return &RechargeTransactionsGetDefault{
		_statusCode: code,
	}
}

/*RechargeTransactionsGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type RechargeTransactionsGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the recharge transactions get default response
func (o *RechargeTransactionsGetDefault) Code() int {
	return o._statusCode
}

func (o *RechargeTransactionsGetDefault) Error() string {
	return fmt.Sprintf("[GET /recharge/transactions][%d] RechargeTransactionsGet default  %+v", o._statusCode, o.Payload)
}

func (o *RechargeTransactionsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
