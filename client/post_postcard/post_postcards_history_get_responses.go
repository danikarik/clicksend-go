// Code generated by go-swagger; DO NOT EDIT.

package post_postcard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostPostcardsHistoryGetReader is a Reader for the PostPostcardsHistoryGet structure.
type PostPostcardsHistoryGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPostcardsHistoryGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPostcardsHistoryGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPostcardsHistoryGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPostcardsHistoryGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostPostcardsHistoryGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostPostcardsHistoryGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPostPostcardsHistoryGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostPostcardsHistoryGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostPostcardsHistoryGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostPostcardsHistoryGetOK creates a PostPostcardsHistoryGetOK with default headers values
func NewPostPostcardsHistoryGetOK() *PostPostcardsHistoryGetOK {
	return &PostPostcardsHistoryGetOK{}
}

/*PostPostcardsHistoryGetOK handles this case with default header values.

SUCCESS
*/
type PostPostcardsHistoryGetOK struct {
	Payload string
}

func (o *PostPostcardsHistoryGetOK) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetOK  %+v", 200, o.Payload)
}

func (o *PostPostcardsHistoryGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetBadRequest creates a PostPostcardsHistoryGetBadRequest with default headers values
func NewPostPostcardsHistoryGetBadRequest() *PostPostcardsHistoryGetBadRequest {
	return &PostPostcardsHistoryGetBadRequest{}
}

/*PostPostcardsHistoryGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type PostPostcardsHistoryGetBadRequest struct {
	Payload string
}

func (o *PostPostcardsHistoryGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetBadRequest  %+v", 400, o.Payload)
}

func (o *PostPostcardsHistoryGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetUnauthorized creates a PostPostcardsHistoryGetUnauthorized with default headers values
func NewPostPostcardsHistoryGetUnauthorized() *PostPostcardsHistoryGetUnauthorized {
	return &PostPostcardsHistoryGetUnauthorized{}
}

/*PostPostcardsHistoryGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type PostPostcardsHistoryGetUnauthorized struct {
	Payload string
}

func (o *PostPostcardsHistoryGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPostcardsHistoryGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetForbidden creates a PostPostcardsHistoryGetForbidden with default headers values
func NewPostPostcardsHistoryGetForbidden() *PostPostcardsHistoryGetForbidden {
	return &PostPostcardsHistoryGetForbidden{}
}

/*PostPostcardsHistoryGetForbidden handles this case with default header values.

FORBIDDEN
*/
type PostPostcardsHistoryGetForbidden struct {
	Payload string
}

func (o *PostPostcardsHistoryGetForbidden) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetForbidden  %+v", 403, o.Payload)
}

func (o *PostPostcardsHistoryGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetNotFound creates a PostPostcardsHistoryGetNotFound with default headers values
func NewPostPostcardsHistoryGetNotFound() *PostPostcardsHistoryGetNotFound {
	return &PostPostcardsHistoryGetNotFound{}
}

/*PostPostcardsHistoryGetNotFound handles this case with default header values.

NOT_FOUND
*/
type PostPostcardsHistoryGetNotFound struct {
	Payload string
}

func (o *PostPostcardsHistoryGetNotFound) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetNotFound  %+v", 404, o.Payload)
}

func (o *PostPostcardsHistoryGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetMethodNotAllowed creates a PostPostcardsHistoryGetMethodNotAllowed with default headers values
func NewPostPostcardsHistoryGetMethodNotAllowed() *PostPostcardsHistoryGetMethodNotAllowed {
	return &PostPostcardsHistoryGetMethodNotAllowed{}
}

/*PostPostcardsHistoryGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type PostPostcardsHistoryGetMethodNotAllowed struct {
	Payload string
}

func (o *PostPostcardsHistoryGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostPostcardsHistoryGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetTooManyRequests creates a PostPostcardsHistoryGetTooManyRequests with default headers values
func NewPostPostcardsHistoryGetTooManyRequests() *PostPostcardsHistoryGetTooManyRequests {
	return &PostPostcardsHistoryGetTooManyRequests{}
}

/*PostPostcardsHistoryGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type PostPostcardsHistoryGetTooManyRequests struct {
	Payload string
}

func (o *PostPostcardsHistoryGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] postPostcardsHistoryGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostPostcardsHistoryGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryGetDefault creates a PostPostcardsHistoryGetDefault with default headers values
func NewPostPostcardsHistoryGetDefault(code int) *PostPostcardsHistoryGetDefault {
	return &PostPostcardsHistoryGetDefault{
		_statusCode: code,
	}
}

/*PostPostcardsHistoryGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type PostPostcardsHistoryGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the post postcards history get default response
func (o *PostPostcardsHistoryGetDefault) Code() int {
	return o._statusCode
}

func (o *PostPostcardsHistoryGetDefault) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history][%d] PostPostcardsHistoryGet default  %+v", o._statusCode, o.Payload)
}

func (o *PostPostcardsHistoryGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
