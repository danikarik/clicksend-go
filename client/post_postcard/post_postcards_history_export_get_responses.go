// Code generated by go-swagger; DO NOT EDIT.

package post_postcard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostPostcardsHistoryExportGetReader is a Reader for the PostPostcardsHistoryExportGet structure.
type PostPostcardsHistoryExportGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPostcardsHistoryExportGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPostcardsHistoryExportGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPostcardsHistoryExportGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPostcardsHistoryExportGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostPostcardsHistoryExportGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostPostcardsHistoryExportGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPostPostcardsHistoryExportGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostPostcardsHistoryExportGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostPostcardsHistoryExportGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostPostcardsHistoryExportGetOK creates a PostPostcardsHistoryExportGetOK with default headers values
func NewPostPostcardsHistoryExportGetOK() *PostPostcardsHistoryExportGetOK {
	return &PostPostcardsHistoryExportGetOK{}
}

/*PostPostcardsHistoryExportGetOK handles this case with default header values.

SUCCESS
*/
type PostPostcardsHistoryExportGetOK struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetOK) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetOK  %+v", 200, o.Payload)
}

func (o *PostPostcardsHistoryExportGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetBadRequest creates a PostPostcardsHistoryExportGetBadRequest with default headers values
func NewPostPostcardsHistoryExportGetBadRequest() *PostPostcardsHistoryExportGetBadRequest {
	return &PostPostcardsHistoryExportGetBadRequest{}
}

/*PostPostcardsHistoryExportGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type PostPostcardsHistoryExportGetBadRequest struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetBadRequest  %+v", 400, o.Payload)
}

func (o *PostPostcardsHistoryExportGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetUnauthorized creates a PostPostcardsHistoryExportGetUnauthorized with default headers values
func NewPostPostcardsHistoryExportGetUnauthorized() *PostPostcardsHistoryExportGetUnauthorized {
	return &PostPostcardsHistoryExportGetUnauthorized{}
}

/*PostPostcardsHistoryExportGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type PostPostcardsHistoryExportGetUnauthorized struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPostcardsHistoryExportGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetForbidden creates a PostPostcardsHistoryExportGetForbidden with default headers values
func NewPostPostcardsHistoryExportGetForbidden() *PostPostcardsHistoryExportGetForbidden {
	return &PostPostcardsHistoryExportGetForbidden{}
}

/*PostPostcardsHistoryExportGetForbidden handles this case with default header values.

FORBIDDEN
*/
type PostPostcardsHistoryExportGetForbidden struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetForbidden) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetForbidden  %+v", 403, o.Payload)
}

func (o *PostPostcardsHistoryExportGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetNotFound creates a PostPostcardsHistoryExportGetNotFound with default headers values
func NewPostPostcardsHistoryExportGetNotFound() *PostPostcardsHistoryExportGetNotFound {
	return &PostPostcardsHistoryExportGetNotFound{}
}

/*PostPostcardsHistoryExportGetNotFound handles this case with default header values.

NOT_FOUND
*/
type PostPostcardsHistoryExportGetNotFound struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetNotFound) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetNotFound  %+v", 404, o.Payload)
}

func (o *PostPostcardsHistoryExportGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetMethodNotAllowed creates a PostPostcardsHistoryExportGetMethodNotAllowed with default headers values
func NewPostPostcardsHistoryExportGetMethodNotAllowed() *PostPostcardsHistoryExportGetMethodNotAllowed {
	return &PostPostcardsHistoryExportGetMethodNotAllowed{}
}

/*PostPostcardsHistoryExportGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type PostPostcardsHistoryExportGetMethodNotAllowed struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostPostcardsHistoryExportGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetTooManyRequests creates a PostPostcardsHistoryExportGetTooManyRequests with default headers values
func NewPostPostcardsHistoryExportGetTooManyRequests() *PostPostcardsHistoryExportGetTooManyRequests {
	return &PostPostcardsHistoryExportGetTooManyRequests{}
}

/*PostPostcardsHistoryExportGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type PostPostcardsHistoryExportGetTooManyRequests struct {
	Payload string
}

func (o *PostPostcardsHistoryExportGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] postPostcardsHistoryExportGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostPostcardsHistoryExportGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPostcardsHistoryExportGetDefault creates a PostPostcardsHistoryExportGetDefault with default headers values
func NewPostPostcardsHistoryExportGetDefault(code int) *PostPostcardsHistoryExportGetDefault {
	return &PostPostcardsHistoryExportGetDefault{
		_statusCode: code,
	}
}

/*PostPostcardsHistoryExportGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type PostPostcardsHistoryExportGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the post postcards history export get default response
func (o *PostPostcardsHistoryExportGetDefault) Code() int {
	return o._statusCode
}

func (o *PostPostcardsHistoryExportGetDefault) Error() string {
	return fmt.Sprintf("[GET /post/postcards/history/export][%d] PostPostcardsHistoryExportGet default  %+v", o._statusCode, o.Payload)
}

func (o *PostPostcardsHistoryExportGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
