// Code generated by go-swagger; DO NOT EDIT.

package sms_campaign

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSCampaignsGetReader is a Reader for the SMSCampaignsGet structure.
type SMSCampaignsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSCampaignsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSCampaignsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSCampaignsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSCampaignsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSCampaignsGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSCampaignsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSCampaignsGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSCampaignsGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSCampaignsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSCampaignsGetOK creates a SMSCampaignsGetOK with default headers values
func NewSMSCampaignsGetOK() *SMSCampaignsGetOK {
	return &SMSCampaignsGetOK{}
}

/*SMSCampaignsGetOK handles this case with default header values.

SUCCESS
*/
type SMSCampaignsGetOK struct {
	Payload string
}

func (o *SMSCampaignsGetOK) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetOK  %+v", 200, o.Payload)
}

func (o *SMSCampaignsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetBadRequest creates a SMSCampaignsGetBadRequest with default headers values
func NewSMSCampaignsGetBadRequest() *SMSCampaignsGetBadRequest {
	return &SMSCampaignsGetBadRequest{}
}

/*SMSCampaignsGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSCampaignsGetBadRequest struct {
	Payload string
}

func (o *SMSCampaignsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetBadRequest  %+v", 400, o.Payload)
}

func (o *SMSCampaignsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetUnauthorized creates a SMSCampaignsGetUnauthorized with default headers values
func NewSMSCampaignsGetUnauthorized() *SMSCampaignsGetUnauthorized {
	return &SMSCampaignsGetUnauthorized{}
}

/*SMSCampaignsGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSCampaignsGetUnauthorized struct {
	Payload string
}

func (o *SMSCampaignsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSCampaignsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetForbidden creates a SMSCampaignsGetForbidden with default headers values
func NewSMSCampaignsGetForbidden() *SMSCampaignsGetForbidden {
	return &SMSCampaignsGetForbidden{}
}

/*SMSCampaignsGetForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSCampaignsGetForbidden struct {
	Payload string
}

func (o *SMSCampaignsGetForbidden) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetForbidden  %+v", 403, o.Payload)
}

func (o *SMSCampaignsGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetNotFound creates a SMSCampaignsGetNotFound with default headers values
func NewSMSCampaignsGetNotFound() *SMSCampaignsGetNotFound {
	return &SMSCampaignsGetNotFound{}
}

/*SMSCampaignsGetNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSCampaignsGetNotFound struct {
	Payload string
}

func (o *SMSCampaignsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetNotFound  %+v", 404, o.Payload)
}

func (o *SMSCampaignsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetMethodNotAllowed creates a SMSCampaignsGetMethodNotAllowed with default headers values
func NewSMSCampaignsGetMethodNotAllowed() *SMSCampaignsGetMethodNotAllowed {
	return &SMSCampaignsGetMethodNotAllowed{}
}

/*SMSCampaignsGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSCampaignsGetMethodNotAllowed struct {
	Payload string
}

func (o *SMSCampaignsGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSCampaignsGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetTooManyRequests creates a SMSCampaignsGetTooManyRequests with default headers values
func NewSMSCampaignsGetTooManyRequests() *SMSCampaignsGetTooManyRequests {
	return &SMSCampaignsGetTooManyRequests{}
}

/*SMSCampaignsGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSCampaignsGetTooManyRequests struct {
	Payload string
}

func (o *SMSCampaignsGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] smsCampaignsGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSCampaignsGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsGetDefault creates a SMSCampaignsGetDefault with default headers values
func NewSMSCampaignsGetDefault(code int) *SMSCampaignsGetDefault {
	return &SMSCampaignsGetDefault{
		_statusCode: code,
	}
}

/*SMSCampaignsGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSCampaignsGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Sms campaigns get default response
func (o *SMSCampaignsGetDefault) Code() int {
	return o._statusCode
}

func (o *SMSCampaignsGetDefault) Error() string {
	return fmt.Sprintf("[GET /sms-campaigns][%d] SmsCampaignsGet default  %+v", o._statusCode, o.Payload)
}

func (o *SMSCampaignsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
