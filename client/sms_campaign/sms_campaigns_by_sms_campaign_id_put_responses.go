// Code generated by go-swagger; DO NOT EDIT.

package sms_campaign

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSCampaignsBySMSCampaignIDPutReader is a Reader for the SMSCampaignsBySMSCampaignIDPut structure.
type SMSCampaignsBySMSCampaignIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSCampaignsBySMSCampaignIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSCampaignsBySMSCampaignIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSCampaignsBySMSCampaignIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSCampaignsBySMSCampaignIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSCampaignsBySMSCampaignIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSCampaignsBySMSCampaignIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSCampaignsBySMSCampaignIDPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSCampaignsBySMSCampaignIDPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSCampaignsBySMSCampaignIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSCampaignsBySMSCampaignIDPutOK creates a SMSCampaignsBySMSCampaignIDPutOK with default headers values
func NewSMSCampaignsBySMSCampaignIDPutOK() *SMSCampaignsBySMSCampaignIDPutOK {
	return &SMSCampaignsBySMSCampaignIDPutOK{}
}

/*SMSCampaignsBySMSCampaignIDPutOK handles this case with default header values.

SUCCESS
*/
type SMSCampaignsBySMSCampaignIDPutOK struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutOK  %+v", 200, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutBadRequest creates a SMSCampaignsBySMSCampaignIDPutBadRequest with default headers values
func NewSMSCampaignsBySMSCampaignIDPutBadRequest() *SMSCampaignsBySMSCampaignIDPutBadRequest {
	return &SMSCampaignsBySMSCampaignIDPutBadRequest{}
}

/*SMSCampaignsBySMSCampaignIDPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSCampaignsBySMSCampaignIDPutBadRequest struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutBadRequest  %+v", 400, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutUnauthorized creates a SMSCampaignsBySMSCampaignIDPutUnauthorized with default headers values
func NewSMSCampaignsBySMSCampaignIDPutUnauthorized() *SMSCampaignsBySMSCampaignIDPutUnauthorized {
	return &SMSCampaignsBySMSCampaignIDPutUnauthorized{}
}

/*SMSCampaignsBySMSCampaignIDPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSCampaignsBySMSCampaignIDPutUnauthorized struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutForbidden creates a SMSCampaignsBySMSCampaignIDPutForbidden with default headers values
func NewSMSCampaignsBySMSCampaignIDPutForbidden() *SMSCampaignsBySMSCampaignIDPutForbidden {
	return &SMSCampaignsBySMSCampaignIDPutForbidden{}
}

/*SMSCampaignsBySMSCampaignIDPutForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSCampaignsBySMSCampaignIDPutForbidden struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutForbidden  %+v", 403, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutNotFound creates a SMSCampaignsBySMSCampaignIDPutNotFound with default headers values
func NewSMSCampaignsBySMSCampaignIDPutNotFound() *SMSCampaignsBySMSCampaignIDPutNotFound {
	return &SMSCampaignsBySMSCampaignIDPutNotFound{}
}

/*SMSCampaignsBySMSCampaignIDPutNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSCampaignsBySMSCampaignIDPutNotFound struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutNotFound  %+v", 404, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutMethodNotAllowed creates a SMSCampaignsBySMSCampaignIDPutMethodNotAllowed with default headers values
func NewSMSCampaignsBySMSCampaignIDPutMethodNotAllowed() *SMSCampaignsBySMSCampaignIDPutMethodNotAllowed {
	return &SMSCampaignsBySMSCampaignIDPutMethodNotAllowed{}
}

/*SMSCampaignsBySMSCampaignIDPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSCampaignsBySMSCampaignIDPutMethodNotAllowed struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutTooManyRequests creates a SMSCampaignsBySMSCampaignIDPutTooManyRequests with default headers values
func NewSMSCampaignsBySMSCampaignIDPutTooManyRequests() *SMSCampaignsBySMSCampaignIDPutTooManyRequests {
	return &SMSCampaignsBySMSCampaignIDPutTooManyRequests{}
}

/*SMSCampaignsBySMSCampaignIDPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSCampaignsBySMSCampaignIDPutTooManyRequests struct {
	Payload string
}

func (o *SMSCampaignsBySMSCampaignIDPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] smsCampaignsBySmsCampaignIdPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSCampaignsBySMSCampaignIDPutDefault creates a SMSCampaignsBySMSCampaignIDPutDefault with default headers values
func NewSMSCampaignsBySMSCampaignIDPutDefault(code int) *SMSCampaignsBySMSCampaignIDPutDefault {
	return &SMSCampaignsBySMSCampaignIDPutDefault{
		_statusCode: code,
	}
}

/*SMSCampaignsBySMSCampaignIDPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSCampaignsBySMSCampaignIDPutDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Sms campaigns by Sms campaign Id put default response
func (o *SMSCampaignsBySMSCampaignIDPutDefault) Code() int {
	return o._statusCode
}

func (o *SMSCampaignsBySMSCampaignIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /sms-campaigns/{sms_campaign_id}][%d] SmsCampaignsBySmsCampaignIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *SMSCampaignsBySMSCampaignIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
