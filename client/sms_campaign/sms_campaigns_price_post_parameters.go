// Code generated by go-swagger; DO NOT EDIT.

package sms_campaign

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/danikarik/clicksend-go/models"
)

// NewSMSCampaignsPricePostParams creates a new SMSCampaignsPricePostParams object
// with the default values initialized.
func NewSMSCampaignsPricePostParams() *SMSCampaignsPricePostParams {
	var ()
	return &SMSCampaignsPricePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSMSCampaignsPricePostParamsWithTimeout creates a new SMSCampaignsPricePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSMSCampaignsPricePostParamsWithTimeout(timeout time.Duration) *SMSCampaignsPricePostParams {
	var ()
	return &SMSCampaignsPricePostParams{

		timeout: timeout,
	}
}

// NewSMSCampaignsPricePostParamsWithContext creates a new SMSCampaignsPricePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewSMSCampaignsPricePostParamsWithContext(ctx context.Context) *SMSCampaignsPricePostParams {
	var ()
	return &SMSCampaignsPricePostParams{

		Context: ctx,
	}
}

// NewSMSCampaignsPricePostParamsWithHTTPClient creates a new SMSCampaignsPricePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSMSCampaignsPricePostParamsWithHTTPClient(client *http.Client) *SMSCampaignsPricePostParams {
	var ()
	return &SMSCampaignsPricePostParams{
		HTTPClient: client,
	}
}

/*SMSCampaignsPricePostParams contains all the parameters to send to the API endpoint
for the Sms campaigns price post operation typically these are written to a http.Request
*/
type SMSCampaignsPricePostParams struct {

	/*Campaign
	  SmsCampaign model

	*/
	Campaign models.SMSCampaign

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) WithTimeout(timeout time.Duration) *SMSCampaignsPricePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) WithContext(ctx context.Context) *SMSCampaignsPricePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) WithHTTPClient(client *http.Client) *SMSCampaignsPricePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaign adds the campaign to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) WithCampaign(campaign models.SMSCampaign) *SMSCampaignsPricePostParams {
	o.SetCampaign(campaign)
	return o
}

// SetCampaign adds the campaign to the Sms campaigns price post params
func (o *SMSCampaignsPricePostParams) SetCampaign(campaign models.SMSCampaign) {
	o.Campaign = campaign
}

// WriteToRequest writes these params to a swagger request
func (o *SMSCampaignsPricePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Campaign); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
