// Code generated by go-swagger; DO NOT EDIT.

package contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListsTransferContactPutReader is a Reader for the ListsTransferContactPut structure.
type ListsTransferContactPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListsTransferContactPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListsTransferContactPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListsTransferContactPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListsTransferContactPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListsTransferContactPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListsTransferContactPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListsTransferContactPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListsTransferContactPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListsTransferContactPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListsTransferContactPutOK creates a ListsTransferContactPutOK with default headers values
func NewListsTransferContactPutOK() *ListsTransferContactPutOK {
	return &ListsTransferContactPutOK{}
}

/*ListsTransferContactPutOK handles this case with default header values.

SUCCESS
*/
type ListsTransferContactPutOK struct {
	Payload interface{}
}

func (o *ListsTransferContactPutOK) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutOK  %+v", 200, o.Payload)
}

func (o *ListsTransferContactPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutBadRequest creates a ListsTransferContactPutBadRequest with default headers values
func NewListsTransferContactPutBadRequest() *ListsTransferContactPutBadRequest {
	return &ListsTransferContactPutBadRequest{}
}

/*ListsTransferContactPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ListsTransferContactPutBadRequest struct {
	Payload interface{}
}

func (o *ListsTransferContactPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutBadRequest  %+v", 400, o.Payload)
}

func (o *ListsTransferContactPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutUnauthorized creates a ListsTransferContactPutUnauthorized with default headers values
func NewListsTransferContactPutUnauthorized() *ListsTransferContactPutUnauthorized {
	return &ListsTransferContactPutUnauthorized{}
}

/*ListsTransferContactPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ListsTransferContactPutUnauthorized struct {
	Payload interface{}
}

func (o *ListsTransferContactPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutUnauthorized  %+v", 401, o.Payload)
}

func (o *ListsTransferContactPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutForbidden creates a ListsTransferContactPutForbidden with default headers values
func NewListsTransferContactPutForbidden() *ListsTransferContactPutForbidden {
	return &ListsTransferContactPutForbidden{}
}

/*ListsTransferContactPutForbidden handles this case with default header values.

FORBIDDEN
*/
type ListsTransferContactPutForbidden struct {
	Payload interface{}
}

func (o *ListsTransferContactPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutForbidden  %+v", 403, o.Payload)
}

func (o *ListsTransferContactPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutNotFound creates a ListsTransferContactPutNotFound with default headers values
func NewListsTransferContactPutNotFound() *ListsTransferContactPutNotFound {
	return &ListsTransferContactPutNotFound{}
}

/*ListsTransferContactPutNotFound handles this case with default header values.

NOT_FOUND
*/
type ListsTransferContactPutNotFound struct {
	Payload interface{}
}

func (o *ListsTransferContactPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutNotFound  %+v", 404, o.Payload)
}

func (o *ListsTransferContactPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutMethodNotAllowed creates a ListsTransferContactPutMethodNotAllowed with default headers values
func NewListsTransferContactPutMethodNotAllowed() *ListsTransferContactPutMethodNotAllowed {
	return &ListsTransferContactPutMethodNotAllowed{}
}

/*ListsTransferContactPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ListsTransferContactPutMethodNotAllowed struct {
	Payload interface{}
}

func (o *ListsTransferContactPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListsTransferContactPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutTooManyRequests creates a ListsTransferContactPutTooManyRequests with default headers values
func NewListsTransferContactPutTooManyRequests() *ListsTransferContactPutTooManyRequests {
	return &ListsTransferContactPutTooManyRequests{}
}

/*ListsTransferContactPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ListsTransferContactPutTooManyRequests struct {
	Payload interface{}
}

func (o *ListsTransferContactPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] listsTransferContactPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListsTransferContactPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsTransferContactPutDefault creates a ListsTransferContactPutDefault with default headers values
func NewListsTransferContactPutDefault(code int) *ListsTransferContactPutDefault {
	return &ListsTransferContactPutDefault{
		_statusCode: code,
	}
}

/*ListsTransferContactPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ListsTransferContactPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the lists transfer contact put default response
func (o *ListsTransferContactPutDefault) Code() int {
	return o._statusCode
}

func (o *ListsTransferContactPutDefault) Error() string {
	return fmt.Sprintf("[PUT /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}][%d] ListsTransferContactPut default  %+v", o._statusCode, o.Payload)
}

func (o *ListsTransferContactPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
