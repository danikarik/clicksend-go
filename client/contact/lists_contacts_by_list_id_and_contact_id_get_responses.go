// Code generated by go-swagger; DO NOT EDIT.

package contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListsContactsByListIDAndContactIDGetReader is a Reader for the ListsContactsByListIDAndContactIDGet structure.
type ListsContactsByListIDAndContactIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListsContactsByListIDAndContactIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListsContactsByListIDAndContactIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListsContactsByListIDAndContactIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListsContactsByListIDAndContactIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListsContactsByListIDAndContactIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListsContactsByListIDAndContactIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListsContactsByListIDAndContactIDGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListsContactsByListIDAndContactIDGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListsContactsByListIDAndContactIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListsContactsByListIDAndContactIDGetOK creates a ListsContactsByListIDAndContactIDGetOK with default headers values
func NewListsContactsByListIDAndContactIDGetOK() *ListsContactsByListIDAndContactIDGetOK {
	return &ListsContactsByListIDAndContactIDGetOK{}
}

/*ListsContactsByListIDAndContactIDGetOK handles this case with default header values.

SUCCESS
*/
type ListsContactsByListIDAndContactIDGetOK struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetOK) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetOK  %+v", 200, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetBadRequest creates a ListsContactsByListIDAndContactIDGetBadRequest with default headers values
func NewListsContactsByListIDAndContactIDGetBadRequest() *ListsContactsByListIDAndContactIDGetBadRequest {
	return &ListsContactsByListIDAndContactIDGetBadRequest{}
}

/*ListsContactsByListIDAndContactIDGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ListsContactsByListIDAndContactIDGetBadRequest struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetUnauthorized creates a ListsContactsByListIDAndContactIDGetUnauthorized with default headers values
func NewListsContactsByListIDAndContactIDGetUnauthorized() *ListsContactsByListIDAndContactIDGetUnauthorized {
	return &ListsContactsByListIDAndContactIDGetUnauthorized{}
}

/*ListsContactsByListIDAndContactIDGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ListsContactsByListIDAndContactIDGetUnauthorized struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetForbidden creates a ListsContactsByListIDAndContactIDGetForbidden with default headers values
func NewListsContactsByListIDAndContactIDGetForbidden() *ListsContactsByListIDAndContactIDGetForbidden {
	return &ListsContactsByListIDAndContactIDGetForbidden{}
}

/*ListsContactsByListIDAndContactIDGetForbidden handles this case with default header values.

FORBIDDEN
*/
type ListsContactsByListIDAndContactIDGetForbidden struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetForbidden  %+v", 403, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetNotFound creates a ListsContactsByListIDAndContactIDGetNotFound with default headers values
func NewListsContactsByListIDAndContactIDGetNotFound() *ListsContactsByListIDAndContactIDGetNotFound {
	return &ListsContactsByListIDAndContactIDGetNotFound{}
}

/*ListsContactsByListIDAndContactIDGetNotFound handles this case with default header values.

NOT_FOUND
*/
type ListsContactsByListIDAndContactIDGetNotFound struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetNotFound  %+v", 404, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetMethodNotAllowed creates a ListsContactsByListIDAndContactIDGetMethodNotAllowed with default headers values
func NewListsContactsByListIDAndContactIDGetMethodNotAllowed() *ListsContactsByListIDAndContactIDGetMethodNotAllowed {
	return &ListsContactsByListIDAndContactIDGetMethodNotAllowed{}
}

/*ListsContactsByListIDAndContactIDGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ListsContactsByListIDAndContactIDGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetTooManyRequests creates a ListsContactsByListIDAndContactIDGetTooManyRequests with default headers values
func NewListsContactsByListIDAndContactIDGetTooManyRequests() *ListsContactsByListIDAndContactIDGetTooManyRequests {
	return &ListsContactsByListIDAndContactIDGetTooManyRequests{}
}

/*ListsContactsByListIDAndContactIDGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ListsContactsByListIDAndContactIDGetTooManyRequests struct {
	Payload interface{}
}

func (o *ListsContactsByListIDAndContactIDGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] listsContactsByListIdAndContactIdGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsContactsByListIDAndContactIDGetDefault creates a ListsContactsByListIDAndContactIDGetDefault with default headers values
func NewListsContactsByListIDAndContactIDGetDefault(code int) *ListsContactsByListIDAndContactIDGetDefault {
	return &ListsContactsByListIDAndContactIDGetDefault{
		_statusCode: code,
	}
}

/*ListsContactsByListIDAndContactIDGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ListsContactsByListIDAndContactIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the lists contacts by list Id and contact Id get default response
func (o *ListsContactsByListIDAndContactIDGetDefault) Code() int {
	return o._statusCode
}

func (o *ListsContactsByListIDAndContactIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}/contacts/{contact_id}][%d] ListsContactsByListIdAndContactIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *ListsContactsByListIDAndContactIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
