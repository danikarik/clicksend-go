// Code generated by go-swagger; DO NOT EDIT.

package voice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// VoiceHistoryExportGetReader is a Reader for the VoiceHistoryExportGet structure.
type VoiceHistoryExportGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VoiceHistoryExportGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewVoiceHistoryExportGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewVoiceHistoryExportGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewVoiceHistoryExportGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewVoiceHistoryExportGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewVoiceHistoryExportGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewVoiceHistoryExportGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewVoiceHistoryExportGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewVoiceHistoryExportGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVoiceHistoryExportGetOK creates a VoiceHistoryExportGetOK with default headers values
func NewVoiceHistoryExportGetOK() *VoiceHistoryExportGetOK {
	return &VoiceHistoryExportGetOK{}
}

/*VoiceHistoryExportGetOK handles this case with default header values.

SUCCESS
*/
type VoiceHistoryExportGetOK struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetOK) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetOK  %+v", 200, o.Payload)
}

func (o *VoiceHistoryExportGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetBadRequest creates a VoiceHistoryExportGetBadRequest with default headers values
func NewVoiceHistoryExportGetBadRequest() *VoiceHistoryExportGetBadRequest {
	return &VoiceHistoryExportGetBadRequest{}
}

/*VoiceHistoryExportGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type VoiceHistoryExportGetBadRequest struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetBadRequest  %+v", 400, o.Payload)
}

func (o *VoiceHistoryExportGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetUnauthorized creates a VoiceHistoryExportGetUnauthorized with default headers values
func NewVoiceHistoryExportGetUnauthorized() *VoiceHistoryExportGetUnauthorized {
	return &VoiceHistoryExportGetUnauthorized{}
}

/*VoiceHistoryExportGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type VoiceHistoryExportGetUnauthorized struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetUnauthorized  %+v", 401, o.Payload)
}

func (o *VoiceHistoryExportGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetForbidden creates a VoiceHistoryExportGetForbidden with default headers values
func NewVoiceHistoryExportGetForbidden() *VoiceHistoryExportGetForbidden {
	return &VoiceHistoryExportGetForbidden{}
}

/*VoiceHistoryExportGetForbidden handles this case with default header values.

FORBIDDEN
*/
type VoiceHistoryExportGetForbidden struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetForbidden) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetForbidden  %+v", 403, o.Payload)
}

func (o *VoiceHistoryExportGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetNotFound creates a VoiceHistoryExportGetNotFound with default headers values
func NewVoiceHistoryExportGetNotFound() *VoiceHistoryExportGetNotFound {
	return &VoiceHistoryExportGetNotFound{}
}

/*VoiceHistoryExportGetNotFound handles this case with default header values.

NOT_FOUND
*/
type VoiceHistoryExportGetNotFound struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetNotFound) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetNotFound  %+v", 404, o.Payload)
}

func (o *VoiceHistoryExportGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetMethodNotAllowed creates a VoiceHistoryExportGetMethodNotAllowed with default headers values
func NewVoiceHistoryExportGetMethodNotAllowed() *VoiceHistoryExportGetMethodNotAllowed {
	return &VoiceHistoryExportGetMethodNotAllowed{}
}

/*VoiceHistoryExportGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type VoiceHistoryExportGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *VoiceHistoryExportGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetTooManyRequests creates a VoiceHistoryExportGetTooManyRequests with default headers values
func NewVoiceHistoryExportGetTooManyRequests() *VoiceHistoryExportGetTooManyRequests {
	return &VoiceHistoryExportGetTooManyRequests{}
}

/*VoiceHistoryExportGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type VoiceHistoryExportGetTooManyRequests struct {
	Payload interface{}
}

func (o *VoiceHistoryExportGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] voiceHistoryExportGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *VoiceHistoryExportGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceHistoryExportGetDefault creates a VoiceHistoryExportGetDefault with default headers values
func NewVoiceHistoryExportGetDefault(code int) *VoiceHistoryExportGetDefault {
	return &VoiceHistoryExportGetDefault{
		_statusCode: code,
	}
}

/*VoiceHistoryExportGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type VoiceHistoryExportGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the voice history export get default response
func (o *VoiceHistoryExportGetDefault) Code() int {
	return o._statusCode
}

func (o *VoiceHistoryExportGetDefault) Error() string {
	return fmt.Sprintf("[GET /voice/history/export][%d] VoiceHistoryExportGet default  %+v", o._statusCode, o.Payload)
}

func (o *VoiceHistoryExportGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
