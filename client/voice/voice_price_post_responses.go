// Code generated by go-swagger; DO NOT EDIT.

package voice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// VoicePricePostReader is a Reader for the VoicePricePost structure.
type VoicePricePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VoicePricePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewVoicePricePostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewVoicePricePostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewVoicePricePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewVoicePricePostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewVoicePricePostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewVoicePricePostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewVoicePricePostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewVoicePricePostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVoicePricePostOK creates a VoicePricePostOK with default headers values
func NewVoicePricePostOK() *VoicePricePostOK {
	return &VoicePricePostOK{}
}

/*VoicePricePostOK handles this case with default header values.

SUCCESS
*/
type VoicePricePostOK struct {
	Payload interface{}
}

func (o *VoicePricePostOK) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostOK  %+v", 200, o.Payload)
}

func (o *VoicePricePostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostBadRequest creates a VoicePricePostBadRequest with default headers values
func NewVoicePricePostBadRequest() *VoicePricePostBadRequest {
	return &VoicePricePostBadRequest{}
}

/*VoicePricePostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type VoicePricePostBadRequest struct {
	Payload interface{}
}

func (o *VoicePricePostBadRequest) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostBadRequest  %+v", 400, o.Payload)
}

func (o *VoicePricePostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostUnauthorized creates a VoicePricePostUnauthorized with default headers values
func NewVoicePricePostUnauthorized() *VoicePricePostUnauthorized {
	return &VoicePricePostUnauthorized{}
}

/*VoicePricePostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type VoicePricePostUnauthorized struct {
	Payload interface{}
}

func (o *VoicePricePostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostUnauthorized  %+v", 401, o.Payload)
}

func (o *VoicePricePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostForbidden creates a VoicePricePostForbidden with default headers values
func NewVoicePricePostForbidden() *VoicePricePostForbidden {
	return &VoicePricePostForbidden{}
}

/*VoicePricePostForbidden handles this case with default header values.

FORBIDDEN
*/
type VoicePricePostForbidden struct {
	Payload interface{}
}

func (o *VoicePricePostForbidden) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostForbidden  %+v", 403, o.Payload)
}

func (o *VoicePricePostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostNotFound creates a VoicePricePostNotFound with default headers values
func NewVoicePricePostNotFound() *VoicePricePostNotFound {
	return &VoicePricePostNotFound{}
}

/*VoicePricePostNotFound handles this case with default header values.

NOT_FOUND
*/
type VoicePricePostNotFound struct {
	Payload interface{}
}

func (o *VoicePricePostNotFound) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostNotFound  %+v", 404, o.Payload)
}

func (o *VoicePricePostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostMethodNotAllowed creates a VoicePricePostMethodNotAllowed with default headers values
func NewVoicePricePostMethodNotAllowed() *VoicePricePostMethodNotAllowed {
	return &VoicePricePostMethodNotAllowed{}
}

/*VoicePricePostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type VoicePricePostMethodNotAllowed struct {
	Payload interface{}
}

func (o *VoicePricePostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *VoicePricePostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostTooManyRequests creates a VoicePricePostTooManyRequests with default headers values
func NewVoicePricePostTooManyRequests() *VoicePricePostTooManyRequests {
	return &VoicePricePostTooManyRequests{}
}

/*VoicePricePostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type VoicePricePostTooManyRequests struct {
	Payload interface{}
}

func (o *VoicePricePostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] voicePricePostTooManyRequests  %+v", 429, o.Payload)
}

func (o *VoicePricePostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoicePricePostDefault creates a VoicePricePostDefault with default headers values
func NewVoicePricePostDefault(code int) *VoicePricePostDefault {
	return &VoicePricePostDefault{
		_statusCode: code,
	}
}

/*VoicePricePostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type VoicePricePostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the voice price post default response
func (o *VoicePricePostDefault) Code() int {
	return o._statusCode
}

func (o *VoicePricePostDefault) Error() string {
	return fmt.Sprintf("[POST /voice/price][%d] VoicePricePost default  %+v", o._statusCode, o.Payload)
}

func (o *VoicePricePostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
