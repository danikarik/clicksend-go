// Code generated by go-swagger; DO NOT EDIT.

package voice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// VoiceReceiptsReadPutReader is a Reader for the VoiceReceiptsReadPut structure.
type VoiceReceiptsReadPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VoiceReceiptsReadPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewVoiceReceiptsReadPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewVoiceReceiptsReadPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewVoiceReceiptsReadPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewVoiceReceiptsReadPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewVoiceReceiptsReadPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewVoiceReceiptsReadPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewVoiceReceiptsReadPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewVoiceReceiptsReadPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVoiceReceiptsReadPutOK creates a VoiceReceiptsReadPutOK with default headers values
func NewVoiceReceiptsReadPutOK() *VoiceReceiptsReadPutOK {
	return &VoiceReceiptsReadPutOK{}
}

/*VoiceReceiptsReadPutOK handles this case with default header values.

SUCCESS
*/
type VoiceReceiptsReadPutOK struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutOK) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutOK  %+v", 200, o.Payload)
}

func (o *VoiceReceiptsReadPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutBadRequest creates a VoiceReceiptsReadPutBadRequest with default headers values
func NewVoiceReceiptsReadPutBadRequest() *VoiceReceiptsReadPutBadRequest {
	return &VoiceReceiptsReadPutBadRequest{}
}

/*VoiceReceiptsReadPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type VoiceReceiptsReadPutBadRequest struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutBadRequest  %+v", 400, o.Payload)
}

func (o *VoiceReceiptsReadPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutUnauthorized creates a VoiceReceiptsReadPutUnauthorized with default headers values
func NewVoiceReceiptsReadPutUnauthorized() *VoiceReceiptsReadPutUnauthorized {
	return &VoiceReceiptsReadPutUnauthorized{}
}

/*VoiceReceiptsReadPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type VoiceReceiptsReadPutUnauthorized struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutUnauthorized  %+v", 401, o.Payload)
}

func (o *VoiceReceiptsReadPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutForbidden creates a VoiceReceiptsReadPutForbidden with default headers values
func NewVoiceReceiptsReadPutForbidden() *VoiceReceiptsReadPutForbidden {
	return &VoiceReceiptsReadPutForbidden{}
}

/*VoiceReceiptsReadPutForbidden handles this case with default header values.

FORBIDDEN
*/
type VoiceReceiptsReadPutForbidden struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutForbidden  %+v", 403, o.Payload)
}

func (o *VoiceReceiptsReadPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutNotFound creates a VoiceReceiptsReadPutNotFound with default headers values
func NewVoiceReceiptsReadPutNotFound() *VoiceReceiptsReadPutNotFound {
	return &VoiceReceiptsReadPutNotFound{}
}

/*VoiceReceiptsReadPutNotFound handles this case with default header values.

NOT_FOUND
*/
type VoiceReceiptsReadPutNotFound struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutNotFound  %+v", 404, o.Payload)
}

func (o *VoiceReceiptsReadPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutMethodNotAllowed creates a VoiceReceiptsReadPutMethodNotAllowed with default headers values
func NewVoiceReceiptsReadPutMethodNotAllowed() *VoiceReceiptsReadPutMethodNotAllowed {
	return &VoiceReceiptsReadPutMethodNotAllowed{}
}

/*VoiceReceiptsReadPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type VoiceReceiptsReadPutMethodNotAllowed struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *VoiceReceiptsReadPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutTooManyRequests creates a VoiceReceiptsReadPutTooManyRequests with default headers values
func NewVoiceReceiptsReadPutTooManyRequests() *VoiceReceiptsReadPutTooManyRequests {
	return &VoiceReceiptsReadPutTooManyRequests{}
}

/*VoiceReceiptsReadPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type VoiceReceiptsReadPutTooManyRequests struct {
	Payload interface{}
}

func (o *VoiceReceiptsReadPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] voiceReceiptsReadPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *VoiceReceiptsReadPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoiceReceiptsReadPutDefault creates a VoiceReceiptsReadPutDefault with default headers values
func NewVoiceReceiptsReadPutDefault(code int) *VoiceReceiptsReadPutDefault {
	return &VoiceReceiptsReadPutDefault{
		_statusCode: code,
	}
}

/*VoiceReceiptsReadPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type VoiceReceiptsReadPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the voice receipts read put default response
func (o *VoiceReceiptsReadPutDefault) Code() int {
	return o._statusCode
}

func (o *VoiceReceiptsReadPutDefault) Error() string {
	return fmt.Sprintf("[PUT /voice/receipts-read][%d] VoiceReceiptsReadPut default  %+v", o._statusCode, o.Payload)
}

func (o *VoiceReceiptsReadPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
