// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSHistoryExportGetReader is a Reader for the SMSHistoryExportGet structure.
type SMSHistoryExportGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSHistoryExportGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSHistoryExportGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSHistoryExportGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSHistoryExportGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSHistoryExportGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSHistoryExportGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSHistoryExportGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSHistoryExportGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSHistoryExportGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSHistoryExportGetOK creates a SMSHistoryExportGetOK with default headers values
func NewSMSHistoryExportGetOK() *SMSHistoryExportGetOK {
	return &SMSHistoryExportGetOK{}
}

/*SMSHistoryExportGetOK handles this case with default header values.

SUCCESS
*/
type SMSHistoryExportGetOK struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetOK) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetOK  %+v", 200, o.Payload)
}

func (o *SMSHistoryExportGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetBadRequest creates a SMSHistoryExportGetBadRequest with default headers values
func NewSMSHistoryExportGetBadRequest() *SMSHistoryExportGetBadRequest {
	return &SMSHistoryExportGetBadRequest{}
}

/*SMSHistoryExportGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSHistoryExportGetBadRequest struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetBadRequest  %+v", 400, o.Payload)
}

func (o *SMSHistoryExportGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetUnauthorized creates a SMSHistoryExportGetUnauthorized with default headers values
func NewSMSHistoryExportGetUnauthorized() *SMSHistoryExportGetUnauthorized {
	return &SMSHistoryExportGetUnauthorized{}
}

/*SMSHistoryExportGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSHistoryExportGetUnauthorized struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSHistoryExportGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetForbidden creates a SMSHistoryExportGetForbidden with default headers values
func NewSMSHistoryExportGetForbidden() *SMSHistoryExportGetForbidden {
	return &SMSHistoryExportGetForbidden{}
}

/*SMSHistoryExportGetForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSHistoryExportGetForbidden struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetForbidden) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetForbidden  %+v", 403, o.Payload)
}

func (o *SMSHistoryExportGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetNotFound creates a SMSHistoryExportGetNotFound with default headers values
func NewSMSHistoryExportGetNotFound() *SMSHistoryExportGetNotFound {
	return &SMSHistoryExportGetNotFound{}
}

/*SMSHistoryExportGetNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSHistoryExportGetNotFound struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetNotFound) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetNotFound  %+v", 404, o.Payload)
}

func (o *SMSHistoryExportGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetMethodNotAllowed creates a SMSHistoryExportGetMethodNotAllowed with default headers values
func NewSMSHistoryExportGetMethodNotAllowed() *SMSHistoryExportGetMethodNotAllowed {
	return &SMSHistoryExportGetMethodNotAllowed{}
}

/*SMSHistoryExportGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSHistoryExportGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSHistoryExportGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetTooManyRequests creates a SMSHistoryExportGetTooManyRequests with default headers values
func NewSMSHistoryExportGetTooManyRequests() *SMSHistoryExportGetTooManyRequests {
	return &SMSHistoryExportGetTooManyRequests{}
}

/*SMSHistoryExportGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSHistoryExportGetTooManyRequests struct {
	Payload interface{}
}

func (o *SMSHistoryExportGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] smsHistoryExportGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSHistoryExportGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSHistoryExportGetDefault creates a SMSHistoryExportGetDefault with default headers values
func NewSMSHistoryExportGetDefault(code int) *SMSHistoryExportGetDefault {
	return &SMSHistoryExportGetDefault{
		_statusCode: code,
	}
}

/*SMSHistoryExportGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSHistoryExportGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the Sms history export get default response
func (o *SMSHistoryExportGetDefault) Code() int {
	return o._statusCode
}

func (o *SMSHistoryExportGetDefault) Error() string {
	return fmt.Sprintf("[GET /sms/history/export][%d] SmsHistoryExportGet default  %+v", o._statusCode, o.Payload)
}

func (o *SMSHistoryExportGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
