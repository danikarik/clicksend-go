// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSReceiptsReadPutReader is a Reader for the SMSReceiptsReadPut structure.
type SMSReceiptsReadPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSReceiptsReadPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSReceiptsReadPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSReceiptsReadPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSReceiptsReadPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSReceiptsReadPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSReceiptsReadPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSReceiptsReadPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSReceiptsReadPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSReceiptsReadPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSReceiptsReadPutOK creates a SMSReceiptsReadPutOK with default headers values
func NewSMSReceiptsReadPutOK() *SMSReceiptsReadPutOK {
	return &SMSReceiptsReadPutOK{}
}

/*SMSReceiptsReadPutOK handles this case with default header values.

SUCCESS
*/
type SMSReceiptsReadPutOK struct {
	Payload string
}

func (o *SMSReceiptsReadPutOK) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutOK  %+v", 200, o.Payload)
}

func (o *SMSReceiptsReadPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutBadRequest creates a SMSReceiptsReadPutBadRequest with default headers values
func NewSMSReceiptsReadPutBadRequest() *SMSReceiptsReadPutBadRequest {
	return &SMSReceiptsReadPutBadRequest{}
}

/*SMSReceiptsReadPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSReceiptsReadPutBadRequest struct {
	Payload string
}

func (o *SMSReceiptsReadPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutBadRequest  %+v", 400, o.Payload)
}

func (o *SMSReceiptsReadPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutUnauthorized creates a SMSReceiptsReadPutUnauthorized with default headers values
func NewSMSReceiptsReadPutUnauthorized() *SMSReceiptsReadPutUnauthorized {
	return &SMSReceiptsReadPutUnauthorized{}
}

/*SMSReceiptsReadPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSReceiptsReadPutUnauthorized struct {
	Payload string
}

func (o *SMSReceiptsReadPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSReceiptsReadPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutForbidden creates a SMSReceiptsReadPutForbidden with default headers values
func NewSMSReceiptsReadPutForbidden() *SMSReceiptsReadPutForbidden {
	return &SMSReceiptsReadPutForbidden{}
}

/*SMSReceiptsReadPutForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSReceiptsReadPutForbidden struct {
	Payload string
}

func (o *SMSReceiptsReadPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutForbidden  %+v", 403, o.Payload)
}

func (o *SMSReceiptsReadPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutNotFound creates a SMSReceiptsReadPutNotFound with default headers values
func NewSMSReceiptsReadPutNotFound() *SMSReceiptsReadPutNotFound {
	return &SMSReceiptsReadPutNotFound{}
}

/*SMSReceiptsReadPutNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSReceiptsReadPutNotFound struct {
	Payload string
}

func (o *SMSReceiptsReadPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutNotFound  %+v", 404, o.Payload)
}

func (o *SMSReceiptsReadPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutMethodNotAllowed creates a SMSReceiptsReadPutMethodNotAllowed with default headers values
func NewSMSReceiptsReadPutMethodNotAllowed() *SMSReceiptsReadPutMethodNotAllowed {
	return &SMSReceiptsReadPutMethodNotAllowed{}
}

/*SMSReceiptsReadPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSReceiptsReadPutMethodNotAllowed struct {
	Payload string
}

func (o *SMSReceiptsReadPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSReceiptsReadPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutTooManyRequests creates a SMSReceiptsReadPutTooManyRequests with default headers values
func NewSMSReceiptsReadPutTooManyRequests() *SMSReceiptsReadPutTooManyRequests {
	return &SMSReceiptsReadPutTooManyRequests{}
}

/*SMSReceiptsReadPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSReceiptsReadPutTooManyRequests struct {
	Payload string
}

func (o *SMSReceiptsReadPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] smsReceiptsReadPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSReceiptsReadPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsReadPutDefault creates a SMSReceiptsReadPutDefault with default headers values
func NewSMSReceiptsReadPutDefault(code int) *SMSReceiptsReadPutDefault {
	return &SMSReceiptsReadPutDefault{
		_statusCode: code,
	}
}

/*SMSReceiptsReadPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSReceiptsReadPutDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Sms receipts read put default response
func (o *SMSReceiptsReadPutDefault) Code() int {
	return o._statusCode
}

func (o *SMSReceiptsReadPutDefault) Error() string {
	return fmt.Sprintf("[PUT /sms/receipts-read][%d] SmsReceiptsReadPut default  %+v", o._statusCode, o.Payload)
}

func (o *SMSReceiptsReadPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
