// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSReceiptsPostReader is a Reader for the SMSReceiptsPost structure.
type SMSReceiptsPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSReceiptsPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSReceiptsPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSReceiptsPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSReceiptsPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSReceiptsPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSReceiptsPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSReceiptsPostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSReceiptsPostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSReceiptsPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSReceiptsPostOK creates a SMSReceiptsPostOK with default headers values
func NewSMSReceiptsPostOK() *SMSReceiptsPostOK {
	return &SMSReceiptsPostOK{}
}

/*SMSReceiptsPostOK handles this case with default header values.

SUCCESS
*/
type SMSReceiptsPostOK struct {
	Payload interface{}
}

func (o *SMSReceiptsPostOK) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostOK  %+v", 200, o.Payload)
}

func (o *SMSReceiptsPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostBadRequest creates a SMSReceiptsPostBadRequest with default headers values
func NewSMSReceiptsPostBadRequest() *SMSReceiptsPostBadRequest {
	return &SMSReceiptsPostBadRequest{}
}

/*SMSReceiptsPostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSReceiptsPostBadRequest struct {
	Payload interface{}
}

func (o *SMSReceiptsPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostBadRequest  %+v", 400, o.Payload)
}

func (o *SMSReceiptsPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostUnauthorized creates a SMSReceiptsPostUnauthorized with default headers values
func NewSMSReceiptsPostUnauthorized() *SMSReceiptsPostUnauthorized {
	return &SMSReceiptsPostUnauthorized{}
}

/*SMSReceiptsPostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSReceiptsPostUnauthorized struct {
	Payload interface{}
}

func (o *SMSReceiptsPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSReceiptsPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostForbidden creates a SMSReceiptsPostForbidden with default headers values
func NewSMSReceiptsPostForbidden() *SMSReceiptsPostForbidden {
	return &SMSReceiptsPostForbidden{}
}

/*SMSReceiptsPostForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSReceiptsPostForbidden struct {
	Payload interface{}
}

func (o *SMSReceiptsPostForbidden) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostForbidden  %+v", 403, o.Payload)
}

func (o *SMSReceiptsPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostNotFound creates a SMSReceiptsPostNotFound with default headers values
func NewSMSReceiptsPostNotFound() *SMSReceiptsPostNotFound {
	return &SMSReceiptsPostNotFound{}
}

/*SMSReceiptsPostNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSReceiptsPostNotFound struct {
	Payload interface{}
}

func (o *SMSReceiptsPostNotFound) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostNotFound  %+v", 404, o.Payload)
}

func (o *SMSReceiptsPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostMethodNotAllowed creates a SMSReceiptsPostMethodNotAllowed with default headers values
func NewSMSReceiptsPostMethodNotAllowed() *SMSReceiptsPostMethodNotAllowed {
	return &SMSReceiptsPostMethodNotAllowed{}
}

/*SMSReceiptsPostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSReceiptsPostMethodNotAllowed struct {
	Payload interface{}
}

func (o *SMSReceiptsPostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSReceiptsPostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostTooManyRequests creates a SMSReceiptsPostTooManyRequests with default headers values
func NewSMSReceiptsPostTooManyRequests() *SMSReceiptsPostTooManyRequests {
	return &SMSReceiptsPostTooManyRequests{}
}

/*SMSReceiptsPostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSReceiptsPostTooManyRequests struct {
	Payload interface{}
}

func (o *SMSReceiptsPostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] smsReceiptsPostTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSReceiptsPostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsPostDefault creates a SMSReceiptsPostDefault with default headers values
func NewSMSReceiptsPostDefault(code int) *SMSReceiptsPostDefault {
	return &SMSReceiptsPostDefault{
		_statusCode: code,
	}
}

/*SMSReceiptsPostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSReceiptsPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the Sms receipts post default response
func (o *SMSReceiptsPostDefault) Code() int {
	return o._statusCode
}

func (o *SMSReceiptsPostDefault) Error() string {
	return fmt.Sprintf("[POST /sms/receipts][%d] SmsReceiptsPost default  %+v", o._statusCode, o.Payload)
}

func (o *SMSReceiptsPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
