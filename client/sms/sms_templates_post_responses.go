// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSTemplatesPostReader is a Reader for the SMSTemplatesPost structure.
type SMSTemplatesPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSTemplatesPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSTemplatesPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSTemplatesPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSTemplatesPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSTemplatesPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSTemplatesPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSTemplatesPostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSTemplatesPostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSTemplatesPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSTemplatesPostOK creates a SMSTemplatesPostOK with default headers values
func NewSMSTemplatesPostOK() *SMSTemplatesPostOK {
	return &SMSTemplatesPostOK{}
}

/*SMSTemplatesPostOK handles this case with default header values.

SUCCESS
*/
type SMSTemplatesPostOK struct {
	Payload string
}

func (o *SMSTemplatesPostOK) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostOK  %+v", 200, o.Payload)
}

func (o *SMSTemplatesPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostBadRequest creates a SMSTemplatesPostBadRequest with default headers values
func NewSMSTemplatesPostBadRequest() *SMSTemplatesPostBadRequest {
	return &SMSTemplatesPostBadRequest{}
}

/*SMSTemplatesPostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSTemplatesPostBadRequest struct {
	Payload string
}

func (o *SMSTemplatesPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostBadRequest  %+v", 400, o.Payload)
}

func (o *SMSTemplatesPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostUnauthorized creates a SMSTemplatesPostUnauthorized with default headers values
func NewSMSTemplatesPostUnauthorized() *SMSTemplatesPostUnauthorized {
	return &SMSTemplatesPostUnauthorized{}
}

/*SMSTemplatesPostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSTemplatesPostUnauthorized struct {
	Payload string
}

func (o *SMSTemplatesPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSTemplatesPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostForbidden creates a SMSTemplatesPostForbidden with default headers values
func NewSMSTemplatesPostForbidden() *SMSTemplatesPostForbidden {
	return &SMSTemplatesPostForbidden{}
}

/*SMSTemplatesPostForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSTemplatesPostForbidden struct {
	Payload string
}

func (o *SMSTemplatesPostForbidden) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostForbidden  %+v", 403, o.Payload)
}

func (o *SMSTemplatesPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostNotFound creates a SMSTemplatesPostNotFound with default headers values
func NewSMSTemplatesPostNotFound() *SMSTemplatesPostNotFound {
	return &SMSTemplatesPostNotFound{}
}

/*SMSTemplatesPostNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSTemplatesPostNotFound struct {
	Payload string
}

func (o *SMSTemplatesPostNotFound) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostNotFound  %+v", 404, o.Payload)
}

func (o *SMSTemplatesPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostMethodNotAllowed creates a SMSTemplatesPostMethodNotAllowed with default headers values
func NewSMSTemplatesPostMethodNotAllowed() *SMSTemplatesPostMethodNotAllowed {
	return &SMSTemplatesPostMethodNotAllowed{}
}

/*SMSTemplatesPostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSTemplatesPostMethodNotAllowed struct {
	Payload string
}

func (o *SMSTemplatesPostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSTemplatesPostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostTooManyRequests creates a SMSTemplatesPostTooManyRequests with default headers values
func NewSMSTemplatesPostTooManyRequests() *SMSTemplatesPostTooManyRequests {
	return &SMSTemplatesPostTooManyRequests{}
}

/*SMSTemplatesPostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSTemplatesPostTooManyRequests struct {
	Payload string
}

func (o *SMSTemplatesPostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] smsTemplatesPostTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSTemplatesPostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesPostDefault creates a SMSTemplatesPostDefault with default headers values
func NewSMSTemplatesPostDefault(code int) *SMSTemplatesPostDefault {
	return &SMSTemplatesPostDefault{
		_statusCode: code,
	}
}

/*SMSTemplatesPostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSTemplatesPostDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Sms templates post default response
func (o *SMSTemplatesPostDefault) Code() int {
	return o._statusCode
}

func (o *SMSTemplatesPostDefault) Error() string {
	return fmt.Sprintf("[POST /sms/templates][%d] SmsTemplatesPost default  %+v", o._statusCode, o.Payload)
}

func (o *SMSTemplatesPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
