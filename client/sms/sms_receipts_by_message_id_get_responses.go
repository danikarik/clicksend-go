// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSReceiptsByMessageIDGetReader is a Reader for the SMSReceiptsByMessageIDGet structure.
type SMSReceiptsByMessageIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSReceiptsByMessageIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSReceiptsByMessageIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSReceiptsByMessageIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSReceiptsByMessageIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSReceiptsByMessageIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSReceiptsByMessageIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSReceiptsByMessageIDGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSReceiptsByMessageIDGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSReceiptsByMessageIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSReceiptsByMessageIDGetOK creates a SMSReceiptsByMessageIDGetOK with default headers values
func NewSMSReceiptsByMessageIDGetOK() *SMSReceiptsByMessageIDGetOK {
	return &SMSReceiptsByMessageIDGetOK{}
}

/*SMSReceiptsByMessageIDGetOK handles this case with default header values.

SUCCESS
*/
type SMSReceiptsByMessageIDGetOK struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetOK) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetOK  %+v", 200, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetBadRequest creates a SMSReceiptsByMessageIDGetBadRequest with default headers values
func NewSMSReceiptsByMessageIDGetBadRequest() *SMSReceiptsByMessageIDGetBadRequest {
	return &SMSReceiptsByMessageIDGetBadRequest{}
}

/*SMSReceiptsByMessageIDGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSReceiptsByMessageIDGetBadRequest struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetUnauthorized creates a SMSReceiptsByMessageIDGetUnauthorized with default headers values
func NewSMSReceiptsByMessageIDGetUnauthorized() *SMSReceiptsByMessageIDGetUnauthorized {
	return &SMSReceiptsByMessageIDGetUnauthorized{}
}

/*SMSReceiptsByMessageIDGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSReceiptsByMessageIDGetUnauthorized struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetForbidden creates a SMSReceiptsByMessageIDGetForbidden with default headers values
func NewSMSReceiptsByMessageIDGetForbidden() *SMSReceiptsByMessageIDGetForbidden {
	return &SMSReceiptsByMessageIDGetForbidden{}
}

/*SMSReceiptsByMessageIDGetForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSReceiptsByMessageIDGetForbidden struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetForbidden  %+v", 403, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetNotFound creates a SMSReceiptsByMessageIDGetNotFound with default headers values
func NewSMSReceiptsByMessageIDGetNotFound() *SMSReceiptsByMessageIDGetNotFound {
	return &SMSReceiptsByMessageIDGetNotFound{}
}

/*SMSReceiptsByMessageIDGetNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSReceiptsByMessageIDGetNotFound struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetNotFound  %+v", 404, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetMethodNotAllowed creates a SMSReceiptsByMessageIDGetMethodNotAllowed with default headers values
func NewSMSReceiptsByMessageIDGetMethodNotAllowed() *SMSReceiptsByMessageIDGetMethodNotAllowed {
	return &SMSReceiptsByMessageIDGetMethodNotAllowed{}
}

/*SMSReceiptsByMessageIDGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSReceiptsByMessageIDGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetTooManyRequests creates a SMSReceiptsByMessageIDGetTooManyRequests with default headers values
func NewSMSReceiptsByMessageIDGetTooManyRequests() *SMSReceiptsByMessageIDGetTooManyRequests {
	return &SMSReceiptsByMessageIDGetTooManyRequests{}
}

/*SMSReceiptsByMessageIDGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSReceiptsByMessageIDGetTooManyRequests struct {
	Payload interface{}
}

func (o *SMSReceiptsByMessageIDGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] smsReceiptsByMessageIdGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSReceiptsByMessageIDGetDefault creates a SMSReceiptsByMessageIDGetDefault with default headers values
func NewSMSReceiptsByMessageIDGetDefault(code int) *SMSReceiptsByMessageIDGetDefault {
	return &SMSReceiptsByMessageIDGetDefault{
		_statusCode: code,
	}
}

/*SMSReceiptsByMessageIDGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSReceiptsByMessageIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the Sms receipts by message Id get default response
func (o *SMSReceiptsByMessageIDGetDefault) Code() int {
	return o._statusCode
}

func (o *SMSReceiptsByMessageIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /sms/receipts/{message_id}][%d] SmsReceiptsByMessageIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *SMSReceiptsByMessageIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
