// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSTemplatesGetReader is a Reader for the SMSTemplatesGet structure.
type SMSTemplatesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSTemplatesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSTemplatesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSTemplatesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSTemplatesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSTemplatesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSTemplatesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSTemplatesGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSTemplatesGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSTemplatesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSTemplatesGetOK creates a SMSTemplatesGetOK with default headers values
func NewSMSTemplatesGetOK() *SMSTemplatesGetOK {
	return &SMSTemplatesGetOK{}
}

/*SMSTemplatesGetOK handles this case with default header values.

SUCCESS
*/
type SMSTemplatesGetOK struct {
	Payload string
}

func (o *SMSTemplatesGetOK) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetOK  %+v", 200, o.Payload)
}

func (o *SMSTemplatesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetBadRequest creates a SMSTemplatesGetBadRequest with default headers values
func NewSMSTemplatesGetBadRequest() *SMSTemplatesGetBadRequest {
	return &SMSTemplatesGetBadRequest{}
}

/*SMSTemplatesGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSTemplatesGetBadRequest struct {
	Payload string
}

func (o *SMSTemplatesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetBadRequest  %+v", 400, o.Payload)
}

func (o *SMSTemplatesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetUnauthorized creates a SMSTemplatesGetUnauthorized with default headers values
func NewSMSTemplatesGetUnauthorized() *SMSTemplatesGetUnauthorized {
	return &SMSTemplatesGetUnauthorized{}
}

/*SMSTemplatesGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSTemplatesGetUnauthorized struct {
	Payload string
}

func (o *SMSTemplatesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSTemplatesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetForbidden creates a SMSTemplatesGetForbidden with default headers values
func NewSMSTemplatesGetForbidden() *SMSTemplatesGetForbidden {
	return &SMSTemplatesGetForbidden{}
}

/*SMSTemplatesGetForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSTemplatesGetForbidden struct {
	Payload string
}

func (o *SMSTemplatesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetForbidden  %+v", 403, o.Payload)
}

func (o *SMSTemplatesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetNotFound creates a SMSTemplatesGetNotFound with default headers values
func NewSMSTemplatesGetNotFound() *SMSTemplatesGetNotFound {
	return &SMSTemplatesGetNotFound{}
}

/*SMSTemplatesGetNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSTemplatesGetNotFound struct {
	Payload string
}

func (o *SMSTemplatesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetNotFound  %+v", 404, o.Payload)
}

func (o *SMSTemplatesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetMethodNotAllowed creates a SMSTemplatesGetMethodNotAllowed with default headers values
func NewSMSTemplatesGetMethodNotAllowed() *SMSTemplatesGetMethodNotAllowed {
	return &SMSTemplatesGetMethodNotAllowed{}
}

/*SMSTemplatesGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSTemplatesGetMethodNotAllowed struct {
	Payload string
}

func (o *SMSTemplatesGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSTemplatesGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetTooManyRequests creates a SMSTemplatesGetTooManyRequests with default headers values
func NewSMSTemplatesGetTooManyRequests() *SMSTemplatesGetTooManyRequests {
	return &SMSTemplatesGetTooManyRequests{}
}

/*SMSTemplatesGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSTemplatesGetTooManyRequests struct {
	Payload string
}

func (o *SMSTemplatesGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] smsTemplatesGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSTemplatesGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSTemplatesGetDefault creates a SMSTemplatesGetDefault with default headers values
func NewSMSTemplatesGetDefault(code int) *SMSTemplatesGetDefault {
	return &SMSTemplatesGetDefault{
		_statusCode: code,
	}
}

/*SMSTemplatesGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSTemplatesGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Sms templates get default response
func (o *SMSTemplatesGetDefault) Code() int {
	return o._statusCode
}

func (o *SMSTemplatesGetDefault) Error() string {
	return fmt.Sprintf("[GET /sms/templates][%d] SmsTemplatesGet default  %+v", o._statusCode, o.Payload)
}

func (o *SMSTemplatesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
