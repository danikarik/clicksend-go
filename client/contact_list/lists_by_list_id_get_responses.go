// Code generated by go-swagger; DO NOT EDIT.

package contact_list

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListsByListIDGetReader is a Reader for the ListsByListIDGet structure.
type ListsByListIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListsByListIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListsByListIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListsByListIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListsByListIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListsByListIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListsByListIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListsByListIDGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListsByListIDGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListsByListIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListsByListIDGetOK creates a ListsByListIDGetOK with default headers values
func NewListsByListIDGetOK() *ListsByListIDGetOK {
	return &ListsByListIDGetOK{}
}

/*ListsByListIDGetOK handles this case with default header values.

SUCCESS
*/
type ListsByListIDGetOK struct {
	Payload string
}

func (o *ListsByListIDGetOK) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetOK  %+v", 200, o.Payload)
}

func (o *ListsByListIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetBadRequest creates a ListsByListIDGetBadRequest with default headers values
func NewListsByListIDGetBadRequest() *ListsByListIDGetBadRequest {
	return &ListsByListIDGetBadRequest{}
}

/*ListsByListIDGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ListsByListIDGetBadRequest struct {
	Payload string
}

func (o *ListsByListIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *ListsByListIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetUnauthorized creates a ListsByListIDGetUnauthorized with default headers values
func NewListsByListIDGetUnauthorized() *ListsByListIDGetUnauthorized {
	return &ListsByListIDGetUnauthorized{}
}

/*ListsByListIDGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ListsByListIDGetUnauthorized struct {
	Payload string
}

func (o *ListsByListIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *ListsByListIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetForbidden creates a ListsByListIDGetForbidden with default headers values
func NewListsByListIDGetForbidden() *ListsByListIDGetForbidden {
	return &ListsByListIDGetForbidden{}
}

/*ListsByListIDGetForbidden handles this case with default header values.

FORBIDDEN
*/
type ListsByListIDGetForbidden struct {
	Payload string
}

func (o *ListsByListIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetForbidden  %+v", 403, o.Payload)
}

func (o *ListsByListIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetNotFound creates a ListsByListIDGetNotFound with default headers values
func NewListsByListIDGetNotFound() *ListsByListIDGetNotFound {
	return &ListsByListIDGetNotFound{}
}

/*ListsByListIDGetNotFound handles this case with default header values.

NOT_FOUND
*/
type ListsByListIDGetNotFound struct {
	Payload string
}

func (o *ListsByListIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetNotFound  %+v", 404, o.Payload)
}

func (o *ListsByListIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetMethodNotAllowed creates a ListsByListIDGetMethodNotAllowed with default headers values
func NewListsByListIDGetMethodNotAllowed() *ListsByListIDGetMethodNotAllowed {
	return &ListsByListIDGetMethodNotAllowed{}
}

/*ListsByListIDGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ListsByListIDGetMethodNotAllowed struct {
	Payload string
}

func (o *ListsByListIDGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListsByListIDGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetTooManyRequests creates a ListsByListIDGetTooManyRequests with default headers values
func NewListsByListIDGetTooManyRequests() *ListsByListIDGetTooManyRequests {
	return &ListsByListIDGetTooManyRequests{}
}

/*ListsByListIDGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ListsByListIDGetTooManyRequests struct {
	Payload string
}

func (o *ListsByListIDGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] listsByListIdGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListsByListIDGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDGetDefault creates a ListsByListIDGetDefault with default headers values
func NewListsByListIDGetDefault(code int) *ListsByListIDGetDefault {
	return &ListsByListIDGetDefault{
		_statusCode: code,
	}
}

/*ListsByListIDGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ListsByListIDGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the lists by list Id get default response
func (o *ListsByListIDGetDefault) Code() int {
	return o._statusCode
}

func (o *ListsByListIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /lists/{list_id}][%d] ListsByListIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *ListsByListIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
