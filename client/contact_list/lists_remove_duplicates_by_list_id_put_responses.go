// Code generated by go-swagger; DO NOT EDIT.

package contact_list

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListsRemoveDuplicatesByListIDPutReader is a Reader for the ListsRemoveDuplicatesByListIDPut structure.
type ListsRemoveDuplicatesByListIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListsRemoveDuplicatesByListIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListsRemoveDuplicatesByListIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListsRemoveDuplicatesByListIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListsRemoveDuplicatesByListIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListsRemoveDuplicatesByListIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListsRemoveDuplicatesByListIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListsRemoveDuplicatesByListIDPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListsRemoveDuplicatesByListIDPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListsRemoveDuplicatesByListIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListsRemoveDuplicatesByListIDPutOK creates a ListsRemoveDuplicatesByListIDPutOK with default headers values
func NewListsRemoveDuplicatesByListIDPutOK() *ListsRemoveDuplicatesByListIDPutOK {
	return &ListsRemoveDuplicatesByListIDPutOK{}
}

/*ListsRemoveDuplicatesByListIDPutOK handles this case with default header values.

SUCCESS
*/
type ListsRemoveDuplicatesByListIDPutOK struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutOK  %+v", 200, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutBadRequest creates a ListsRemoveDuplicatesByListIDPutBadRequest with default headers values
func NewListsRemoveDuplicatesByListIDPutBadRequest() *ListsRemoveDuplicatesByListIDPutBadRequest {
	return &ListsRemoveDuplicatesByListIDPutBadRequest{}
}

/*ListsRemoveDuplicatesByListIDPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ListsRemoveDuplicatesByListIDPutBadRequest struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutBadRequest  %+v", 400, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutUnauthorized creates a ListsRemoveDuplicatesByListIDPutUnauthorized with default headers values
func NewListsRemoveDuplicatesByListIDPutUnauthorized() *ListsRemoveDuplicatesByListIDPutUnauthorized {
	return &ListsRemoveDuplicatesByListIDPutUnauthorized{}
}

/*ListsRemoveDuplicatesByListIDPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ListsRemoveDuplicatesByListIDPutUnauthorized struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutForbidden creates a ListsRemoveDuplicatesByListIDPutForbidden with default headers values
func NewListsRemoveDuplicatesByListIDPutForbidden() *ListsRemoveDuplicatesByListIDPutForbidden {
	return &ListsRemoveDuplicatesByListIDPutForbidden{}
}

/*ListsRemoveDuplicatesByListIDPutForbidden handles this case with default header values.

FORBIDDEN
*/
type ListsRemoveDuplicatesByListIDPutForbidden struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutForbidden  %+v", 403, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutNotFound creates a ListsRemoveDuplicatesByListIDPutNotFound with default headers values
func NewListsRemoveDuplicatesByListIDPutNotFound() *ListsRemoveDuplicatesByListIDPutNotFound {
	return &ListsRemoveDuplicatesByListIDPutNotFound{}
}

/*ListsRemoveDuplicatesByListIDPutNotFound handles this case with default header values.

NOT_FOUND
*/
type ListsRemoveDuplicatesByListIDPutNotFound struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutNotFound  %+v", 404, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutMethodNotAllowed creates a ListsRemoveDuplicatesByListIDPutMethodNotAllowed with default headers values
func NewListsRemoveDuplicatesByListIDPutMethodNotAllowed() *ListsRemoveDuplicatesByListIDPutMethodNotAllowed {
	return &ListsRemoveDuplicatesByListIDPutMethodNotAllowed{}
}

/*ListsRemoveDuplicatesByListIDPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ListsRemoveDuplicatesByListIDPutMethodNotAllowed struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutTooManyRequests creates a ListsRemoveDuplicatesByListIDPutTooManyRequests with default headers values
func NewListsRemoveDuplicatesByListIDPutTooManyRequests() *ListsRemoveDuplicatesByListIDPutTooManyRequests {
	return &ListsRemoveDuplicatesByListIDPutTooManyRequests{}
}

/*ListsRemoveDuplicatesByListIDPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ListsRemoveDuplicatesByListIDPutTooManyRequests struct {
	Payload interface{}
}

func (o *ListsRemoveDuplicatesByListIDPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] listsRemoveDuplicatesByListIdPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsRemoveDuplicatesByListIDPutDefault creates a ListsRemoveDuplicatesByListIDPutDefault with default headers values
func NewListsRemoveDuplicatesByListIDPutDefault(code int) *ListsRemoveDuplicatesByListIDPutDefault {
	return &ListsRemoveDuplicatesByListIDPutDefault{
		_statusCode: code,
	}
}

/*ListsRemoveDuplicatesByListIDPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ListsRemoveDuplicatesByListIDPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the lists remove duplicates by list Id put default response
func (o *ListsRemoveDuplicatesByListIDPutDefault) Code() int {
	return o._statusCode
}

func (o *ListsRemoveDuplicatesByListIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /lists/{list_id}/remove-duplicates][%d] ListsRemoveDuplicatesByListIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *ListsRemoveDuplicatesByListIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
