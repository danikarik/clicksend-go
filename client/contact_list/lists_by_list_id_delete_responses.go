// Code generated by go-swagger; DO NOT EDIT.

package contact_list

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListsByListIDDeleteReader is a Reader for the ListsByListIDDelete structure.
type ListsByListIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListsByListIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListsByListIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListsByListIDDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListsByListIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListsByListIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListsByListIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListsByListIDDeleteMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListsByListIDDeleteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListsByListIDDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListsByListIDDeleteOK creates a ListsByListIDDeleteOK with default headers values
func NewListsByListIDDeleteOK() *ListsByListIDDeleteOK {
	return &ListsByListIDDeleteOK{}
}

/*ListsByListIDDeleteOK handles this case with default header values.

SUCCESS
*/
type ListsByListIDDeleteOK struct {
	Payload string
}

func (o *ListsByListIDDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteOK  %+v", 200, o.Payload)
}

func (o *ListsByListIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteBadRequest creates a ListsByListIDDeleteBadRequest with default headers values
func NewListsByListIDDeleteBadRequest() *ListsByListIDDeleteBadRequest {
	return &ListsByListIDDeleteBadRequest{}
}

/*ListsByListIDDeleteBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ListsByListIDDeleteBadRequest struct {
	Payload string
}

func (o *ListsByListIDDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *ListsByListIDDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteUnauthorized creates a ListsByListIDDeleteUnauthorized with default headers values
func NewListsByListIDDeleteUnauthorized() *ListsByListIDDeleteUnauthorized {
	return &ListsByListIDDeleteUnauthorized{}
}

/*ListsByListIDDeleteUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ListsByListIDDeleteUnauthorized struct {
	Payload string
}

func (o *ListsByListIDDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ListsByListIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteForbidden creates a ListsByListIDDeleteForbidden with default headers values
func NewListsByListIDDeleteForbidden() *ListsByListIDDeleteForbidden {
	return &ListsByListIDDeleteForbidden{}
}

/*ListsByListIDDeleteForbidden handles this case with default header values.

FORBIDDEN
*/
type ListsByListIDDeleteForbidden struct {
	Payload string
}

func (o *ListsByListIDDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ListsByListIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteNotFound creates a ListsByListIDDeleteNotFound with default headers values
func NewListsByListIDDeleteNotFound() *ListsByListIDDeleteNotFound {
	return &ListsByListIDDeleteNotFound{}
}

/*ListsByListIDDeleteNotFound handles this case with default header values.

NOT_FOUND
*/
type ListsByListIDDeleteNotFound struct {
	Payload string
}

func (o *ListsByListIDDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ListsByListIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteMethodNotAllowed creates a ListsByListIDDeleteMethodNotAllowed with default headers values
func NewListsByListIDDeleteMethodNotAllowed() *ListsByListIDDeleteMethodNotAllowed {
	return &ListsByListIDDeleteMethodNotAllowed{}
}

/*ListsByListIDDeleteMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ListsByListIDDeleteMethodNotAllowed struct {
	Payload string
}

func (o *ListsByListIDDeleteMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListsByListIDDeleteMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteTooManyRequests creates a ListsByListIDDeleteTooManyRequests with default headers values
func NewListsByListIDDeleteTooManyRequests() *ListsByListIDDeleteTooManyRequests {
	return &ListsByListIDDeleteTooManyRequests{}
}

/*ListsByListIDDeleteTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ListsByListIDDeleteTooManyRequests struct {
	Payload string
}

func (o *ListsByListIDDeleteTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] listsByListIdDeleteTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListsByListIDDeleteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListsByListIDDeleteDefault creates a ListsByListIDDeleteDefault with default headers values
func NewListsByListIDDeleteDefault(code int) *ListsByListIDDeleteDefault {
	return &ListsByListIDDeleteDefault{
		_statusCode: code,
	}
}

/*ListsByListIDDeleteDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ListsByListIDDeleteDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the lists by list Id delete default response
func (o *ListsByListIDDeleteDefault) Code() int {
	return o._statusCode
}

func (o *ListsByListIDDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /lists/{list_id}][%d] ListsByListIdDelete default  %+v", o._statusCode, o.Payload)
}

func (o *ListsByListIDDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
