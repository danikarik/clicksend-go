// Code generated by go-swagger; DO NOT EDIT.

package fax

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// FAXReceiptsByMessageIDGetReader is a Reader for the FAXReceiptsByMessageIDGet structure.
type FAXReceiptsByMessageIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FAXReceiptsByMessageIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFAXReceiptsByMessageIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewFAXReceiptsByMessageIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewFAXReceiptsByMessageIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFAXReceiptsByMessageIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFAXReceiptsByMessageIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFAXReceiptsByMessageIDGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewFAXReceiptsByMessageIDGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFAXReceiptsByMessageIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFAXReceiptsByMessageIDGetOK creates a FAXReceiptsByMessageIDGetOK with default headers values
func NewFAXReceiptsByMessageIDGetOK() *FAXReceiptsByMessageIDGetOK {
	return &FAXReceiptsByMessageIDGetOK{}
}

/*FAXReceiptsByMessageIDGetOK handles this case with default header values.

SUCCESS
*/
type FAXReceiptsByMessageIDGetOK struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetOK) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetOK  %+v", 200, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetBadRequest creates a FAXReceiptsByMessageIDGetBadRequest with default headers values
func NewFAXReceiptsByMessageIDGetBadRequest() *FAXReceiptsByMessageIDGetBadRequest {
	return &FAXReceiptsByMessageIDGetBadRequest{}
}

/*FAXReceiptsByMessageIDGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type FAXReceiptsByMessageIDGetBadRequest struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetUnauthorized creates a FAXReceiptsByMessageIDGetUnauthorized with default headers values
func NewFAXReceiptsByMessageIDGetUnauthorized() *FAXReceiptsByMessageIDGetUnauthorized {
	return &FAXReceiptsByMessageIDGetUnauthorized{}
}

/*FAXReceiptsByMessageIDGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type FAXReceiptsByMessageIDGetUnauthorized struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetForbidden creates a FAXReceiptsByMessageIDGetForbidden with default headers values
func NewFAXReceiptsByMessageIDGetForbidden() *FAXReceiptsByMessageIDGetForbidden {
	return &FAXReceiptsByMessageIDGetForbidden{}
}

/*FAXReceiptsByMessageIDGetForbidden handles this case with default header values.

FORBIDDEN
*/
type FAXReceiptsByMessageIDGetForbidden struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetForbidden  %+v", 403, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetNotFound creates a FAXReceiptsByMessageIDGetNotFound with default headers values
func NewFAXReceiptsByMessageIDGetNotFound() *FAXReceiptsByMessageIDGetNotFound {
	return &FAXReceiptsByMessageIDGetNotFound{}
}

/*FAXReceiptsByMessageIDGetNotFound handles this case with default header values.

NOT_FOUND
*/
type FAXReceiptsByMessageIDGetNotFound struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetNotFound  %+v", 404, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetMethodNotAllowed creates a FAXReceiptsByMessageIDGetMethodNotAllowed with default headers values
func NewFAXReceiptsByMessageIDGetMethodNotAllowed() *FAXReceiptsByMessageIDGetMethodNotAllowed {
	return &FAXReceiptsByMessageIDGetMethodNotAllowed{}
}

/*FAXReceiptsByMessageIDGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type FAXReceiptsByMessageIDGetMethodNotAllowed struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetTooManyRequests creates a FAXReceiptsByMessageIDGetTooManyRequests with default headers values
func NewFAXReceiptsByMessageIDGetTooManyRequests() *FAXReceiptsByMessageIDGetTooManyRequests {
	return &FAXReceiptsByMessageIDGetTooManyRequests{}
}

/*FAXReceiptsByMessageIDGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type FAXReceiptsByMessageIDGetTooManyRequests struct {
	Payload string
}

func (o *FAXReceiptsByMessageIDGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] faxReceiptsByMessageIdGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXReceiptsByMessageIDGetDefault creates a FAXReceiptsByMessageIDGetDefault with default headers values
func NewFAXReceiptsByMessageIDGetDefault(code int) *FAXReceiptsByMessageIDGetDefault {
	return &FAXReceiptsByMessageIDGetDefault{
		_statusCode: code,
	}
}

/*FAXReceiptsByMessageIDGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type FAXReceiptsByMessageIDGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Fax receipts by message Id get default response
func (o *FAXReceiptsByMessageIDGetDefault) Code() int {
	return o._statusCode
}

func (o *FAXReceiptsByMessageIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /fax/receipts/{message_id}][%d] FaxReceiptsByMessageIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *FAXReceiptsByMessageIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
