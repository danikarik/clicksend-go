// Code generated by go-swagger; DO NOT EDIT.

package post_return_address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostReturnAddressesGetReader is a Reader for the PostReturnAddressesGet structure.
type PostReturnAddressesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReturnAddressesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostReturnAddressesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostReturnAddressesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostReturnAddressesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostReturnAddressesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostReturnAddressesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPostReturnAddressesGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostReturnAddressesGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostReturnAddressesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostReturnAddressesGetOK creates a PostReturnAddressesGetOK with default headers values
func NewPostReturnAddressesGetOK() *PostReturnAddressesGetOK {
	return &PostReturnAddressesGetOK{}
}

/*PostReturnAddressesGetOK handles this case with default header values.

SUCCESS
*/
type PostReturnAddressesGetOK struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetOK) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetOK  %+v", 200, o.Payload)
}

func (o *PostReturnAddressesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetBadRequest creates a PostReturnAddressesGetBadRequest with default headers values
func NewPostReturnAddressesGetBadRequest() *PostReturnAddressesGetBadRequest {
	return &PostReturnAddressesGetBadRequest{}
}

/*PostReturnAddressesGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type PostReturnAddressesGetBadRequest struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetBadRequest  %+v", 400, o.Payload)
}

func (o *PostReturnAddressesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetUnauthorized creates a PostReturnAddressesGetUnauthorized with default headers values
func NewPostReturnAddressesGetUnauthorized() *PostReturnAddressesGetUnauthorized {
	return &PostReturnAddressesGetUnauthorized{}
}

/*PostReturnAddressesGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type PostReturnAddressesGetUnauthorized struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetUnauthorized  %+v", 401, o.Payload)
}

func (o *PostReturnAddressesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetForbidden creates a PostReturnAddressesGetForbidden with default headers values
func NewPostReturnAddressesGetForbidden() *PostReturnAddressesGetForbidden {
	return &PostReturnAddressesGetForbidden{}
}

/*PostReturnAddressesGetForbidden handles this case with default header values.

FORBIDDEN
*/
type PostReturnAddressesGetForbidden struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetForbidden  %+v", 403, o.Payload)
}

func (o *PostReturnAddressesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetNotFound creates a PostReturnAddressesGetNotFound with default headers values
func NewPostReturnAddressesGetNotFound() *PostReturnAddressesGetNotFound {
	return &PostReturnAddressesGetNotFound{}
}

/*PostReturnAddressesGetNotFound handles this case with default header values.

NOT_FOUND
*/
type PostReturnAddressesGetNotFound struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetNotFound  %+v", 404, o.Payload)
}

func (o *PostReturnAddressesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetMethodNotAllowed creates a PostReturnAddressesGetMethodNotAllowed with default headers values
func NewPostReturnAddressesGetMethodNotAllowed() *PostReturnAddressesGetMethodNotAllowed {
	return &PostReturnAddressesGetMethodNotAllowed{}
}

/*PostReturnAddressesGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type PostReturnAddressesGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostReturnAddressesGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetTooManyRequests creates a PostReturnAddressesGetTooManyRequests with default headers values
func NewPostReturnAddressesGetTooManyRequests() *PostReturnAddressesGetTooManyRequests {
	return &PostReturnAddressesGetTooManyRequests{}
}

/*PostReturnAddressesGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type PostReturnAddressesGetTooManyRequests struct {
	Payload interface{}
}

func (o *PostReturnAddressesGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] postReturnAddressesGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostReturnAddressesGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReturnAddressesGetDefault creates a PostReturnAddressesGetDefault with default headers values
func NewPostReturnAddressesGetDefault(code int) *PostReturnAddressesGetDefault {
	return &PostReturnAddressesGetDefault{
		_statusCode: code,
	}
}

/*PostReturnAddressesGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type PostReturnAddressesGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the post return addresses get default response
func (o *PostReturnAddressesGetDefault) Code() int {
	return o._statusCode
}

func (o *PostReturnAddressesGetDefault) Error() string {
	return fmt.Sprintf("[GET /post/return-addresses][%d] PostReturnAddressesGet default  %+v", o._statusCode, o.Payload)
}

func (o *PostReturnAddressesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
