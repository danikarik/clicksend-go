// Code generated by go-swagger; DO NOT EDIT.

package user_email_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// EmailTemplatesGetReader is a Reader for the EmailTemplatesGet structure.
type EmailTemplatesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EmailTemplatesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEmailTemplatesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEmailTemplatesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewEmailTemplatesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewEmailTemplatesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewEmailTemplatesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewEmailTemplatesGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewEmailTemplatesGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewEmailTemplatesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEmailTemplatesGetOK creates a EmailTemplatesGetOK with default headers values
func NewEmailTemplatesGetOK() *EmailTemplatesGetOK {
	return &EmailTemplatesGetOK{}
}

/*EmailTemplatesGetOK handles this case with default header values.

SUCCESS
*/
type EmailTemplatesGetOK struct {
	Payload string
}

func (o *EmailTemplatesGetOK) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetOK  %+v", 200, o.Payload)
}

func (o *EmailTemplatesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetBadRequest creates a EmailTemplatesGetBadRequest with default headers values
func NewEmailTemplatesGetBadRequest() *EmailTemplatesGetBadRequest {
	return &EmailTemplatesGetBadRequest{}
}

/*EmailTemplatesGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type EmailTemplatesGetBadRequest struct {
	Payload string
}

func (o *EmailTemplatesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetBadRequest  %+v", 400, o.Payload)
}

func (o *EmailTemplatesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetUnauthorized creates a EmailTemplatesGetUnauthorized with default headers values
func NewEmailTemplatesGetUnauthorized() *EmailTemplatesGetUnauthorized {
	return &EmailTemplatesGetUnauthorized{}
}

/*EmailTemplatesGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type EmailTemplatesGetUnauthorized struct {
	Payload string
}

func (o *EmailTemplatesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetUnauthorized  %+v", 401, o.Payload)
}

func (o *EmailTemplatesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetForbidden creates a EmailTemplatesGetForbidden with default headers values
func NewEmailTemplatesGetForbidden() *EmailTemplatesGetForbidden {
	return &EmailTemplatesGetForbidden{}
}

/*EmailTemplatesGetForbidden handles this case with default header values.

FORBIDDEN
*/
type EmailTemplatesGetForbidden struct {
	Payload string
}

func (o *EmailTemplatesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetForbidden  %+v", 403, o.Payload)
}

func (o *EmailTemplatesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetNotFound creates a EmailTemplatesGetNotFound with default headers values
func NewEmailTemplatesGetNotFound() *EmailTemplatesGetNotFound {
	return &EmailTemplatesGetNotFound{}
}

/*EmailTemplatesGetNotFound handles this case with default header values.

NOT_FOUND
*/
type EmailTemplatesGetNotFound struct {
	Payload string
}

func (o *EmailTemplatesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetNotFound  %+v", 404, o.Payload)
}

func (o *EmailTemplatesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetMethodNotAllowed creates a EmailTemplatesGetMethodNotAllowed with default headers values
func NewEmailTemplatesGetMethodNotAllowed() *EmailTemplatesGetMethodNotAllowed {
	return &EmailTemplatesGetMethodNotAllowed{}
}

/*EmailTemplatesGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type EmailTemplatesGetMethodNotAllowed struct {
	Payload string
}

func (o *EmailTemplatesGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *EmailTemplatesGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetTooManyRequests creates a EmailTemplatesGetTooManyRequests with default headers values
func NewEmailTemplatesGetTooManyRequests() *EmailTemplatesGetTooManyRequests {
	return &EmailTemplatesGetTooManyRequests{}
}

/*EmailTemplatesGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type EmailTemplatesGetTooManyRequests struct {
	Payload string
}

func (o *EmailTemplatesGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] emailTemplatesGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *EmailTemplatesGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplatesGetDefault creates a EmailTemplatesGetDefault with default headers values
func NewEmailTemplatesGetDefault(code int) *EmailTemplatesGetDefault {
	return &EmailTemplatesGetDefault{
		_statusCode: code,
	}
}

/*EmailTemplatesGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type EmailTemplatesGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the email templates get default response
func (o *EmailTemplatesGetDefault) Code() int {
	return o._statusCode
}

func (o *EmailTemplatesGetDefault) Error() string {
	return fmt.Sprintf("[GET /email/templates][%d] EmailTemplatesGet default  %+v", o._statusCode, o.Payload)
}

func (o *EmailTemplatesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
