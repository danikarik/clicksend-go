// Code generated by go-swagger; DO NOT EDIT.

package user_email_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// EmailTemplateGetReader is a Reader for the EmailTemplateGet structure.
type EmailTemplateGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EmailTemplateGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEmailTemplateGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEmailTemplateGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewEmailTemplateGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewEmailTemplateGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewEmailTemplateGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewEmailTemplateGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewEmailTemplateGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewEmailTemplateGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEmailTemplateGetOK creates a EmailTemplateGetOK with default headers values
func NewEmailTemplateGetOK() *EmailTemplateGetOK {
	return &EmailTemplateGetOK{}
}

/*EmailTemplateGetOK handles this case with default header values.

SUCCESS
*/
type EmailTemplateGetOK struct {
	Payload interface{}
}

func (o *EmailTemplateGetOK) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetOK  %+v", 200, o.Payload)
}

func (o *EmailTemplateGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetBadRequest creates a EmailTemplateGetBadRequest with default headers values
func NewEmailTemplateGetBadRequest() *EmailTemplateGetBadRequest {
	return &EmailTemplateGetBadRequest{}
}

/*EmailTemplateGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type EmailTemplateGetBadRequest struct {
	Payload interface{}
}

func (o *EmailTemplateGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetBadRequest  %+v", 400, o.Payload)
}

func (o *EmailTemplateGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetUnauthorized creates a EmailTemplateGetUnauthorized with default headers values
func NewEmailTemplateGetUnauthorized() *EmailTemplateGetUnauthorized {
	return &EmailTemplateGetUnauthorized{}
}

/*EmailTemplateGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type EmailTemplateGetUnauthorized struct {
	Payload interface{}
}

func (o *EmailTemplateGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetUnauthorized  %+v", 401, o.Payload)
}

func (o *EmailTemplateGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetForbidden creates a EmailTemplateGetForbidden with default headers values
func NewEmailTemplateGetForbidden() *EmailTemplateGetForbidden {
	return &EmailTemplateGetForbidden{}
}

/*EmailTemplateGetForbidden handles this case with default header values.

FORBIDDEN
*/
type EmailTemplateGetForbidden struct {
	Payload interface{}
}

func (o *EmailTemplateGetForbidden) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetForbidden  %+v", 403, o.Payload)
}

func (o *EmailTemplateGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetNotFound creates a EmailTemplateGetNotFound with default headers values
func NewEmailTemplateGetNotFound() *EmailTemplateGetNotFound {
	return &EmailTemplateGetNotFound{}
}

/*EmailTemplateGetNotFound handles this case with default header values.

NOT_FOUND
*/
type EmailTemplateGetNotFound struct {
	Payload interface{}
}

func (o *EmailTemplateGetNotFound) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetNotFound  %+v", 404, o.Payload)
}

func (o *EmailTemplateGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetMethodNotAllowed creates a EmailTemplateGetMethodNotAllowed with default headers values
func NewEmailTemplateGetMethodNotAllowed() *EmailTemplateGetMethodNotAllowed {
	return &EmailTemplateGetMethodNotAllowed{}
}

/*EmailTemplateGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type EmailTemplateGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *EmailTemplateGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *EmailTemplateGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetTooManyRequests creates a EmailTemplateGetTooManyRequests with default headers values
func NewEmailTemplateGetTooManyRequests() *EmailTemplateGetTooManyRequests {
	return &EmailTemplateGetTooManyRequests{}
}

/*EmailTemplateGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type EmailTemplateGetTooManyRequests struct {
	Payload interface{}
}

func (o *EmailTemplateGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] emailTemplateGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *EmailTemplateGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailTemplateGetDefault creates a EmailTemplateGetDefault with default headers values
func NewEmailTemplateGetDefault(code int) *EmailTemplateGetDefault {
	return &EmailTemplateGetDefault{
		_statusCode: code,
	}
}

/*EmailTemplateGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type EmailTemplateGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the email template get default response
func (o *EmailTemplateGetDefault) Code() int {
	return o._statusCode
}

func (o *EmailTemplateGetDefault) Error() string {
	return fmt.Sprintf("[GET /email/templates/{template_id}][%d] EmailTemplateGet default  %+v", o._statusCode, o.Payload)
}

func (o *EmailTemplateGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
