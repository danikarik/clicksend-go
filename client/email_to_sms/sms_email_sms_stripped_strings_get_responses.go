// Code generated by go-swagger; DO NOT EDIT.

package email_to_sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSEmailSMSStrippedStringsGetReader is a Reader for the SMSEmailSMSStrippedStringsGet structure.
type SMSEmailSMSStrippedStringsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSEmailSMSStrippedStringsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSEmailSMSStrippedStringsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSEmailSMSStrippedStringsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSEmailSMSStrippedStringsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSEmailSMSStrippedStringsGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSEmailSMSStrippedStringsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSEmailSMSStrippedStringsGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSEmailSMSStrippedStringsGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSEmailSMSStrippedStringsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSEmailSMSStrippedStringsGetOK creates a SMSEmailSMSStrippedStringsGetOK with default headers values
func NewSMSEmailSMSStrippedStringsGetOK() *SMSEmailSMSStrippedStringsGetOK {
	return &SMSEmailSMSStrippedStringsGetOK{}
}

/*SMSEmailSMSStrippedStringsGetOK handles this case with default header values.

SUCCESS
*/
type SMSEmailSMSStrippedStringsGetOK struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetOK) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetOK  %+v", 200, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetBadRequest creates a SMSEmailSMSStrippedStringsGetBadRequest with default headers values
func NewSMSEmailSMSStrippedStringsGetBadRequest() *SMSEmailSMSStrippedStringsGetBadRequest {
	return &SMSEmailSMSStrippedStringsGetBadRequest{}
}

/*SMSEmailSMSStrippedStringsGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSEmailSMSStrippedStringsGetBadRequest struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetBadRequest  %+v", 400, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetUnauthorized creates a SMSEmailSMSStrippedStringsGetUnauthorized with default headers values
func NewSMSEmailSMSStrippedStringsGetUnauthorized() *SMSEmailSMSStrippedStringsGetUnauthorized {
	return &SMSEmailSMSStrippedStringsGetUnauthorized{}
}

/*SMSEmailSMSStrippedStringsGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSEmailSMSStrippedStringsGetUnauthorized struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetForbidden creates a SMSEmailSMSStrippedStringsGetForbidden with default headers values
func NewSMSEmailSMSStrippedStringsGetForbidden() *SMSEmailSMSStrippedStringsGetForbidden {
	return &SMSEmailSMSStrippedStringsGetForbidden{}
}

/*SMSEmailSMSStrippedStringsGetForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSEmailSMSStrippedStringsGetForbidden struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetForbidden) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetForbidden  %+v", 403, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetNotFound creates a SMSEmailSMSStrippedStringsGetNotFound with default headers values
func NewSMSEmailSMSStrippedStringsGetNotFound() *SMSEmailSMSStrippedStringsGetNotFound {
	return &SMSEmailSMSStrippedStringsGetNotFound{}
}

/*SMSEmailSMSStrippedStringsGetNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSEmailSMSStrippedStringsGetNotFound struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetNotFound  %+v", 404, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetMethodNotAllowed creates a SMSEmailSMSStrippedStringsGetMethodNotAllowed with default headers values
func NewSMSEmailSMSStrippedStringsGetMethodNotAllowed() *SMSEmailSMSStrippedStringsGetMethodNotAllowed {
	return &SMSEmailSMSStrippedStringsGetMethodNotAllowed{}
}

/*SMSEmailSMSStrippedStringsGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSEmailSMSStrippedStringsGetMethodNotAllowed struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetTooManyRequests creates a SMSEmailSMSStrippedStringsGetTooManyRequests with default headers values
func NewSMSEmailSMSStrippedStringsGetTooManyRequests() *SMSEmailSMSStrippedStringsGetTooManyRequests {
	return &SMSEmailSMSStrippedStringsGetTooManyRequests{}
}

/*SMSEmailSMSStrippedStringsGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSEmailSMSStrippedStringsGetTooManyRequests struct {
	Payload string
}

func (o *SMSEmailSMSStrippedStringsGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringsGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringsGetDefault creates a SMSEmailSMSStrippedStringsGetDefault with default headers values
func NewSMSEmailSMSStrippedStringsGetDefault(code int) *SMSEmailSMSStrippedStringsGetDefault {
	return &SMSEmailSMSStrippedStringsGetDefault{
		_statusCode: code,
	}
}

/*SMSEmailSMSStrippedStringsGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSEmailSMSStrippedStringsGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Sms email Sms stripped strings get default response
func (o *SMSEmailSMSStrippedStringsGetDefault) Code() int {
	return o._statusCode
}

func (o *SMSEmailSMSStrippedStringsGetDefault) Error() string {
	return fmt.Sprintf("[GET /sms/email-sms-stripped-strings][%d] SmsEmailSmsStrippedStringsGet default  %+v", o._statusCode, o.Payload)
}

func (o *SMSEmailSMSStrippedStringsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
