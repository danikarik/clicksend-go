// Code generated by go-swagger; DO NOT EDIT.

package email_to_sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSEmailSMSStrippedStringPostReader is a Reader for the SMSEmailSMSStrippedStringPost structure.
type SMSEmailSMSStrippedStringPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSEmailSMSStrippedStringPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSEmailSMSStrippedStringPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSEmailSMSStrippedStringPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSEmailSMSStrippedStringPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSEmailSMSStrippedStringPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSEmailSMSStrippedStringPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSEmailSMSStrippedStringPostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSEmailSMSStrippedStringPostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSEmailSMSStrippedStringPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSEmailSMSStrippedStringPostOK creates a SMSEmailSMSStrippedStringPostOK with default headers values
func NewSMSEmailSMSStrippedStringPostOK() *SMSEmailSMSStrippedStringPostOK {
	return &SMSEmailSMSStrippedStringPostOK{}
}

/*SMSEmailSMSStrippedStringPostOK handles this case with default header values.

SUCCESS
*/
type SMSEmailSMSStrippedStringPostOK struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostOK) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostOK  %+v", 200, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostBadRequest creates a SMSEmailSMSStrippedStringPostBadRequest with default headers values
func NewSMSEmailSMSStrippedStringPostBadRequest() *SMSEmailSMSStrippedStringPostBadRequest {
	return &SMSEmailSMSStrippedStringPostBadRequest{}
}

/*SMSEmailSMSStrippedStringPostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSEmailSMSStrippedStringPostBadRequest struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostBadRequest  %+v", 400, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostUnauthorized creates a SMSEmailSMSStrippedStringPostUnauthorized with default headers values
func NewSMSEmailSMSStrippedStringPostUnauthorized() *SMSEmailSMSStrippedStringPostUnauthorized {
	return &SMSEmailSMSStrippedStringPostUnauthorized{}
}

/*SMSEmailSMSStrippedStringPostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSEmailSMSStrippedStringPostUnauthorized struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostForbidden creates a SMSEmailSMSStrippedStringPostForbidden with default headers values
func NewSMSEmailSMSStrippedStringPostForbidden() *SMSEmailSMSStrippedStringPostForbidden {
	return &SMSEmailSMSStrippedStringPostForbidden{}
}

/*SMSEmailSMSStrippedStringPostForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSEmailSMSStrippedStringPostForbidden struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostForbidden) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostForbidden  %+v", 403, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostNotFound creates a SMSEmailSMSStrippedStringPostNotFound with default headers values
func NewSMSEmailSMSStrippedStringPostNotFound() *SMSEmailSMSStrippedStringPostNotFound {
	return &SMSEmailSMSStrippedStringPostNotFound{}
}

/*SMSEmailSMSStrippedStringPostNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSEmailSMSStrippedStringPostNotFound struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostNotFound) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostNotFound  %+v", 404, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostMethodNotAllowed creates a SMSEmailSMSStrippedStringPostMethodNotAllowed with default headers values
func NewSMSEmailSMSStrippedStringPostMethodNotAllowed() *SMSEmailSMSStrippedStringPostMethodNotAllowed {
	return &SMSEmailSMSStrippedStringPostMethodNotAllowed{}
}

/*SMSEmailSMSStrippedStringPostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSEmailSMSStrippedStringPostMethodNotAllowed struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostTooManyRequests creates a SMSEmailSMSStrippedStringPostTooManyRequests with default headers values
func NewSMSEmailSMSStrippedStringPostTooManyRequests() *SMSEmailSMSStrippedStringPostTooManyRequests {
	return &SMSEmailSMSStrippedStringPostTooManyRequests{}
}

/*SMSEmailSMSStrippedStringPostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSEmailSMSStrippedStringPostTooManyRequests struct {
	Payload interface{}
}

func (o *SMSEmailSMSStrippedStringPostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] smsEmailSmsStrippedStringPostTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSEmailSMSStrippedStringPostDefault creates a SMSEmailSMSStrippedStringPostDefault with default headers values
func NewSMSEmailSMSStrippedStringPostDefault(code int) *SMSEmailSMSStrippedStringPostDefault {
	return &SMSEmailSMSStrippedStringPostDefault{
		_statusCode: code,
	}
}

/*SMSEmailSMSStrippedStringPostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSEmailSMSStrippedStringPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the Sms email Sms stripped string post default response
func (o *SMSEmailSMSStrippedStringPostDefault) Code() int {
	return o._statusCode
}

func (o *SMSEmailSMSStrippedStringPostDefault) Error() string {
	return fmt.Sprintf("[POST /sms/email-sms-stripped-strings][%d] SmsEmailSmsStrippedStringPost default  %+v", o._statusCode, o.Payload)
}

func (o *SMSEmailSMSStrippedStringPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
