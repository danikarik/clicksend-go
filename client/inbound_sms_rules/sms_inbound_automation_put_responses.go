// Code generated by go-swagger; DO NOT EDIT.

package inbound_sms_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SMSInboundAutomationPutReader is a Reader for the SMSInboundAutomationPut structure.
type SMSInboundAutomationPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SMSInboundAutomationPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSMSInboundAutomationPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSMSInboundAutomationPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSMSInboundAutomationPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSMSInboundAutomationPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSMSInboundAutomationPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewSMSInboundAutomationPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewSMSInboundAutomationPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSMSInboundAutomationPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSMSInboundAutomationPutOK creates a SMSInboundAutomationPutOK with default headers values
func NewSMSInboundAutomationPutOK() *SMSInboundAutomationPutOK {
	return &SMSInboundAutomationPutOK{}
}

/*SMSInboundAutomationPutOK handles this case with default header values.

SUCCESS
*/
type SMSInboundAutomationPutOK struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutOK) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutOK  %+v", 200, o.Payload)
}

func (o *SMSInboundAutomationPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutBadRequest creates a SMSInboundAutomationPutBadRequest with default headers values
func NewSMSInboundAutomationPutBadRequest() *SMSInboundAutomationPutBadRequest {
	return &SMSInboundAutomationPutBadRequest{}
}

/*SMSInboundAutomationPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type SMSInboundAutomationPutBadRequest struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutBadRequest  %+v", 400, o.Payload)
}

func (o *SMSInboundAutomationPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutUnauthorized creates a SMSInboundAutomationPutUnauthorized with default headers values
func NewSMSInboundAutomationPutUnauthorized() *SMSInboundAutomationPutUnauthorized {
	return &SMSInboundAutomationPutUnauthorized{}
}

/*SMSInboundAutomationPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type SMSInboundAutomationPutUnauthorized struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutUnauthorized  %+v", 401, o.Payload)
}

func (o *SMSInboundAutomationPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutForbidden creates a SMSInboundAutomationPutForbidden with default headers values
func NewSMSInboundAutomationPutForbidden() *SMSInboundAutomationPutForbidden {
	return &SMSInboundAutomationPutForbidden{}
}

/*SMSInboundAutomationPutForbidden handles this case with default header values.

FORBIDDEN
*/
type SMSInboundAutomationPutForbidden struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutForbidden  %+v", 403, o.Payload)
}

func (o *SMSInboundAutomationPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutNotFound creates a SMSInboundAutomationPutNotFound with default headers values
func NewSMSInboundAutomationPutNotFound() *SMSInboundAutomationPutNotFound {
	return &SMSInboundAutomationPutNotFound{}
}

/*SMSInboundAutomationPutNotFound handles this case with default header values.

NOT_FOUND
*/
type SMSInboundAutomationPutNotFound struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutNotFound  %+v", 404, o.Payload)
}

func (o *SMSInboundAutomationPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutMethodNotAllowed creates a SMSInboundAutomationPutMethodNotAllowed with default headers values
func NewSMSInboundAutomationPutMethodNotAllowed() *SMSInboundAutomationPutMethodNotAllowed {
	return &SMSInboundAutomationPutMethodNotAllowed{}
}

/*SMSInboundAutomationPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type SMSInboundAutomationPutMethodNotAllowed struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *SMSInboundAutomationPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutTooManyRequests creates a SMSInboundAutomationPutTooManyRequests with default headers values
func NewSMSInboundAutomationPutTooManyRequests() *SMSInboundAutomationPutTooManyRequests {
	return &SMSInboundAutomationPutTooManyRequests{}
}

/*SMSInboundAutomationPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type SMSInboundAutomationPutTooManyRequests struct {
	Payload interface{}
}

func (o *SMSInboundAutomationPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] smsInboundAutomationPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *SMSInboundAutomationPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSMSInboundAutomationPutDefault creates a SMSInboundAutomationPutDefault with default headers values
func NewSMSInboundAutomationPutDefault(code int) *SMSInboundAutomationPutDefault {
	return &SMSInboundAutomationPutDefault{
		_statusCode: code,
	}
}

/*SMSInboundAutomationPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type SMSInboundAutomationPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the Sms inbound automation put default response
func (o *SMSInboundAutomationPutDefault) Code() int {
	return o._statusCode
}

func (o *SMSInboundAutomationPutDefault) Error() string {
	return fmt.Sprintf("[PUT /automations/sms/inbound/{inbound_rule_id}][%d] SmsInboundAutomationPut default  %+v", o._statusCode, o.Payload)
}

func (o *SMSInboundAutomationPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
