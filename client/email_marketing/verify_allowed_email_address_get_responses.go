// Code generated by go-swagger; DO NOT EDIT.

package email_marketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// VerifyAllowedEmailAddressGetReader is a Reader for the VerifyAllowedEmailAddressGet structure.
type VerifyAllowedEmailAddressGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VerifyAllowedEmailAddressGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewVerifyAllowedEmailAddressGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewVerifyAllowedEmailAddressGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewVerifyAllowedEmailAddressGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewVerifyAllowedEmailAddressGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewVerifyAllowedEmailAddressGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewVerifyAllowedEmailAddressGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewVerifyAllowedEmailAddressGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewVerifyAllowedEmailAddressGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVerifyAllowedEmailAddressGetOK creates a VerifyAllowedEmailAddressGetOK with default headers values
func NewVerifyAllowedEmailAddressGetOK() *VerifyAllowedEmailAddressGetOK {
	return &VerifyAllowedEmailAddressGetOK{}
}

/*VerifyAllowedEmailAddressGetOK handles this case with default header values.

SUCCESS
*/
type VerifyAllowedEmailAddressGetOK struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetOK) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetOK  %+v", 200, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetBadRequest creates a VerifyAllowedEmailAddressGetBadRequest with default headers values
func NewVerifyAllowedEmailAddressGetBadRequest() *VerifyAllowedEmailAddressGetBadRequest {
	return &VerifyAllowedEmailAddressGetBadRequest{}
}

/*VerifyAllowedEmailAddressGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type VerifyAllowedEmailAddressGetBadRequest struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetBadRequest) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetBadRequest  %+v", 400, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetUnauthorized creates a VerifyAllowedEmailAddressGetUnauthorized with default headers values
func NewVerifyAllowedEmailAddressGetUnauthorized() *VerifyAllowedEmailAddressGetUnauthorized {
	return &VerifyAllowedEmailAddressGetUnauthorized{}
}

/*VerifyAllowedEmailAddressGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type VerifyAllowedEmailAddressGetUnauthorized struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetUnauthorized  %+v", 401, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetForbidden creates a VerifyAllowedEmailAddressGetForbidden with default headers values
func NewVerifyAllowedEmailAddressGetForbidden() *VerifyAllowedEmailAddressGetForbidden {
	return &VerifyAllowedEmailAddressGetForbidden{}
}

/*VerifyAllowedEmailAddressGetForbidden handles this case with default header values.

FORBIDDEN
*/
type VerifyAllowedEmailAddressGetForbidden struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetForbidden) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetForbidden  %+v", 403, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetNotFound creates a VerifyAllowedEmailAddressGetNotFound with default headers values
func NewVerifyAllowedEmailAddressGetNotFound() *VerifyAllowedEmailAddressGetNotFound {
	return &VerifyAllowedEmailAddressGetNotFound{}
}

/*VerifyAllowedEmailAddressGetNotFound handles this case with default header values.

NOT_FOUND
*/
type VerifyAllowedEmailAddressGetNotFound struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetNotFound) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetNotFound  %+v", 404, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetMethodNotAllowed creates a VerifyAllowedEmailAddressGetMethodNotAllowed with default headers values
func NewVerifyAllowedEmailAddressGetMethodNotAllowed() *VerifyAllowedEmailAddressGetMethodNotAllowed {
	return &VerifyAllowedEmailAddressGetMethodNotAllowed{}
}

/*VerifyAllowedEmailAddressGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type VerifyAllowedEmailAddressGetMethodNotAllowed struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetTooManyRequests creates a VerifyAllowedEmailAddressGetTooManyRequests with default headers values
func NewVerifyAllowedEmailAddressGetTooManyRequests() *VerifyAllowedEmailAddressGetTooManyRequests {
	return &VerifyAllowedEmailAddressGetTooManyRequests{}
}

/*VerifyAllowedEmailAddressGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type VerifyAllowedEmailAddressGetTooManyRequests struct {
	Payload string
}

func (o *VerifyAllowedEmailAddressGetTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] verifyAllowedEmailAddressGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyAllowedEmailAddressGetDefault creates a VerifyAllowedEmailAddressGetDefault with default headers values
func NewVerifyAllowedEmailAddressGetDefault(code int) *VerifyAllowedEmailAddressGetDefault {
	return &VerifyAllowedEmailAddressGetDefault{
		_statusCode: code,
	}
}

/*VerifyAllowedEmailAddressGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type VerifyAllowedEmailAddressGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the verify allowed email address get default response
func (o *VerifyAllowedEmailAddressGetDefault) Code() int {
	return o._statusCode
}

func (o *VerifyAllowedEmailAddressGetDefault) Error() string {
	return fmt.Sprintf("[PUT /email/address-verify/{email_address_id}/verify/{activation_token}][%d] VerifyAllowedEmailAddressGet default  %+v", o._statusCode, o.Payload)
}

func (o *VerifyAllowedEmailAddressGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
