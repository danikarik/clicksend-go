// Code generated by go-swagger; DO NOT EDIT.

package email_marketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// EmailCampaignPutReader is a Reader for the EmailCampaignPut structure.
type EmailCampaignPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EmailCampaignPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEmailCampaignPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEmailCampaignPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewEmailCampaignPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewEmailCampaignPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewEmailCampaignPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewEmailCampaignPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewEmailCampaignPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewEmailCampaignPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEmailCampaignPutOK creates a EmailCampaignPutOK with default headers values
func NewEmailCampaignPutOK() *EmailCampaignPutOK {
	return &EmailCampaignPutOK{}
}

/*EmailCampaignPutOK handles this case with default header values.

SUCCESS
*/
type EmailCampaignPutOK struct {
	Payload interface{}
}

func (o *EmailCampaignPutOK) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutOK  %+v", 200, o.Payload)
}

func (o *EmailCampaignPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutBadRequest creates a EmailCampaignPutBadRequest with default headers values
func NewEmailCampaignPutBadRequest() *EmailCampaignPutBadRequest {
	return &EmailCampaignPutBadRequest{}
}

/*EmailCampaignPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type EmailCampaignPutBadRequest struct {
	Payload interface{}
}

func (o *EmailCampaignPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutBadRequest  %+v", 400, o.Payload)
}

func (o *EmailCampaignPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutUnauthorized creates a EmailCampaignPutUnauthorized with default headers values
func NewEmailCampaignPutUnauthorized() *EmailCampaignPutUnauthorized {
	return &EmailCampaignPutUnauthorized{}
}

/*EmailCampaignPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type EmailCampaignPutUnauthorized struct {
	Payload interface{}
}

func (o *EmailCampaignPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutUnauthorized  %+v", 401, o.Payload)
}

func (o *EmailCampaignPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutForbidden creates a EmailCampaignPutForbidden with default headers values
func NewEmailCampaignPutForbidden() *EmailCampaignPutForbidden {
	return &EmailCampaignPutForbidden{}
}

/*EmailCampaignPutForbidden handles this case with default header values.

FORBIDDEN
*/
type EmailCampaignPutForbidden struct {
	Payload interface{}
}

func (o *EmailCampaignPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutForbidden  %+v", 403, o.Payload)
}

func (o *EmailCampaignPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutNotFound creates a EmailCampaignPutNotFound with default headers values
func NewEmailCampaignPutNotFound() *EmailCampaignPutNotFound {
	return &EmailCampaignPutNotFound{}
}

/*EmailCampaignPutNotFound handles this case with default header values.

NOT_FOUND
*/
type EmailCampaignPutNotFound struct {
	Payload interface{}
}

func (o *EmailCampaignPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutNotFound  %+v", 404, o.Payload)
}

func (o *EmailCampaignPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutMethodNotAllowed creates a EmailCampaignPutMethodNotAllowed with default headers values
func NewEmailCampaignPutMethodNotAllowed() *EmailCampaignPutMethodNotAllowed {
	return &EmailCampaignPutMethodNotAllowed{}
}

/*EmailCampaignPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type EmailCampaignPutMethodNotAllowed struct {
	Payload interface{}
}

func (o *EmailCampaignPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *EmailCampaignPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutTooManyRequests creates a EmailCampaignPutTooManyRequests with default headers values
func NewEmailCampaignPutTooManyRequests() *EmailCampaignPutTooManyRequests {
	return &EmailCampaignPutTooManyRequests{}
}

/*EmailCampaignPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type EmailCampaignPutTooManyRequests struct {
	Payload interface{}
}

func (o *EmailCampaignPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] emailCampaignPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *EmailCampaignPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailCampaignPutDefault creates a EmailCampaignPutDefault with default headers values
func NewEmailCampaignPutDefault(code int) *EmailCampaignPutDefault {
	return &EmailCampaignPutDefault{
		_statusCode: code,
	}
}

/*EmailCampaignPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type EmailCampaignPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the email campaign put default response
func (o *EmailCampaignPutDefault) Code() int {
	return o._statusCode
}

func (o *EmailCampaignPutDefault) Error() string {
	return fmt.Sprintf("[PUT /email-campaigns/{email_campaign_id}][%d] EmailCampaignPut default  %+v", o._statusCode, o.Payload)
}

func (o *EmailCampaignPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
