// Code generated by go-swagger; DO NOT EDIT.

package inbound_fax_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// FAXInboundAutomationPostReader is a Reader for the FAXInboundAutomationPost structure.
type FAXInboundAutomationPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FAXInboundAutomationPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFAXInboundAutomationPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewFAXInboundAutomationPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewFAXInboundAutomationPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFAXInboundAutomationPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFAXInboundAutomationPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFAXInboundAutomationPostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewFAXInboundAutomationPostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFAXInboundAutomationPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFAXInboundAutomationPostOK creates a FAXInboundAutomationPostOK with default headers values
func NewFAXInboundAutomationPostOK() *FAXInboundAutomationPostOK {
	return &FAXInboundAutomationPostOK{}
}

/*FAXInboundAutomationPostOK handles this case with default header values.

SUCCESS
*/
type FAXInboundAutomationPostOK struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostOK) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostOK  %+v", 200, o.Payload)
}

func (o *FAXInboundAutomationPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostBadRequest creates a FAXInboundAutomationPostBadRequest with default headers values
func NewFAXInboundAutomationPostBadRequest() *FAXInboundAutomationPostBadRequest {
	return &FAXInboundAutomationPostBadRequest{}
}

/*FAXInboundAutomationPostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type FAXInboundAutomationPostBadRequest struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostBadRequest  %+v", 400, o.Payload)
}

func (o *FAXInboundAutomationPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostUnauthorized creates a FAXInboundAutomationPostUnauthorized with default headers values
func NewFAXInboundAutomationPostUnauthorized() *FAXInboundAutomationPostUnauthorized {
	return &FAXInboundAutomationPostUnauthorized{}
}

/*FAXInboundAutomationPostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type FAXInboundAutomationPostUnauthorized struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostUnauthorized  %+v", 401, o.Payload)
}

func (o *FAXInboundAutomationPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostForbidden creates a FAXInboundAutomationPostForbidden with default headers values
func NewFAXInboundAutomationPostForbidden() *FAXInboundAutomationPostForbidden {
	return &FAXInboundAutomationPostForbidden{}
}

/*FAXInboundAutomationPostForbidden handles this case with default header values.

FORBIDDEN
*/
type FAXInboundAutomationPostForbidden struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostForbidden) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostForbidden  %+v", 403, o.Payload)
}

func (o *FAXInboundAutomationPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostNotFound creates a FAXInboundAutomationPostNotFound with default headers values
func NewFAXInboundAutomationPostNotFound() *FAXInboundAutomationPostNotFound {
	return &FAXInboundAutomationPostNotFound{}
}

/*FAXInboundAutomationPostNotFound handles this case with default header values.

NOT_FOUND
*/
type FAXInboundAutomationPostNotFound struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostNotFound) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostNotFound  %+v", 404, o.Payload)
}

func (o *FAXInboundAutomationPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostMethodNotAllowed creates a FAXInboundAutomationPostMethodNotAllowed with default headers values
func NewFAXInboundAutomationPostMethodNotAllowed() *FAXInboundAutomationPostMethodNotAllowed {
	return &FAXInboundAutomationPostMethodNotAllowed{}
}

/*FAXInboundAutomationPostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type FAXInboundAutomationPostMethodNotAllowed struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FAXInboundAutomationPostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostTooManyRequests creates a FAXInboundAutomationPostTooManyRequests with default headers values
func NewFAXInboundAutomationPostTooManyRequests() *FAXInboundAutomationPostTooManyRequests {
	return &FAXInboundAutomationPostTooManyRequests{}
}

/*FAXInboundAutomationPostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type FAXInboundAutomationPostTooManyRequests struct {
	Payload interface{}
}

func (o *FAXInboundAutomationPostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] faxInboundAutomationPostTooManyRequests  %+v", 429, o.Payload)
}

func (o *FAXInboundAutomationPostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPostDefault creates a FAXInboundAutomationPostDefault with default headers values
func NewFAXInboundAutomationPostDefault(code int) *FAXInboundAutomationPostDefault {
	return &FAXInboundAutomationPostDefault{
		_statusCode: code,
	}
}

/*FAXInboundAutomationPostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type FAXInboundAutomationPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the Fax inbound automation post default response
func (o *FAXInboundAutomationPostDefault) Code() int {
	return o._statusCode
}

func (o *FAXInboundAutomationPostDefault) Error() string {
	return fmt.Sprintf("[POST /automations/fax/inbound][%d] FaxInboundAutomationPost default  %+v", o._statusCode, o.Payload)
}

func (o *FAXInboundAutomationPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
