// Code generated by go-swagger; DO NOT EDIT.

package inbound_fax_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// FAXInboundAutomationGetReader is a Reader for the FAXInboundAutomationGet structure.
type FAXInboundAutomationGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FAXInboundAutomationGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFAXInboundAutomationGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewFAXInboundAutomationGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewFAXInboundAutomationGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFAXInboundAutomationGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFAXInboundAutomationGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFAXInboundAutomationGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewFAXInboundAutomationGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFAXInboundAutomationGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFAXInboundAutomationGetOK creates a FAXInboundAutomationGetOK with default headers values
func NewFAXInboundAutomationGetOK() *FAXInboundAutomationGetOK {
	return &FAXInboundAutomationGetOK{}
}

/*FAXInboundAutomationGetOK handles this case with default header values.

SUCCESS
*/
type FAXInboundAutomationGetOK struct {
	Payload string
}

func (o *FAXInboundAutomationGetOK) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetOK  %+v", 200, o.Payload)
}

func (o *FAXInboundAutomationGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetBadRequest creates a FAXInboundAutomationGetBadRequest with default headers values
func NewFAXInboundAutomationGetBadRequest() *FAXInboundAutomationGetBadRequest {
	return &FAXInboundAutomationGetBadRequest{}
}

/*FAXInboundAutomationGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type FAXInboundAutomationGetBadRequest struct {
	Payload string
}

func (o *FAXInboundAutomationGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetBadRequest  %+v", 400, o.Payload)
}

func (o *FAXInboundAutomationGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetUnauthorized creates a FAXInboundAutomationGetUnauthorized with default headers values
func NewFAXInboundAutomationGetUnauthorized() *FAXInboundAutomationGetUnauthorized {
	return &FAXInboundAutomationGetUnauthorized{}
}

/*FAXInboundAutomationGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type FAXInboundAutomationGetUnauthorized struct {
	Payload string
}

func (o *FAXInboundAutomationGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetUnauthorized  %+v", 401, o.Payload)
}

func (o *FAXInboundAutomationGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetForbidden creates a FAXInboundAutomationGetForbidden with default headers values
func NewFAXInboundAutomationGetForbidden() *FAXInboundAutomationGetForbidden {
	return &FAXInboundAutomationGetForbidden{}
}

/*FAXInboundAutomationGetForbidden handles this case with default header values.

FORBIDDEN
*/
type FAXInboundAutomationGetForbidden struct {
	Payload string
}

func (o *FAXInboundAutomationGetForbidden) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetForbidden  %+v", 403, o.Payload)
}

func (o *FAXInboundAutomationGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetNotFound creates a FAXInboundAutomationGetNotFound with default headers values
func NewFAXInboundAutomationGetNotFound() *FAXInboundAutomationGetNotFound {
	return &FAXInboundAutomationGetNotFound{}
}

/*FAXInboundAutomationGetNotFound handles this case with default header values.

NOT_FOUND
*/
type FAXInboundAutomationGetNotFound struct {
	Payload string
}

func (o *FAXInboundAutomationGetNotFound) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetNotFound  %+v", 404, o.Payload)
}

func (o *FAXInboundAutomationGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetMethodNotAllowed creates a FAXInboundAutomationGetMethodNotAllowed with default headers values
func NewFAXInboundAutomationGetMethodNotAllowed() *FAXInboundAutomationGetMethodNotAllowed {
	return &FAXInboundAutomationGetMethodNotAllowed{}
}

/*FAXInboundAutomationGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type FAXInboundAutomationGetMethodNotAllowed struct {
	Payload string
}

func (o *FAXInboundAutomationGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FAXInboundAutomationGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetTooManyRequests creates a FAXInboundAutomationGetTooManyRequests with default headers values
func NewFAXInboundAutomationGetTooManyRequests() *FAXInboundAutomationGetTooManyRequests {
	return &FAXInboundAutomationGetTooManyRequests{}
}

/*FAXInboundAutomationGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type FAXInboundAutomationGetTooManyRequests struct {
	Payload string
}

func (o *FAXInboundAutomationGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *FAXInboundAutomationGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationGetDefault creates a FAXInboundAutomationGetDefault with default headers values
func NewFAXInboundAutomationGetDefault(code int) *FAXInboundAutomationGetDefault {
	return &FAXInboundAutomationGetDefault{
		_statusCode: code,
	}
}

/*FAXInboundAutomationGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type FAXInboundAutomationGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Fax inbound automation get default response
func (o *FAXInboundAutomationGetDefault) Code() int {
	return o._statusCode
}

func (o *FAXInboundAutomationGetDefault) Error() string {
	return fmt.Sprintf("[GET /automations/fax/inbound/{inbound_rule_id}][%d] FaxInboundAutomationGet default  %+v", o._statusCode, o.Payload)
}

func (o *FAXInboundAutomationGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
