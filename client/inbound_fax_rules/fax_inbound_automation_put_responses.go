// Code generated by go-swagger; DO NOT EDIT.

package inbound_fax_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// FAXInboundAutomationPutReader is a Reader for the FAXInboundAutomationPut structure.
type FAXInboundAutomationPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FAXInboundAutomationPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFAXInboundAutomationPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewFAXInboundAutomationPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewFAXInboundAutomationPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFAXInboundAutomationPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFAXInboundAutomationPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFAXInboundAutomationPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewFAXInboundAutomationPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFAXInboundAutomationPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFAXInboundAutomationPutOK creates a FAXInboundAutomationPutOK with default headers values
func NewFAXInboundAutomationPutOK() *FAXInboundAutomationPutOK {
	return &FAXInboundAutomationPutOK{}
}

/*FAXInboundAutomationPutOK handles this case with default header values.

SUCCESS
*/
type FAXInboundAutomationPutOK struct {
	Payload string
}

func (o *FAXInboundAutomationPutOK) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutOK  %+v", 200, o.Payload)
}

func (o *FAXInboundAutomationPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutBadRequest creates a FAXInboundAutomationPutBadRequest with default headers values
func NewFAXInboundAutomationPutBadRequest() *FAXInboundAutomationPutBadRequest {
	return &FAXInboundAutomationPutBadRequest{}
}

/*FAXInboundAutomationPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type FAXInboundAutomationPutBadRequest struct {
	Payload string
}

func (o *FAXInboundAutomationPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutBadRequest  %+v", 400, o.Payload)
}

func (o *FAXInboundAutomationPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutUnauthorized creates a FAXInboundAutomationPutUnauthorized with default headers values
func NewFAXInboundAutomationPutUnauthorized() *FAXInboundAutomationPutUnauthorized {
	return &FAXInboundAutomationPutUnauthorized{}
}

/*FAXInboundAutomationPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type FAXInboundAutomationPutUnauthorized struct {
	Payload string
}

func (o *FAXInboundAutomationPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutUnauthorized  %+v", 401, o.Payload)
}

func (o *FAXInboundAutomationPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutForbidden creates a FAXInboundAutomationPutForbidden with default headers values
func NewFAXInboundAutomationPutForbidden() *FAXInboundAutomationPutForbidden {
	return &FAXInboundAutomationPutForbidden{}
}

/*FAXInboundAutomationPutForbidden handles this case with default header values.

FORBIDDEN
*/
type FAXInboundAutomationPutForbidden struct {
	Payload string
}

func (o *FAXInboundAutomationPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutForbidden  %+v", 403, o.Payload)
}

func (o *FAXInboundAutomationPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutNotFound creates a FAXInboundAutomationPutNotFound with default headers values
func NewFAXInboundAutomationPutNotFound() *FAXInboundAutomationPutNotFound {
	return &FAXInboundAutomationPutNotFound{}
}

/*FAXInboundAutomationPutNotFound handles this case with default header values.

NOT_FOUND
*/
type FAXInboundAutomationPutNotFound struct {
	Payload string
}

func (o *FAXInboundAutomationPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutNotFound  %+v", 404, o.Payload)
}

func (o *FAXInboundAutomationPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutMethodNotAllowed creates a FAXInboundAutomationPutMethodNotAllowed with default headers values
func NewFAXInboundAutomationPutMethodNotAllowed() *FAXInboundAutomationPutMethodNotAllowed {
	return &FAXInboundAutomationPutMethodNotAllowed{}
}

/*FAXInboundAutomationPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type FAXInboundAutomationPutMethodNotAllowed struct {
	Payload string
}

func (o *FAXInboundAutomationPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FAXInboundAutomationPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutTooManyRequests creates a FAXInboundAutomationPutTooManyRequests with default headers values
func NewFAXInboundAutomationPutTooManyRequests() *FAXInboundAutomationPutTooManyRequests {
	return &FAXInboundAutomationPutTooManyRequests{}
}

/*FAXInboundAutomationPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type FAXInboundAutomationPutTooManyRequests struct {
	Payload string
}

func (o *FAXInboundAutomationPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] faxInboundAutomationPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *FAXInboundAutomationPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFAXInboundAutomationPutDefault creates a FAXInboundAutomationPutDefault with default headers values
func NewFAXInboundAutomationPutDefault(code int) *FAXInboundAutomationPutDefault {
	return &FAXInboundAutomationPutDefault{
		_statusCode: code,
	}
}

/*FAXInboundAutomationPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type FAXInboundAutomationPutDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Fax inbound automation put default response
func (o *FAXInboundAutomationPutDefault) Code() int {
	return o._statusCode
}

func (o *FAXInboundAutomationPutDefault) Error() string {
	return fmt.Sprintf("[PUT /automations/fax/inbound/{inbound_rule_id}][%d] FaxInboundAutomationPut default  %+v", o._statusCode, o.Payload)
}

func (o *FAXInboundAutomationPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
