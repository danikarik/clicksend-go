// Code generated by go-swagger; DO NOT EDIT.

package reseller_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ResellerAccountsByClientUserIDPutReader is a Reader for the ResellerAccountsByClientUserIDPut structure.
type ResellerAccountsByClientUserIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResellerAccountsByClientUserIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewResellerAccountsByClientUserIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewResellerAccountsByClientUserIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewResellerAccountsByClientUserIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewResellerAccountsByClientUserIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewResellerAccountsByClientUserIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewResellerAccountsByClientUserIDPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewResellerAccountsByClientUserIDPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewResellerAccountsByClientUserIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewResellerAccountsByClientUserIDPutOK creates a ResellerAccountsByClientUserIDPutOK with default headers values
func NewResellerAccountsByClientUserIDPutOK() *ResellerAccountsByClientUserIDPutOK {
	return &ResellerAccountsByClientUserIDPutOK{}
}

/*ResellerAccountsByClientUserIDPutOK handles this case with default header values.

SUCCESS
*/
type ResellerAccountsByClientUserIDPutOK struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutOK  %+v", 200, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutBadRequest creates a ResellerAccountsByClientUserIDPutBadRequest with default headers values
func NewResellerAccountsByClientUserIDPutBadRequest() *ResellerAccountsByClientUserIDPutBadRequest {
	return &ResellerAccountsByClientUserIDPutBadRequest{}
}

/*ResellerAccountsByClientUserIDPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ResellerAccountsByClientUserIDPutBadRequest struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutBadRequest  %+v", 400, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutUnauthorized creates a ResellerAccountsByClientUserIDPutUnauthorized with default headers values
func NewResellerAccountsByClientUserIDPutUnauthorized() *ResellerAccountsByClientUserIDPutUnauthorized {
	return &ResellerAccountsByClientUserIDPutUnauthorized{}
}

/*ResellerAccountsByClientUserIDPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ResellerAccountsByClientUserIDPutUnauthorized struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutForbidden creates a ResellerAccountsByClientUserIDPutForbidden with default headers values
func NewResellerAccountsByClientUserIDPutForbidden() *ResellerAccountsByClientUserIDPutForbidden {
	return &ResellerAccountsByClientUserIDPutForbidden{}
}

/*ResellerAccountsByClientUserIDPutForbidden handles this case with default header values.

FORBIDDEN
*/
type ResellerAccountsByClientUserIDPutForbidden struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutForbidden  %+v", 403, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutNotFound creates a ResellerAccountsByClientUserIDPutNotFound with default headers values
func NewResellerAccountsByClientUserIDPutNotFound() *ResellerAccountsByClientUserIDPutNotFound {
	return &ResellerAccountsByClientUserIDPutNotFound{}
}

/*ResellerAccountsByClientUserIDPutNotFound handles this case with default header values.

NOT_FOUND
*/
type ResellerAccountsByClientUserIDPutNotFound struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutNotFound  %+v", 404, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutMethodNotAllowed creates a ResellerAccountsByClientUserIDPutMethodNotAllowed with default headers values
func NewResellerAccountsByClientUserIDPutMethodNotAllowed() *ResellerAccountsByClientUserIDPutMethodNotAllowed {
	return &ResellerAccountsByClientUserIDPutMethodNotAllowed{}
}

/*ResellerAccountsByClientUserIDPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ResellerAccountsByClientUserIDPutMethodNotAllowed struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutTooManyRequests creates a ResellerAccountsByClientUserIDPutTooManyRequests with default headers values
func NewResellerAccountsByClientUserIDPutTooManyRequests() *ResellerAccountsByClientUserIDPutTooManyRequests {
	return &ResellerAccountsByClientUserIDPutTooManyRequests{}
}

/*ResellerAccountsByClientUserIDPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ResellerAccountsByClientUserIDPutTooManyRequests struct {
	Payload interface{}
}

func (o *ResellerAccountsByClientUserIDPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] resellerAccountsByClientUserIdPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResellerAccountsByClientUserIDPutDefault creates a ResellerAccountsByClientUserIDPutDefault with default headers values
func NewResellerAccountsByClientUserIDPutDefault(code int) *ResellerAccountsByClientUserIDPutDefault {
	return &ResellerAccountsByClientUserIDPutDefault{
		_statusCode: code,
	}
}

/*ResellerAccountsByClientUserIDPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ResellerAccountsByClientUserIDPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the reseller accounts by client user Id put default response
func (o *ResellerAccountsByClientUserIDPutDefault) Code() int {
	return o._statusCode
}

func (o *ResellerAccountsByClientUserIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /reseller/accounts/{client_user_id}][%d] ResellerAccountsByClientUserIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *ResellerAccountsByClientUserIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
