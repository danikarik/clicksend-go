// Code generated by go-swagger; DO NOT EDIT.

package reseller_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/danikarik/clicksend-go/models"
)

// NewResellerAccountsPostParams creates a new ResellerAccountsPostParams object
// with the default values initialized.
func NewResellerAccountsPostParams() *ResellerAccountsPostParams {
	var ()
	return &ResellerAccountsPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewResellerAccountsPostParamsWithTimeout creates a new ResellerAccountsPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewResellerAccountsPostParamsWithTimeout(timeout time.Duration) *ResellerAccountsPostParams {
	var ()
	return &ResellerAccountsPostParams{

		timeout: timeout,
	}
}

// NewResellerAccountsPostParamsWithContext creates a new ResellerAccountsPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewResellerAccountsPostParamsWithContext(ctx context.Context) *ResellerAccountsPostParams {
	var ()
	return &ResellerAccountsPostParams{

		Context: ctx,
	}
}

// NewResellerAccountsPostParamsWithHTTPClient creates a new ResellerAccountsPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewResellerAccountsPostParamsWithHTTPClient(client *http.Client) *ResellerAccountsPostParams {
	var ()
	return &ResellerAccountsPostParams{
		HTTPClient: client,
	}
}

/*ResellerAccountsPostParams contains all the parameters to send to the API endpoint
for the reseller accounts post operation typically these are written to a http.Request
*/
type ResellerAccountsPostParams struct {

	/*ResellerAccount
	  ResellerAccount model

	*/
	ResellerAccount models.ResellerAccount

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the reseller accounts post params
func (o *ResellerAccountsPostParams) WithTimeout(timeout time.Duration) *ResellerAccountsPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the reseller accounts post params
func (o *ResellerAccountsPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the reseller accounts post params
func (o *ResellerAccountsPostParams) WithContext(ctx context.Context) *ResellerAccountsPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the reseller accounts post params
func (o *ResellerAccountsPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the reseller accounts post params
func (o *ResellerAccountsPostParams) WithHTTPClient(client *http.Client) *ResellerAccountsPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the reseller accounts post params
func (o *ResellerAccountsPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithResellerAccount adds the resellerAccount to the reseller accounts post params
func (o *ResellerAccountsPostParams) WithResellerAccount(resellerAccount models.ResellerAccount) *ResellerAccountsPostParams {
	o.SetResellerAccount(resellerAccount)
	return o
}

// SetResellerAccount adds the resellerAccount to the reseller accounts post params
func (o *ResellerAccountsPostParams) SetResellerAccount(resellerAccount models.ResellerAccount) {
	o.ResellerAccount = resellerAccount
}

// WriteToRequest writes these params to a swagger request
func (o *ResellerAccountsPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.ResellerAccount); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
