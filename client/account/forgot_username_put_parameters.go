// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/danikarik/clicksend-go/models"
)

// NewForgotUsernamePutParams creates a new ForgotUsernamePutParams object
// with the default values initialized.
func NewForgotUsernamePutParams() *ForgotUsernamePutParams {
	var ()
	return &ForgotUsernamePutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewForgotUsernamePutParamsWithTimeout creates a new ForgotUsernamePutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewForgotUsernamePutParamsWithTimeout(timeout time.Duration) *ForgotUsernamePutParams {
	var ()
	return &ForgotUsernamePutParams{

		timeout: timeout,
	}
}

// NewForgotUsernamePutParamsWithContext creates a new ForgotUsernamePutParams object
// with the default values initialized, and the ability to set a context for a request
func NewForgotUsernamePutParamsWithContext(ctx context.Context) *ForgotUsernamePutParams {
	var ()
	return &ForgotUsernamePutParams{

		Context: ctx,
	}
}

// NewForgotUsernamePutParamsWithHTTPClient creates a new ForgotUsernamePutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewForgotUsernamePutParamsWithHTTPClient(client *http.Client) *ForgotUsernamePutParams {
	var ()
	return &ForgotUsernamePutParams{
		HTTPClient: client,
	}
}

/*ForgotUsernamePutParams contains all the parameters to send to the API endpoint
for the forgot username put operation typically these are written to a http.Request
*/
type ForgotUsernamePutParams struct {

	/*ForgotUsername*/
	ForgotUsername *models.ForgotUsername

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the forgot username put params
func (o *ForgotUsernamePutParams) WithTimeout(timeout time.Duration) *ForgotUsernamePutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the forgot username put params
func (o *ForgotUsernamePutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the forgot username put params
func (o *ForgotUsernamePutParams) WithContext(ctx context.Context) *ForgotUsernamePutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the forgot username put params
func (o *ForgotUsernamePutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the forgot username put params
func (o *ForgotUsernamePutParams) WithHTTPClient(client *http.Client) *ForgotUsernamePutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the forgot username put params
func (o *ForgotUsernamePutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForgotUsername adds the forgotUsername to the forgot username put params
func (o *ForgotUsernamePutParams) WithForgotUsername(forgotUsername *models.ForgotUsername) *ForgotUsernamePutParams {
	o.SetForgotUsername(forgotUsername)
	return o
}

// SetForgotUsername adds the forgotUsername to the forgot username put params
func (o *ForgotUsernamePutParams) SetForgotUsername(forgotUsername *models.ForgotUsername) {
	o.ForgotUsername = forgotUsername
}

// WriteToRequest writes these params to a swagger request
func (o *ForgotUsernamePutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ForgotUsername != nil {
		if err := r.SetBodyParam(o.ForgotUsername); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
