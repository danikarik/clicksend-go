// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AccountVerifySendPutReader is a Reader for the AccountVerifySendPut structure.
type AccountVerifySendPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountVerifySendPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAccountVerifySendPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAccountVerifySendPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAccountVerifySendPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAccountVerifySendPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAccountVerifySendPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewAccountVerifySendPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewAccountVerifySendPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAccountVerifySendPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountVerifySendPutOK creates a AccountVerifySendPutOK with default headers values
func NewAccountVerifySendPutOK() *AccountVerifySendPutOK {
	return &AccountVerifySendPutOK{}
}

/*AccountVerifySendPutOK handles this case with default header values.

SUCCESS
*/
type AccountVerifySendPutOK struct {
	Payload string
}

func (o *AccountVerifySendPutOK) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutOK  %+v", 200, o.Payload)
}

func (o *AccountVerifySendPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutBadRequest creates a AccountVerifySendPutBadRequest with default headers values
func NewAccountVerifySendPutBadRequest() *AccountVerifySendPutBadRequest {
	return &AccountVerifySendPutBadRequest{}
}

/*AccountVerifySendPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type AccountVerifySendPutBadRequest struct {
	Payload string
}

func (o *AccountVerifySendPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutBadRequest  %+v", 400, o.Payload)
}

func (o *AccountVerifySendPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutUnauthorized creates a AccountVerifySendPutUnauthorized with default headers values
func NewAccountVerifySendPutUnauthorized() *AccountVerifySendPutUnauthorized {
	return &AccountVerifySendPutUnauthorized{}
}

/*AccountVerifySendPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type AccountVerifySendPutUnauthorized struct {
	Payload string
}

func (o *AccountVerifySendPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountVerifySendPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutForbidden creates a AccountVerifySendPutForbidden with default headers values
func NewAccountVerifySendPutForbidden() *AccountVerifySendPutForbidden {
	return &AccountVerifySendPutForbidden{}
}

/*AccountVerifySendPutForbidden handles this case with default header values.

FORBIDDEN
*/
type AccountVerifySendPutForbidden struct {
	Payload string
}

func (o *AccountVerifySendPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutForbidden  %+v", 403, o.Payload)
}

func (o *AccountVerifySendPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutNotFound creates a AccountVerifySendPutNotFound with default headers values
func NewAccountVerifySendPutNotFound() *AccountVerifySendPutNotFound {
	return &AccountVerifySendPutNotFound{}
}

/*AccountVerifySendPutNotFound handles this case with default header values.

NOT_FOUND
*/
type AccountVerifySendPutNotFound struct {
	Payload string
}

func (o *AccountVerifySendPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutNotFound  %+v", 404, o.Payload)
}

func (o *AccountVerifySendPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutMethodNotAllowed creates a AccountVerifySendPutMethodNotAllowed with default headers values
func NewAccountVerifySendPutMethodNotAllowed() *AccountVerifySendPutMethodNotAllowed {
	return &AccountVerifySendPutMethodNotAllowed{}
}

/*AccountVerifySendPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type AccountVerifySendPutMethodNotAllowed struct {
	Payload string
}

func (o *AccountVerifySendPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *AccountVerifySendPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutTooManyRequests creates a AccountVerifySendPutTooManyRequests with default headers values
func NewAccountVerifySendPutTooManyRequests() *AccountVerifySendPutTooManyRequests {
	return &AccountVerifySendPutTooManyRequests{}
}

/*AccountVerifySendPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type AccountVerifySendPutTooManyRequests struct {
	Payload string
}

func (o *AccountVerifySendPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] accountVerifySendPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *AccountVerifySendPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifySendPutDefault creates a AccountVerifySendPutDefault with default headers values
func NewAccountVerifySendPutDefault(code int) *AccountVerifySendPutDefault {
	return &AccountVerifySendPutDefault{
		_statusCode: code,
	}
}

/*AccountVerifySendPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type AccountVerifySendPutDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the account verify send put default response
func (o *AccountVerifySendPutDefault) Code() int {
	return o._statusCode
}

func (o *AccountVerifySendPutDefault) Error() string {
	return fmt.Sprintf("[PUT /account-verify/send][%d] AccountVerifySendPut default  %+v", o._statusCode, o.Payload)
}

func (o *AccountVerifySendPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
