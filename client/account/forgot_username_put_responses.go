// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ForgotUsernamePutReader is a Reader for the ForgotUsernamePut structure.
type ForgotUsernamePutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ForgotUsernamePutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewForgotUsernamePutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewForgotUsernamePutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewForgotUsernamePutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewForgotUsernamePutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewForgotUsernamePutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewForgotUsernamePutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewForgotUsernamePutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewForgotUsernamePutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewForgotUsernamePutOK creates a ForgotUsernamePutOK with default headers values
func NewForgotUsernamePutOK() *ForgotUsernamePutOK {
	return &ForgotUsernamePutOK{}
}

/*ForgotUsernamePutOK handles this case with default header values.

SUCCESS
*/
type ForgotUsernamePutOK struct {
	Payload interface{}
}

func (o *ForgotUsernamePutOK) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutOK  %+v", 200, o.Payload)
}

func (o *ForgotUsernamePutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutBadRequest creates a ForgotUsernamePutBadRequest with default headers values
func NewForgotUsernamePutBadRequest() *ForgotUsernamePutBadRequest {
	return &ForgotUsernamePutBadRequest{}
}

/*ForgotUsernamePutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type ForgotUsernamePutBadRequest struct {
	Payload interface{}
}

func (o *ForgotUsernamePutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutBadRequest  %+v", 400, o.Payload)
}

func (o *ForgotUsernamePutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutUnauthorized creates a ForgotUsernamePutUnauthorized with default headers values
func NewForgotUsernamePutUnauthorized() *ForgotUsernamePutUnauthorized {
	return &ForgotUsernamePutUnauthorized{}
}

/*ForgotUsernamePutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type ForgotUsernamePutUnauthorized struct {
	Payload interface{}
}

func (o *ForgotUsernamePutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutUnauthorized  %+v", 401, o.Payload)
}

func (o *ForgotUsernamePutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutForbidden creates a ForgotUsernamePutForbidden with default headers values
func NewForgotUsernamePutForbidden() *ForgotUsernamePutForbidden {
	return &ForgotUsernamePutForbidden{}
}

/*ForgotUsernamePutForbidden handles this case with default header values.

FORBIDDEN
*/
type ForgotUsernamePutForbidden struct {
	Payload interface{}
}

func (o *ForgotUsernamePutForbidden) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutForbidden  %+v", 403, o.Payload)
}

func (o *ForgotUsernamePutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutNotFound creates a ForgotUsernamePutNotFound with default headers values
func NewForgotUsernamePutNotFound() *ForgotUsernamePutNotFound {
	return &ForgotUsernamePutNotFound{}
}

/*ForgotUsernamePutNotFound handles this case with default header values.

NOT_FOUND
*/
type ForgotUsernamePutNotFound struct {
	Payload interface{}
}

func (o *ForgotUsernamePutNotFound) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutNotFound  %+v", 404, o.Payload)
}

func (o *ForgotUsernamePutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutMethodNotAllowed creates a ForgotUsernamePutMethodNotAllowed with default headers values
func NewForgotUsernamePutMethodNotAllowed() *ForgotUsernamePutMethodNotAllowed {
	return &ForgotUsernamePutMethodNotAllowed{}
}

/*ForgotUsernamePutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type ForgotUsernamePutMethodNotAllowed struct {
	Payload interface{}
}

func (o *ForgotUsernamePutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ForgotUsernamePutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutTooManyRequests creates a ForgotUsernamePutTooManyRequests with default headers values
func NewForgotUsernamePutTooManyRequests() *ForgotUsernamePutTooManyRequests {
	return &ForgotUsernamePutTooManyRequests{}
}

/*ForgotUsernamePutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type ForgotUsernamePutTooManyRequests struct {
	Payload interface{}
}

func (o *ForgotUsernamePutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] forgotUsernamePutTooManyRequests  %+v", 429, o.Payload)
}

func (o *ForgotUsernamePutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotUsernamePutDefault creates a ForgotUsernamePutDefault with default headers values
func NewForgotUsernamePutDefault(code int) *ForgotUsernamePutDefault {
	return &ForgotUsernamePutDefault{
		_statusCode: code,
	}
}

/*ForgotUsernamePutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type ForgotUsernamePutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the forgot username put default response
func (o *ForgotUsernamePutDefault) Code() int {
	return o._statusCode
}

func (o *ForgotUsernamePutDefault) Error() string {
	return fmt.Sprintf("[PUT /forgot-username][%d] ForgotUsernamePut default  %+v", o._statusCode, o.Payload)
}

func (o *ForgotUsernamePutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
