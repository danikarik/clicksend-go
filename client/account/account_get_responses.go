// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AccountGetReader is a Reader for the AccountGet structure.
type AccountGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAccountGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAccountGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAccountGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAccountGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAccountGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewAccountGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewAccountGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAccountGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountGetOK creates a AccountGetOK with default headers values
func NewAccountGetOK() *AccountGetOK {
	return &AccountGetOK{}
}

/*AccountGetOK handles this case with default header values.

SUCCESS
*/
type AccountGetOK struct {
	Payload string
}

func (o *AccountGetOK) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetOK  %+v", 200, o.Payload)
}

func (o *AccountGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetBadRequest creates a AccountGetBadRequest with default headers values
func NewAccountGetBadRequest() *AccountGetBadRequest {
	return &AccountGetBadRequest{}
}

/*AccountGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type AccountGetBadRequest struct {
	Payload string
}

func (o *AccountGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetBadRequest  %+v", 400, o.Payload)
}

func (o *AccountGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetUnauthorized creates a AccountGetUnauthorized with default headers values
func NewAccountGetUnauthorized() *AccountGetUnauthorized {
	return &AccountGetUnauthorized{}
}

/*AccountGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type AccountGetUnauthorized struct {
	Payload string
}

func (o *AccountGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetForbidden creates a AccountGetForbidden with default headers values
func NewAccountGetForbidden() *AccountGetForbidden {
	return &AccountGetForbidden{}
}

/*AccountGetForbidden handles this case with default header values.

FORBIDDEN
*/
type AccountGetForbidden struct {
	Payload string
}

func (o *AccountGetForbidden) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetForbidden  %+v", 403, o.Payload)
}

func (o *AccountGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetNotFound creates a AccountGetNotFound with default headers values
func NewAccountGetNotFound() *AccountGetNotFound {
	return &AccountGetNotFound{}
}

/*AccountGetNotFound handles this case with default header values.

NOT_FOUND
*/
type AccountGetNotFound struct {
	Payload string
}

func (o *AccountGetNotFound) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetNotFound  %+v", 404, o.Payload)
}

func (o *AccountGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetMethodNotAllowed creates a AccountGetMethodNotAllowed with default headers values
func NewAccountGetMethodNotAllowed() *AccountGetMethodNotAllowed {
	return &AccountGetMethodNotAllowed{}
}

/*AccountGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type AccountGetMethodNotAllowed struct {
	Payload string
}

func (o *AccountGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *AccountGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetTooManyRequests creates a AccountGetTooManyRequests with default headers values
func NewAccountGetTooManyRequests() *AccountGetTooManyRequests {
	return &AccountGetTooManyRequests{}
}

/*AccountGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type AccountGetTooManyRequests struct {
	Payload string
}

func (o *AccountGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /account][%d] accountGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *AccountGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountGetDefault creates a AccountGetDefault with default headers values
func NewAccountGetDefault(code int) *AccountGetDefault {
	return &AccountGetDefault{
		_statusCode: code,
	}
}

/*AccountGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type AccountGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the account get default response
func (o *AccountGetDefault) Code() int {
	return o._statusCode
}

func (o *AccountGetDefault) Error() string {
	return fmt.Sprintf("[GET /account][%d] AccountGet default  %+v", o._statusCode, o.Payload)
}

func (o *AccountGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
