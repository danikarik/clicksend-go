// Code generated by go-swagger; DO NOT EDIT.

package number

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// NumbersBuyByDedicatedNumberPostReader is a Reader for the NumbersBuyByDedicatedNumberPost structure.
type NumbersBuyByDedicatedNumberPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NumbersBuyByDedicatedNumberPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNumbersBuyByDedicatedNumberPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNumbersBuyByDedicatedNumberPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNumbersBuyByDedicatedNumberPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewNumbersBuyByDedicatedNumberPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewNumbersBuyByDedicatedNumberPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewNumbersBuyByDedicatedNumberPostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewNumbersBuyByDedicatedNumberPostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNumbersBuyByDedicatedNumberPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNumbersBuyByDedicatedNumberPostOK creates a NumbersBuyByDedicatedNumberPostOK with default headers values
func NewNumbersBuyByDedicatedNumberPostOK() *NumbersBuyByDedicatedNumberPostOK {
	return &NumbersBuyByDedicatedNumberPostOK{}
}

/*NumbersBuyByDedicatedNumberPostOK handles this case with default header values.

SUCCESS
*/
type NumbersBuyByDedicatedNumberPostOK struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostOK) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostOK  %+v", 200, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostBadRequest creates a NumbersBuyByDedicatedNumberPostBadRequest with default headers values
func NewNumbersBuyByDedicatedNumberPostBadRequest() *NumbersBuyByDedicatedNumberPostBadRequest {
	return &NumbersBuyByDedicatedNumberPostBadRequest{}
}

/*NumbersBuyByDedicatedNumberPostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type NumbersBuyByDedicatedNumberPostBadRequest struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostBadRequest  %+v", 400, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostUnauthorized creates a NumbersBuyByDedicatedNumberPostUnauthorized with default headers values
func NewNumbersBuyByDedicatedNumberPostUnauthorized() *NumbersBuyByDedicatedNumberPostUnauthorized {
	return &NumbersBuyByDedicatedNumberPostUnauthorized{}
}

/*NumbersBuyByDedicatedNumberPostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type NumbersBuyByDedicatedNumberPostUnauthorized struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostUnauthorized  %+v", 401, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostForbidden creates a NumbersBuyByDedicatedNumberPostForbidden with default headers values
func NewNumbersBuyByDedicatedNumberPostForbidden() *NumbersBuyByDedicatedNumberPostForbidden {
	return &NumbersBuyByDedicatedNumberPostForbidden{}
}

/*NumbersBuyByDedicatedNumberPostForbidden handles this case with default header values.

FORBIDDEN
*/
type NumbersBuyByDedicatedNumberPostForbidden struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostForbidden) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostForbidden  %+v", 403, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostNotFound creates a NumbersBuyByDedicatedNumberPostNotFound with default headers values
func NewNumbersBuyByDedicatedNumberPostNotFound() *NumbersBuyByDedicatedNumberPostNotFound {
	return &NumbersBuyByDedicatedNumberPostNotFound{}
}

/*NumbersBuyByDedicatedNumberPostNotFound handles this case with default header values.

NOT_FOUND
*/
type NumbersBuyByDedicatedNumberPostNotFound struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostNotFound) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostNotFound  %+v", 404, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostMethodNotAllowed creates a NumbersBuyByDedicatedNumberPostMethodNotAllowed with default headers values
func NewNumbersBuyByDedicatedNumberPostMethodNotAllowed() *NumbersBuyByDedicatedNumberPostMethodNotAllowed {
	return &NumbersBuyByDedicatedNumberPostMethodNotAllowed{}
}

/*NumbersBuyByDedicatedNumberPostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type NumbersBuyByDedicatedNumberPostMethodNotAllowed struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostTooManyRequests creates a NumbersBuyByDedicatedNumberPostTooManyRequests with default headers values
func NewNumbersBuyByDedicatedNumberPostTooManyRequests() *NumbersBuyByDedicatedNumberPostTooManyRequests {
	return &NumbersBuyByDedicatedNumberPostTooManyRequests{}
}

/*NumbersBuyByDedicatedNumberPostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type NumbersBuyByDedicatedNumberPostTooManyRequests struct {
	Payload interface{}
}

func (o *NumbersBuyByDedicatedNumberPostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] numbersBuyByDedicatedNumberPostTooManyRequests  %+v", 429, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNumbersBuyByDedicatedNumberPostDefault creates a NumbersBuyByDedicatedNumberPostDefault with default headers values
func NewNumbersBuyByDedicatedNumberPostDefault(code int) *NumbersBuyByDedicatedNumberPostDefault {
	return &NumbersBuyByDedicatedNumberPostDefault{
		_statusCode: code,
	}
}

/*NumbersBuyByDedicatedNumberPostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type NumbersBuyByDedicatedNumberPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the numbers buy by dedicated number post default response
func (o *NumbersBuyByDedicatedNumberPostDefault) Code() int {
	return o._statusCode
}

func (o *NumbersBuyByDedicatedNumberPostDefault) Error() string {
	return fmt.Sprintf("[POST /numbers/buy/{dedicated_number}][%d] NumbersBuyByDedicatedNumberPost default  %+v", o._statusCode, o.Payload)
}

func (o *NumbersBuyByDedicatedNumberPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
