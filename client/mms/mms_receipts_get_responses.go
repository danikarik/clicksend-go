// Code generated by go-swagger; DO NOT EDIT.

package mms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// MMSReceiptsGetReader is a Reader for the MMSReceiptsGet structure.
type MMSReceiptsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MMSReceiptsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMMSReceiptsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewMMSReceiptsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewMMSReceiptsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewMMSReceiptsGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewMMSReceiptsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewMMSReceiptsGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewMMSReceiptsGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewMMSReceiptsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMMSReceiptsGetOK creates a MMSReceiptsGetOK with default headers values
func NewMMSReceiptsGetOK() *MMSReceiptsGetOK {
	return &MMSReceiptsGetOK{}
}

/*MMSReceiptsGetOK handles this case with default header values.

SUCCESS
*/
type MMSReceiptsGetOK struct {
	Payload string
}

func (o *MMSReceiptsGetOK) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetOK  %+v", 200, o.Payload)
}

func (o *MMSReceiptsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetBadRequest creates a MMSReceiptsGetBadRequest with default headers values
func NewMMSReceiptsGetBadRequest() *MMSReceiptsGetBadRequest {
	return &MMSReceiptsGetBadRequest{}
}

/*MMSReceiptsGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type MMSReceiptsGetBadRequest struct {
	Payload string
}

func (o *MMSReceiptsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetBadRequest  %+v", 400, o.Payload)
}

func (o *MMSReceiptsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetUnauthorized creates a MMSReceiptsGetUnauthorized with default headers values
func NewMMSReceiptsGetUnauthorized() *MMSReceiptsGetUnauthorized {
	return &MMSReceiptsGetUnauthorized{}
}

/*MMSReceiptsGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type MMSReceiptsGetUnauthorized struct {
	Payload string
}

func (o *MMSReceiptsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *MMSReceiptsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetForbidden creates a MMSReceiptsGetForbidden with default headers values
func NewMMSReceiptsGetForbidden() *MMSReceiptsGetForbidden {
	return &MMSReceiptsGetForbidden{}
}

/*MMSReceiptsGetForbidden handles this case with default header values.

FORBIDDEN
*/
type MMSReceiptsGetForbidden struct {
	Payload string
}

func (o *MMSReceiptsGetForbidden) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetForbidden  %+v", 403, o.Payload)
}

func (o *MMSReceiptsGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetNotFound creates a MMSReceiptsGetNotFound with default headers values
func NewMMSReceiptsGetNotFound() *MMSReceiptsGetNotFound {
	return &MMSReceiptsGetNotFound{}
}

/*MMSReceiptsGetNotFound handles this case with default header values.

NOT_FOUND
*/
type MMSReceiptsGetNotFound struct {
	Payload string
}

func (o *MMSReceiptsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetNotFound  %+v", 404, o.Payload)
}

func (o *MMSReceiptsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetMethodNotAllowed creates a MMSReceiptsGetMethodNotAllowed with default headers values
func NewMMSReceiptsGetMethodNotAllowed() *MMSReceiptsGetMethodNotAllowed {
	return &MMSReceiptsGetMethodNotAllowed{}
}

/*MMSReceiptsGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type MMSReceiptsGetMethodNotAllowed struct {
	Payload string
}

func (o *MMSReceiptsGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *MMSReceiptsGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetTooManyRequests creates a MMSReceiptsGetTooManyRequests with default headers values
func NewMMSReceiptsGetTooManyRequests() *MMSReceiptsGetTooManyRequests {
	return &MMSReceiptsGetTooManyRequests{}
}

/*MMSReceiptsGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type MMSReceiptsGetTooManyRequests struct {
	Payload string
}

func (o *MMSReceiptsGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] mmsReceiptsGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *MMSReceiptsGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsGetDefault creates a MMSReceiptsGetDefault with default headers values
func NewMMSReceiptsGetDefault(code int) *MMSReceiptsGetDefault {
	return &MMSReceiptsGetDefault{
		_statusCode: code,
	}
}

/*MMSReceiptsGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type MMSReceiptsGetDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Mms receipts get default response
func (o *MMSReceiptsGetDefault) Code() int {
	return o._statusCode
}

func (o *MMSReceiptsGetDefault) Error() string {
	return fmt.Sprintf("[GET /mms/receipts][%d] MmsReceiptsGet default  %+v", o._statusCode, o.Payload)
}

func (o *MMSReceiptsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
