// Code generated by go-swagger; DO NOT EDIT.

package mms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// MMSReceiptsReadPutReader is a Reader for the MMSReceiptsReadPut structure.
type MMSReceiptsReadPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MMSReceiptsReadPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMMSReceiptsReadPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewMMSReceiptsReadPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewMMSReceiptsReadPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewMMSReceiptsReadPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewMMSReceiptsReadPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewMMSReceiptsReadPutMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewMMSReceiptsReadPutTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewMMSReceiptsReadPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMMSReceiptsReadPutOK creates a MMSReceiptsReadPutOK with default headers values
func NewMMSReceiptsReadPutOK() *MMSReceiptsReadPutOK {
	return &MMSReceiptsReadPutOK{}
}

/*MMSReceiptsReadPutOK handles this case with default header values.

SUCCESS
*/
type MMSReceiptsReadPutOK struct {
	Payload string
}

func (o *MMSReceiptsReadPutOK) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutOK  %+v", 200, o.Payload)
}

func (o *MMSReceiptsReadPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutBadRequest creates a MMSReceiptsReadPutBadRequest with default headers values
func NewMMSReceiptsReadPutBadRequest() *MMSReceiptsReadPutBadRequest {
	return &MMSReceiptsReadPutBadRequest{}
}

/*MMSReceiptsReadPutBadRequest handles this case with default header values.

BAD_REQUEST
*/
type MMSReceiptsReadPutBadRequest struct {
	Payload string
}

func (o *MMSReceiptsReadPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutBadRequest  %+v", 400, o.Payload)
}

func (o *MMSReceiptsReadPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutUnauthorized creates a MMSReceiptsReadPutUnauthorized with default headers values
func NewMMSReceiptsReadPutUnauthorized() *MMSReceiptsReadPutUnauthorized {
	return &MMSReceiptsReadPutUnauthorized{}
}

/*MMSReceiptsReadPutUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type MMSReceiptsReadPutUnauthorized struct {
	Payload string
}

func (o *MMSReceiptsReadPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutUnauthorized  %+v", 401, o.Payload)
}

func (o *MMSReceiptsReadPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutForbidden creates a MMSReceiptsReadPutForbidden with default headers values
func NewMMSReceiptsReadPutForbidden() *MMSReceiptsReadPutForbidden {
	return &MMSReceiptsReadPutForbidden{}
}

/*MMSReceiptsReadPutForbidden handles this case with default header values.

FORBIDDEN
*/
type MMSReceiptsReadPutForbidden struct {
	Payload string
}

func (o *MMSReceiptsReadPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutForbidden  %+v", 403, o.Payload)
}

func (o *MMSReceiptsReadPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutNotFound creates a MMSReceiptsReadPutNotFound with default headers values
func NewMMSReceiptsReadPutNotFound() *MMSReceiptsReadPutNotFound {
	return &MMSReceiptsReadPutNotFound{}
}

/*MMSReceiptsReadPutNotFound handles this case with default header values.

NOT_FOUND
*/
type MMSReceiptsReadPutNotFound struct {
	Payload string
}

func (o *MMSReceiptsReadPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutNotFound  %+v", 404, o.Payload)
}

func (o *MMSReceiptsReadPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutMethodNotAllowed creates a MMSReceiptsReadPutMethodNotAllowed with default headers values
func NewMMSReceiptsReadPutMethodNotAllowed() *MMSReceiptsReadPutMethodNotAllowed {
	return &MMSReceiptsReadPutMethodNotAllowed{}
}

/*MMSReceiptsReadPutMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type MMSReceiptsReadPutMethodNotAllowed struct {
	Payload string
}

func (o *MMSReceiptsReadPutMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *MMSReceiptsReadPutMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutTooManyRequests creates a MMSReceiptsReadPutTooManyRequests with default headers values
func NewMMSReceiptsReadPutTooManyRequests() *MMSReceiptsReadPutTooManyRequests {
	return &MMSReceiptsReadPutTooManyRequests{}
}

/*MMSReceiptsReadPutTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type MMSReceiptsReadPutTooManyRequests struct {
	Payload string
}

func (o *MMSReceiptsReadPutTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] mmsReceiptsReadPutTooManyRequests  %+v", 429, o.Payload)
}

func (o *MMSReceiptsReadPutTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMMSReceiptsReadPutDefault creates a MMSReceiptsReadPutDefault with default headers values
func NewMMSReceiptsReadPutDefault(code int) *MMSReceiptsReadPutDefault {
	return &MMSReceiptsReadPutDefault{
		_statusCode: code,
	}
}

/*MMSReceiptsReadPutDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type MMSReceiptsReadPutDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the Mms receipts read put default response
func (o *MMSReceiptsReadPutDefault) Code() int {
	return o._statusCode
}

func (o *MMSReceiptsReadPutDefault) Error() string {
	return fmt.Sprintf("[PUT /mms/receipts-read][%d] MmsReceiptsReadPut default  %+v", o._statusCode, o.Payload)
}

func (o *MMSReceiptsReadPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
