// Code generated by go-swagger; DO NOT EDIT.

package delivery_issues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeliveryIssuesGetReader is a Reader for the DeliveryIssuesGet structure.
type DeliveryIssuesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeliveryIssuesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeliveryIssuesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeliveryIssuesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeliveryIssuesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeliveryIssuesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeliveryIssuesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeliveryIssuesGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeliveryIssuesGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeliveryIssuesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeliveryIssuesGetOK creates a DeliveryIssuesGetOK with default headers values
func NewDeliveryIssuesGetOK() *DeliveryIssuesGetOK {
	return &DeliveryIssuesGetOK{}
}

/*DeliveryIssuesGetOK handles this case with default header values.

SUCCESS
*/
type DeliveryIssuesGetOK struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetOK) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetOK  %+v", 200, o.Payload)
}

func (o *DeliveryIssuesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetBadRequest creates a DeliveryIssuesGetBadRequest with default headers values
func NewDeliveryIssuesGetBadRequest() *DeliveryIssuesGetBadRequest {
	return &DeliveryIssuesGetBadRequest{}
}

/*DeliveryIssuesGetBadRequest handles this case with default header values.

BAD_REQUEST
*/
type DeliveryIssuesGetBadRequest struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetBadRequest  %+v", 400, o.Payload)
}

func (o *DeliveryIssuesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetUnauthorized creates a DeliveryIssuesGetUnauthorized with default headers values
func NewDeliveryIssuesGetUnauthorized() *DeliveryIssuesGetUnauthorized {
	return &DeliveryIssuesGetUnauthorized{}
}

/*DeliveryIssuesGetUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type DeliveryIssuesGetUnauthorized struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetUnauthorized  %+v", 401, o.Payload)
}

func (o *DeliveryIssuesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetForbidden creates a DeliveryIssuesGetForbidden with default headers values
func NewDeliveryIssuesGetForbidden() *DeliveryIssuesGetForbidden {
	return &DeliveryIssuesGetForbidden{}
}

/*DeliveryIssuesGetForbidden handles this case with default header values.

FORBIDDEN
*/
type DeliveryIssuesGetForbidden struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetForbidden  %+v", 403, o.Payload)
}

func (o *DeliveryIssuesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetNotFound creates a DeliveryIssuesGetNotFound with default headers values
func NewDeliveryIssuesGetNotFound() *DeliveryIssuesGetNotFound {
	return &DeliveryIssuesGetNotFound{}
}

/*DeliveryIssuesGetNotFound handles this case with default header values.

NOT_FOUND
*/
type DeliveryIssuesGetNotFound struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetNotFound  %+v", 404, o.Payload)
}

func (o *DeliveryIssuesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetMethodNotAllowed creates a DeliveryIssuesGetMethodNotAllowed with default headers values
func NewDeliveryIssuesGetMethodNotAllowed() *DeliveryIssuesGetMethodNotAllowed {
	return &DeliveryIssuesGetMethodNotAllowed{}
}

/*DeliveryIssuesGetMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type DeliveryIssuesGetMethodNotAllowed struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeliveryIssuesGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetTooManyRequests creates a DeliveryIssuesGetTooManyRequests with default headers values
func NewDeliveryIssuesGetTooManyRequests() *DeliveryIssuesGetTooManyRequests {
	return &DeliveryIssuesGetTooManyRequests{}
}

/*DeliveryIssuesGetTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type DeliveryIssuesGetTooManyRequests struct {
	Payload interface{}
}

func (o *DeliveryIssuesGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] deliveryIssuesGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeliveryIssuesGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesGetDefault creates a DeliveryIssuesGetDefault with default headers values
func NewDeliveryIssuesGetDefault(code int) *DeliveryIssuesGetDefault {
	return &DeliveryIssuesGetDefault{
		_statusCode: code,
	}
}

/*DeliveryIssuesGetDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type DeliveryIssuesGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the delivery issues get default response
func (o *DeliveryIssuesGetDefault) Code() int {
	return o._statusCode
}

func (o *DeliveryIssuesGetDefault) Error() string {
	return fmt.Sprintf("[GET /delivery-issues][%d] DeliveryIssuesGet default  %+v", o._statusCode, o.Payload)
}

func (o *DeliveryIssuesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
