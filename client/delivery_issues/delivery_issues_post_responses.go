// Code generated by go-swagger; DO NOT EDIT.

package delivery_issues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeliveryIssuesPostReader is a Reader for the DeliveryIssuesPost structure.
type DeliveryIssuesPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeliveryIssuesPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeliveryIssuesPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeliveryIssuesPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeliveryIssuesPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeliveryIssuesPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeliveryIssuesPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeliveryIssuesPostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeliveryIssuesPostTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeliveryIssuesPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeliveryIssuesPostOK creates a DeliveryIssuesPostOK with default headers values
func NewDeliveryIssuesPostOK() *DeliveryIssuesPostOK {
	return &DeliveryIssuesPostOK{}
}

/*DeliveryIssuesPostOK handles this case with default header values.

SUCCESS
*/
type DeliveryIssuesPostOK struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostOK) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostOK  %+v", 200, o.Payload)
}

func (o *DeliveryIssuesPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostBadRequest creates a DeliveryIssuesPostBadRequest with default headers values
func NewDeliveryIssuesPostBadRequest() *DeliveryIssuesPostBadRequest {
	return &DeliveryIssuesPostBadRequest{}
}

/*DeliveryIssuesPostBadRequest handles this case with default header values.

BAD_REQUEST
*/
type DeliveryIssuesPostBadRequest struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostBadRequest  %+v", 400, o.Payload)
}

func (o *DeliveryIssuesPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostUnauthorized creates a DeliveryIssuesPostUnauthorized with default headers values
func NewDeliveryIssuesPostUnauthorized() *DeliveryIssuesPostUnauthorized {
	return &DeliveryIssuesPostUnauthorized{}
}

/*DeliveryIssuesPostUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type DeliveryIssuesPostUnauthorized struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostUnauthorized  %+v", 401, o.Payload)
}

func (o *DeliveryIssuesPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostForbidden creates a DeliveryIssuesPostForbidden with default headers values
func NewDeliveryIssuesPostForbidden() *DeliveryIssuesPostForbidden {
	return &DeliveryIssuesPostForbidden{}
}

/*DeliveryIssuesPostForbidden handles this case with default header values.

FORBIDDEN
*/
type DeliveryIssuesPostForbidden struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostForbidden) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostForbidden  %+v", 403, o.Payload)
}

func (o *DeliveryIssuesPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostNotFound creates a DeliveryIssuesPostNotFound with default headers values
func NewDeliveryIssuesPostNotFound() *DeliveryIssuesPostNotFound {
	return &DeliveryIssuesPostNotFound{}
}

/*DeliveryIssuesPostNotFound handles this case with default header values.

NOT_FOUND
*/
type DeliveryIssuesPostNotFound struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostNotFound) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostNotFound  %+v", 404, o.Payload)
}

func (o *DeliveryIssuesPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostMethodNotAllowed creates a DeliveryIssuesPostMethodNotAllowed with default headers values
func NewDeliveryIssuesPostMethodNotAllowed() *DeliveryIssuesPostMethodNotAllowed {
	return &DeliveryIssuesPostMethodNotAllowed{}
}

/*DeliveryIssuesPostMethodNotAllowed handles this case with default header values.

METHOD_NOT_FOUND
*/
type DeliveryIssuesPostMethodNotAllowed struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeliveryIssuesPostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostTooManyRequests creates a DeliveryIssuesPostTooManyRequests with default headers values
func NewDeliveryIssuesPostTooManyRequests() *DeliveryIssuesPostTooManyRequests {
	return &DeliveryIssuesPostTooManyRequests{}
}

/*DeliveryIssuesPostTooManyRequests handles this case with default header values.

TOO_MANY_REQUESTS
*/
type DeliveryIssuesPostTooManyRequests struct {
	Payload interface{}
}

func (o *DeliveryIssuesPostTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] deliveryIssuesPostTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeliveryIssuesPostTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliveryIssuesPostDefault creates a DeliveryIssuesPostDefault with default headers values
func NewDeliveryIssuesPostDefault(code int) *DeliveryIssuesPostDefault {
	return &DeliveryIssuesPostDefault{
		_statusCode: code,
	}
}

/*DeliveryIssuesPostDefault handles this case with default header values.

INTERNAL_SERVER_ERROR
*/
type DeliveryIssuesPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the delivery issues post default response
func (o *DeliveryIssuesPostDefault) Code() int {
	return o._statusCode
}

func (o *DeliveryIssuesPostDefault) Error() string {
	return fmt.Sprintf("[POST /delivery-issues][%d] DeliveryIssuesPost default  %+v", o._statusCode, o.Payload)
}

func (o *DeliveryIssuesPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
