// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// FieldsFields From Email object.
// swagger:model Fields_fields
type FieldsFields struct {

	// Your nearest city
	AddressCity string `json:"address_city,omitempty"`

	// Your current country
	AddressCountry string `json:"address_country,omitempty"`

	// Your street address
	AddressLine1 string `json:"address_line_1,omitempty"`

	// address line 2
	AddressLine2 string `json:"address_line_2,omitempty"`

	// Your current postcode
	AddressPostalCode string `json:"address_postal_code,omitempty"`

	// Your current state
	AddressState string `json:"address_state,omitempty"`

	// custom 1
	Custom1 string `json:"custom_1,omitempty"`

	// custom 2
	Custom2 string `json:"custom_2,omitempty"`

	// custom 3
	Custom3 string `json:"custom_3,omitempty"`

	// custom 4
	Custom4 string `json:"custom_4,omitempty"`

	// Your email. Must be provided if no phone number or fax number.
	Email string `json:"email,omitempty"`

	// Your fax number. Must be provided if no phone number or email.
	FAXNumber string `json:"fax_number,omitempty"`

	// Your first name.
	FirstName string `json:"first_name,omitempty"`

	// Your last name
	LastName string `json:"last_name,omitempty"`

	// Your organisation name
	OrganizationName string `json:"organization_name,omitempty"`

	// Your phone number in E.164 format. Must be provided if no fax number or email.
	PhoneNumber string `json:"phone_number,omitempty"`
}

// Validate validates this fields fields
func (m *FieldsFields) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FieldsFields) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FieldsFields) UnmarshalBinary(b []byte) error {
	var res FieldsFields
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
